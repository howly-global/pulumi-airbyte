// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/howly-global/pulumi-airbyte/sdk/go/airbyte/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSourceGoogleDrive(ctx *pulumi.Context, args *LookupSourceGoogleDriveArgs, opts ...pulumi.InvokeOption) (*LookupSourceGoogleDriveResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSourceGoogleDriveResult
	err := ctx.Invoke("airbyte:index/getSourceGoogleDrive:getSourceGoogleDrive", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSourceGoogleDrive.
type LookupSourceGoogleDriveArgs struct {
	SourceId string `pulumi:"sourceId"`
}

// A collection of values returned by getSourceGoogleDrive.
type LookupSourceGoogleDriveResult struct {
	Configuration string `pulumi:"configuration"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	SourceId    string `pulumi:"sourceId"`
	SourceType  string `pulumi:"sourceType"`
	WorkspaceId string `pulumi:"workspaceId"`
}

func LookupSourceGoogleDriveOutput(ctx *pulumi.Context, args LookupSourceGoogleDriveOutputArgs, opts ...pulumi.InvokeOption) LookupSourceGoogleDriveResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSourceGoogleDriveResult, error) {
			args := v.(LookupSourceGoogleDriveArgs)
			r, err := LookupSourceGoogleDrive(ctx, &args, opts...)
			var s LookupSourceGoogleDriveResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSourceGoogleDriveResultOutput)
}

// A collection of arguments for invoking getSourceGoogleDrive.
type LookupSourceGoogleDriveOutputArgs struct {
	SourceId pulumi.StringInput `pulumi:"sourceId"`
}

func (LookupSourceGoogleDriveOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceGoogleDriveArgs)(nil)).Elem()
}

// A collection of values returned by getSourceGoogleDrive.
type LookupSourceGoogleDriveResultOutput struct{ *pulumi.OutputState }

func (LookupSourceGoogleDriveResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceGoogleDriveResult)(nil)).Elem()
}

func (o LookupSourceGoogleDriveResultOutput) ToLookupSourceGoogleDriveResultOutput() LookupSourceGoogleDriveResultOutput {
	return o
}

func (o LookupSourceGoogleDriveResultOutput) ToLookupSourceGoogleDriveResultOutputWithContext(ctx context.Context) LookupSourceGoogleDriveResultOutput {
	return o
}

func (o LookupSourceGoogleDriveResultOutput) Configuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceGoogleDriveResult) string { return v.Configuration }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSourceGoogleDriveResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceGoogleDriveResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSourceGoogleDriveResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceGoogleDriveResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSourceGoogleDriveResultOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceGoogleDriveResult) string { return v.SourceId }).(pulumi.StringOutput)
}

func (o LookupSourceGoogleDriveResultOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceGoogleDriveResult) string { return v.SourceType }).(pulumi.StringOutput)
}

func (o LookupSourceGoogleDriveResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceGoogleDriveResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSourceGoogleDriveResultOutput{})
}
