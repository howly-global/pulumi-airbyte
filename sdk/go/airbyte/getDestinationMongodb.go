// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/howly-global/pulumi-airbyte/sdk/go/airbyte/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupDestinationMongodb(ctx *pulumi.Context, args *LookupDestinationMongodbArgs, opts ...pulumi.InvokeOption) (*LookupDestinationMongodbResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDestinationMongodbResult
	err := ctx.Invoke("airbyte:index/getDestinationMongodb:getDestinationMongodb", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDestinationMongodb.
type LookupDestinationMongodbArgs struct {
	DestinationId string `pulumi:"destinationId"`
}

// A collection of values returned by getDestinationMongodb.
type LookupDestinationMongodbResult struct {
	Configuration   string `pulumi:"configuration"`
	DestinationId   string `pulumi:"destinationId"`
	DestinationType string `pulumi:"destinationType"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	WorkspaceId string `pulumi:"workspaceId"`
}

func LookupDestinationMongodbOutput(ctx *pulumi.Context, args LookupDestinationMongodbOutputArgs, opts ...pulumi.InvokeOption) LookupDestinationMongodbResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDestinationMongodbResult, error) {
			args := v.(LookupDestinationMongodbArgs)
			r, err := LookupDestinationMongodb(ctx, &args, opts...)
			var s LookupDestinationMongodbResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDestinationMongodbResultOutput)
}

// A collection of arguments for invoking getDestinationMongodb.
type LookupDestinationMongodbOutputArgs struct {
	DestinationId pulumi.StringInput `pulumi:"destinationId"`
}

func (LookupDestinationMongodbOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDestinationMongodbArgs)(nil)).Elem()
}

// A collection of values returned by getDestinationMongodb.
type LookupDestinationMongodbResultOutput struct{ *pulumi.OutputState }

func (LookupDestinationMongodbResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDestinationMongodbResult)(nil)).Elem()
}

func (o LookupDestinationMongodbResultOutput) ToLookupDestinationMongodbResultOutput() LookupDestinationMongodbResultOutput {
	return o
}

func (o LookupDestinationMongodbResultOutput) ToLookupDestinationMongodbResultOutputWithContext(ctx context.Context) LookupDestinationMongodbResultOutput {
	return o
}

func (o LookupDestinationMongodbResultOutput) Configuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationMongodbResult) string { return v.Configuration }).(pulumi.StringOutput)
}

func (o LookupDestinationMongodbResultOutput) DestinationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationMongodbResult) string { return v.DestinationId }).(pulumi.StringOutput)
}

func (o LookupDestinationMongodbResultOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationMongodbResult) string { return v.DestinationType }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDestinationMongodbResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationMongodbResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDestinationMongodbResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationMongodbResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupDestinationMongodbResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationMongodbResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDestinationMongodbResultOutput{})
}
