// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/howly-global/pulumi-airbyte/sdk/go/airbyte/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSourceFirebolt(ctx *pulumi.Context, args *LookupSourceFireboltArgs, opts ...pulumi.InvokeOption) (*LookupSourceFireboltResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSourceFireboltResult
	err := ctx.Invoke("airbyte:index/getSourceFirebolt:getSourceFirebolt", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSourceFirebolt.
type LookupSourceFireboltArgs struct {
	SourceId string `pulumi:"sourceId"`
}

// A collection of values returned by getSourceFirebolt.
type LookupSourceFireboltResult struct {
	Configuration string `pulumi:"configuration"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	SourceId    string `pulumi:"sourceId"`
	SourceType  string `pulumi:"sourceType"`
	WorkspaceId string `pulumi:"workspaceId"`
}

func LookupSourceFireboltOutput(ctx *pulumi.Context, args LookupSourceFireboltOutputArgs, opts ...pulumi.InvokeOption) LookupSourceFireboltResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSourceFireboltResult, error) {
			args := v.(LookupSourceFireboltArgs)
			r, err := LookupSourceFirebolt(ctx, &args, opts...)
			var s LookupSourceFireboltResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSourceFireboltResultOutput)
}

// A collection of arguments for invoking getSourceFirebolt.
type LookupSourceFireboltOutputArgs struct {
	SourceId pulumi.StringInput `pulumi:"sourceId"`
}

func (LookupSourceFireboltOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceFireboltArgs)(nil)).Elem()
}

// A collection of values returned by getSourceFirebolt.
type LookupSourceFireboltResultOutput struct{ *pulumi.OutputState }

func (LookupSourceFireboltResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceFireboltResult)(nil)).Elem()
}

func (o LookupSourceFireboltResultOutput) ToLookupSourceFireboltResultOutput() LookupSourceFireboltResultOutput {
	return o
}

func (o LookupSourceFireboltResultOutput) ToLookupSourceFireboltResultOutputWithContext(ctx context.Context) LookupSourceFireboltResultOutput {
	return o
}

func (o LookupSourceFireboltResultOutput) Configuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceFireboltResult) string { return v.Configuration }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSourceFireboltResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceFireboltResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSourceFireboltResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceFireboltResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSourceFireboltResultOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceFireboltResult) string { return v.SourceId }).(pulumi.StringOutput)
}

func (o LookupSourceFireboltResultOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceFireboltResult) string { return v.SourceType }).(pulumi.StringOutput)
}

func (o LookupSourceFireboltResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceFireboltResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSourceFireboltResultOutput{})
}
