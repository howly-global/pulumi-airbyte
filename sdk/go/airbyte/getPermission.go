// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/howly-global/pulumi-airbyte/sdk/go/airbyte/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupPermission(ctx *pulumi.Context, args *LookupPermissionArgs, opts ...pulumi.InvokeOption) (*LookupPermissionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPermissionResult
	err := ctx.Invoke("airbyte:index/getPermission:getPermission", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPermission.
type LookupPermissionArgs struct {
	PermissionId string `pulumi:"permissionId"`
}

// A collection of values returned by getPermission.
type LookupPermissionResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id             string `pulumi:"id"`
	OrganizationId string `pulumi:"organizationId"`
	PermissionId   string `pulumi:"permissionId"`
	PermissionType string `pulumi:"permissionType"`
	UserId         string `pulumi:"userId"`
	WorkspaceId    string `pulumi:"workspaceId"`
}

func LookupPermissionOutput(ctx *pulumi.Context, args LookupPermissionOutputArgs, opts ...pulumi.InvokeOption) LookupPermissionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPermissionResult, error) {
			args := v.(LookupPermissionArgs)
			r, err := LookupPermission(ctx, &args, opts...)
			var s LookupPermissionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPermissionResultOutput)
}

// A collection of arguments for invoking getPermission.
type LookupPermissionOutputArgs struct {
	PermissionId pulumi.StringInput `pulumi:"permissionId"`
}

func (LookupPermissionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPermissionArgs)(nil)).Elem()
}

// A collection of values returned by getPermission.
type LookupPermissionResultOutput struct{ *pulumi.OutputState }

func (LookupPermissionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPermissionResult)(nil)).Elem()
}

func (o LookupPermissionResultOutput) ToLookupPermissionResultOutput() LookupPermissionResultOutput {
	return o
}

func (o LookupPermissionResultOutput) ToLookupPermissionResultOutputWithContext(ctx context.Context) LookupPermissionResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPermissionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPermissionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPermissionResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPermissionResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o LookupPermissionResultOutput) PermissionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPermissionResult) string { return v.PermissionId }).(pulumi.StringOutput)
}

func (o LookupPermissionResultOutput) PermissionType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPermissionResult) string { return v.PermissionType }).(pulumi.StringOutput)
}

func (o LookupPermissionResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPermissionResult) string { return v.UserId }).(pulumi.StringOutput)
}

func (o LookupPermissionResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPermissionResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPermissionResultOutput{})
}
