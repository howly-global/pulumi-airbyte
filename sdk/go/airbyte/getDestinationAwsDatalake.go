// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/howly-global/pulumi-airbyte/sdk/go/airbyte/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupDestinationAwsDatalake(ctx *pulumi.Context, args *LookupDestinationAwsDatalakeArgs, opts ...pulumi.InvokeOption) (*LookupDestinationAwsDatalakeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDestinationAwsDatalakeResult
	err := ctx.Invoke("airbyte:index/getDestinationAwsDatalake:getDestinationAwsDatalake", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDestinationAwsDatalake.
type LookupDestinationAwsDatalakeArgs struct {
	DestinationId string `pulumi:"destinationId"`
}

// A collection of values returned by getDestinationAwsDatalake.
type LookupDestinationAwsDatalakeResult struct {
	Configuration   string `pulumi:"configuration"`
	DestinationId   string `pulumi:"destinationId"`
	DestinationType string `pulumi:"destinationType"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	WorkspaceId string `pulumi:"workspaceId"`
}

func LookupDestinationAwsDatalakeOutput(ctx *pulumi.Context, args LookupDestinationAwsDatalakeOutputArgs, opts ...pulumi.InvokeOption) LookupDestinationAwsDatalakeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDestinationAwsDatalakeResult, error) {
			args := v.(LookupDestinationAwsDatalakeArgs)
			r, err := LookupDestinationAwsDatalake(ctx, &args, opts...)
			var s LookupDestinationAwsDatalakeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDestinationAwsDatalakeResultOutput)
}

// A collection of arguments for invoking getDestinationAwsDatalake.
type LookupDestinationAwsDatalakeOutputArgs struct {
	DestinationId pulumi.StringInput `pulumi:"destinationId"`
}

func (LookupDestinationAwsDatalakeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDestinationAwsDatalakeArgs)(nil)).Elem()
}

// A collection of values returned by getDestinationAwsDatalake.
type LookupDestinationAwsDatalakeResultOutput struct{ *pulumi.OutputState }

func (LookupDestinationAwsDatalakeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDestinationAwsDatalakeResult)(nil)).Elem()
}

func (o LookupDestinationAwsDatalakeResultOutput) ToLookupDestinationAwsDatalakeResultOutput() LookupDestinationAwsDatalakeResultOutput {
	return o
}

func (o LookupDestinationAwsDatalakeResultOutput) ToLookupDestinationAwsDatalakeResultOutputWithContext(ctx context.Context) LookupDestinationAwsDatalakeResultOutput {
	return o
}

func (o LookupDestinationAwsDatalakeResultOutput) Configuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationAwsDatalakeResult) string { return v.Configuration }).(pulumi.StringOutput)
}

func (o LookupDestinationAwsDatalakeResultOutput) DestinationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationAwsDatalakeResult) string { return v.DestinationId }).(pulumi.StringOutput)
}

func (o LookupDestinationAwsDatalakeResultOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationAwsDatalakeResult) string { return v.DestinationType }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDestinationAwsDatalakeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationAwsDatalakeResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDestinationAwsDatalakeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationAwsDatalakeResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupDestinationAwsDatalakeResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationAwsDatalakeResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDestinationAwsDatalakeResultOutput{})
}
