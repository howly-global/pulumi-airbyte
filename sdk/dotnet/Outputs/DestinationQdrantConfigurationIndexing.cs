// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Outputs
{

    [OutputType]
    public sealed class DestinationQdrantConfigurationIndexing
    {
        /// <summary>
        /// Method to authenticate with the Qdrant Instance
        /// </summary>
        public readonly Outputs.DestinationQdrantConfigurationIndexingAuthMethod? AuthMethod;
        /// <summary>
        /// The collection to load data into
        /// </summary>
        public readonly string Collection;
        /// <summary>
        /// The Distance metric used to measure similarities among vectors. This field is only used if the collection defined in the does not exist yet and is created automatically by the connector. must be one of ["dot", "cos", "euc"]; Default: "cos"
        /// </summary>
        public readonly string? DistanceMetric;
        /// <summary>
        /// Whether to prefer gRPC over HTTP. Set to true for Qdrant cloud clusters. Default: true
        /// </summary>
        public readonly bool? PreferGrpc;
        /// <summary>
        /// The field in the payload that contains the embedded text. Default: "text"
        /// </summary>
        public readonly string? TextField;
        /// <summary>
        /// Public Endpoint of the Qdrant cluser
        /// </summary>
        public readonly string Url;

        [OutputConstructor]
        private DestinationQdrantConfigurationIndexing(
            Outputs.DestinationQdrantConfigurationIndexingAuthMethod? authMethod,

            string collection,

            string? distanceMetric,

            bool? preferGrpc,

            string? textField,

            string url)
        {
            AuthMethod = authMethod;
            Collection = collection;
            DistanceMetric = distanceMetric;
            PreferGrpc = preferGrpc;
            TextField = textField;
            Url = url;
        }
    }
}
