// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Outputs
{

    [OutputType]
    public sealed class SourceMysqlConfigurationReplicationMethodReadChangesUsingBinaryLogCdc
    {
        /// <summary>
        /// The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 300 seconds. Valid range: 120 seconds to 1200 seconds. Read about &lt;a href="https://docs.airbyte.com/integrations/sources/mysql/#change-data-capture-cdc"&gt;initial waiting time&lt;/a&gt;. Default: 300
        /// </summary>
        public readonly int? InitialWaitingSeconds;
        /// <summary>
        /// Determines whether Airbyte should fail or re-sync data in case of an stale/invalid cursor value into the WAL. If 'Fail sync' is chosen, a user will have to manually reset the connection before being able to continue syncing data. If 'Re-sync data' is chosen, Airbyte will automatically trigger a refresh but could lead to higher cloud costs and data loss. must be one of ["Fail sync", "Re-sync data"]; Default: "Fail sync"
        /// </summary>
        public readonly string? InvalidCdcCursorPositionBehavior;
        /// <summary>
        /// Enter the configured MySQL server timezone. This should only be done if the configured timezone in your MySQL instance does not conform to IANNA standard.
        /// </summary>
        public readonly string? ServerTimeZone;

        [OutputConstructor]
        private SourceMysqlConfigurationReplicationMethodReadChangesUsingBinaryLogCdc(
            int? initialWaitingSeconds,

            string? invalidCdcCursorPositionBehavior,

            string? serverTimeZone)
        {
            InitialWaitingSeconds = initialWaitingSeconds;
            InvalidCdcCursorPositionBehavior = invalidCdcCursorPositionBehavior;
            ServerTimeZone = serverTimeZone;
        }
    }
}
