// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Outputs
{

    [OutputType]
    public sealed class DestinationBigqueryConfigurationLoadingMethodGcsStaging
    {
        /// <summary>
        /// An HMAC key is a type of credential and can be associated with a service account or a user account in Cloud Storage. Read more &lt;a href="https://cloud.google.com/storage/docs/authentication/hmackeys"&gt;here&lt;/a&gt;.
        /// </summary>
        public readonly Outputs.DestinationBigqueryConfigurationLoadingMethodGcsStagingCredential Credential;
        /// <summary>
        /// The name of the GCS bucket. Read more &lt;a href="https://cloud.google.com/storage/docs/naming-buckets"&gt;here&lt;/a&gt;.
        /// </summary>
        public readonly string GcsBucketName;
        /// <summary>
        /// Directory under the GCS bucket where data will be written.
        /// </summary>
        public readonly string GcsBucketPath;
        /// <summary>
        /// This upload method is supposed to temporary store records in GCS bucket. By this select you can chose if these records should be removed from GCS when migration has finished. The default "Delete all tmp files from GCS" value is used if not set explicitly. must be one of ["Delete all tmp files from GCS", "Keep all tmp files in GCS"]; Default: "Delete all tmp files from GCS"
        /// </summary>
        public readonly string? KeepFilesInGcsBucket;

        [OutputConstructor]
        private DestinationBigqueryConfigurationLoadingMethodGcsStaging(
            Outputs.DestinationBigqueryConfigurationLoadingMethodGcsStagingCredential credential,

            string gcsBucketName,

            string gcsBucketPath,

            string? keepFilesInGcsBucket)
        {
            Credential = credential;
            GcsBucketName = gcsBucketName;
            GcsBucketPath = gcsBucketPath;
            KeepFilesInGcsBucket = keepFilesInGcsBucket;
        }
    }
}
