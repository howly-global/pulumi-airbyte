// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Outputs
{

    [OutputType]
    public sealed class SourceOrbConfiguration
    {
        /// <summary>
        /// Orb API Key, issued from the Orb admin console.
        /// </summary>
        public readonly string ApiKey;
        /// <summary>
        /// UTC date and time in the format 2022-03-01T00:00:00Z. Any data with created_at after this data will not be synced. For Subscription Usage, this becomes the `timeframe_start` API parameter.
        /// </summary>
        public readonly string? EndDate;
        /// <summary>
        /// When set to N, the connector will always refresh resources created within the past N days. By default, updated objects that are not newly created are not incrementally synced. Default: 0
        /// </summary>
        public readonly int? LookbackWindowDays;
        /// <summary>
        /// Property key names to extract from all events, in order to enrich ledger entries corresponding to an event deduction.
        /// </summary>
        public readonly ImmutableArray<string> NumericEventPropertiesKeys;
        /// <summary>
        /// Orb Plan ID to filter subscriptions that should have usage fetched.
        /// </summary>
        public readonly string? PlanId;
        /// <summary>
        /// UTC date and time in the format 2022-03-01T00:00:00Z. Any data with created_at before this data will not be synced. For Subscription Usage, this becomes the `timeframe_start` API parameter.
        /// </summary>
        public readonly string StartDate;
        /// <summary>
        /// Property key names to extract from all events, in order to enrich ledger entries corresponding to an event deduction.
        /// </summary>
        public readonly ImmutableArray<string> StringEventPropertiesKeys;
        /// <summary>
        /// Property key name to group subscription usage by.
        /// </summary>
        public readonly string? SubscriptionUsageGroupingKey;

        [OutputConstructor]
        private SourceOrbConfiguration(
            string apiKey,

            string? endDate,

            int? lookbackWindowDays,

            ImmutableArray<string> numericEventPropertiesKeys,

            string? planId,

            string startDate,

            ImmutableArray<string> stringEventPropertiesKeys,

            string? subscriptionUsageGroupingKey)
        {
            ApiKey = apiKey;
            EndDate = endDate;
            LookbackWindowDays = lookbackWindowDays;
            NumericEventPropertiesKeys = numericEventPropertiesKeys;
            PlanId = planId;
            StartDate = startDate;
            StringEventPropertiesKeys = stringEventPropertiesKeys;
            SubscriptionUsageGroupingKey = subscriptionUsageGroupingKey;
        }
    }
}
