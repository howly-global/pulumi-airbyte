// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Outputs
{

    [OutputType]
    public sealed class SourcePostgresConfigurationSslMode
    {
        /// <summary>
        /// Enables encryption only when required by the source database.
        /// </summary>
        public readonly Outputs.SourcePostgresConfigurationSslModeAllow? Allow;
        /// <summary>
        /// Disables encryption of communication between Airbyte and source database.
        /// </summary>
        public readonly Outputs.SourcePostgresConfigurationSslModeDisable? Disable;
        /// <summary>
        /// Allows unencrypted connection only if the source database does not support encryption.
        /// </summary>
        public readonly Outputs.SourcePostgresConfigurationSslModePrefer? Prefer;
        /// <summary>
        /// Always require encryption. If the source database server does not support encryption, connection will fail.
        /// </summary>
        public readonly Outputs.SourcePostgresConfigurationSslModeRequire? Require;
        /// <summary>
        /// Always require encryption and verifies that the source database server has a valid SSL certificate.
        /// </summary>
        public readonly Outputs.SourcePostgresConfigurationSslModeVerifyCa? VerifyCa;
        /// <summary>
        /// This is the most secure mode. Always require encryption and verifies the identity of the source database server.
        /// </summary>
        public readonly Outputs.SourcePostgresConfigurationSslModeVerifyFull? VerifyFull;

        [OutputConstructor]
        private SourcePostgresConfigurationSslMode(
            Outputs.SourcePostgresConfigurationSslModeAllow? allow,

            Outputs.SourcePostgresConfigurationSslModeDisable? disable,

            Outputs.SourcePostgresConfigurationSslModePrefer? prefer,

            Outputs.SourcePostgresConfigurationSslModeRequire? require,

            Outputs.SourcePostgresConfigurationSslModeVerifyCa? verifyCa,

            Outputs.SourcePostgresConfigurationSslModeVerifyFull? verifyFull)
        {
            Allow = allow;
            Disable = disable;
            Prefer = prefer;
            Require = require;
            VerifyCa = verifyCa;
            VerifyFull = verifyFull;
        }
    }
}
