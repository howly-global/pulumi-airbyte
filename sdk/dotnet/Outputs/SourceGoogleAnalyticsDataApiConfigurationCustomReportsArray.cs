// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Outputs
{

    [OutputType]
    public sealed class SourceGoogleAnalyticsDataApiConfigurationCustomReportsArray
    {
        /// <summary>
        /// Cohort reports creates a time series of user retention for the cohort.
        /// </summary>
        public readonly Outputs.SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpec? CohortSpec;
        /// <summary>
        /// Dimensions filter
        /// </summary>
        public readonly Outputs.SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilter? DimensionFilter;
        /// <summary>
        /// A list of dimensions.
        /// </summary>
        public readonly ImmutableArray<string> Dimensions;
        /// <summary>
        /// Metrics filter
        /// </summary>
        public readonly Outputs.SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilter? MetricFilter;
        /// <summary>
        /// A list of metrics.
        /// </summary>
        public readonly ImmutableArray<string> Metrics;
        /// <summary>
        /// The name of the custom report, this name would be used as stream name.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private SourceGoogleAnalyticsDataApiConfigurationCustomReportsArray(
            Outputs.SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpec? cohortSpec,

            Outputs.SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilter? dimensionFilter,

            ImmutableArray<string> dimensions,

            Outputs.SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilter? metricFilter,

            ImmutableArray<string> metrics,

            string name)
        {
            CohortSpec = cohortSpec;
            DimensionFilter = dimensionFilter;
            Dimensions = dimensions;
            MetricFilter = metricFilter;
            Metrics = metrics;
            Name = name;
        }
    }
}
