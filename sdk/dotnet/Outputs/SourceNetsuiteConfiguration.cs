// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Outputs
{

    [OutputType]
    public sealed class SourceNetsuiteConfiguration
    {
        /// <summary>
        /// Consumer key associated with your integration
        /// </summary>
        public readonly string ConsumerKey;
        /// <summary>
        /// Consumer secret associated with your integration
        /// </summary>
        public readonly string ConsumerSecret;
        /// <summary>
        /// The API names of the Netsuite objects you want to sync. Setting this speeds up the connection setup process by limiting the number of schemas that need to be retrieved from Netsuite.
        /// </summary>
        public readonly ImmutableArray<string> ObjectTypes;
        /// <summary>
        /// Netsuite realm e.g. 2344535, as for `production` or 2344535_SB1, as for the `sandbox`
        /// </summary>
        public readonly string Realm;
        /// <summary>
        /// Starting point for your data replication, in format of "YYYY-MM-DDTHH:mm:ssZ"
        /// </summary>
        public readonly string StartDatetime;
        /// <summary>
        /// Access token key
        /// </summary>
        public readonly string TokenKey;
        /// <summary>
        /// Access token secret
        /// </summary>
        public readonly string TokenSecret;
        /// <summary>
        /// The amount of days used to query the data with date chunks. Set smaller value, if you have lots of data. Default: 30
        /// </summary>
        public readonly int? WindowInDays;

        [OutputConstructor]
        private SourceNetsuiteConfiguration(
            string consumerKey,

            string consumerSecret,

            ImmutableArray<string> objectTypes,

            string realm,

            string startDatetime,

            string tokenKey,

            string tokenSecret,

            int? windowInDays)
        {
            ConsumerKey = consumerKey;
            ConsumerSecret = consumerSecret;
            ObjectTypes = objectTypes;
            Realm = realm;
            StartDatetime = startDatetime;
            TokenKey = tokenKey;
            TokenSecret = tokenSecret;
            WindowInDays = windowInDays;
        }
    }
}
