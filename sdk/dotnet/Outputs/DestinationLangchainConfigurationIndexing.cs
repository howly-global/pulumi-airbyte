// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Outputs
{

    [OutputType]
    public sealed class DestinationLangchainConfigurationIndexing
    {
        /// <summary>
        /// Chroma is a popular vector store that can be used to store and retrieve embeddings. It will build its index in memory and persist it to disk by the end of the sync.
        /// </summary>
        public readonly Outputs.DestinationLangchainConfigurationIndexingChromaLocalPersistance? ChromaLocalPersistance;
        /// <summary>
        /// DocArrayHnswSearch is a lightweight Document Index implementation provided by Docarray that runs fully locally and is best suited for small- to medium-sized datasets. It stores vectors on disk in hnswlib, and stores all other data in SQLite.
        /// </summary>
        public readonly Outputs.DestinationLangchainConfigurationIndexingDocArrayHnswSearch? DocArrayHnswSearch;
        /// <summary>
        /// Pinecone is a popular vector store that can be used to store and retrieve embeddings. It is a managed service and can also be queried from outside of langchain.
        /// </summary>
        public readonly Outputs.DestinationLangchainConfigurationIndexingPinecone? Pinecone;

        [OutputConstructor]
        private DestinationLangchainConfigurationIndexing(
            Outputs.DestinationLangchainConfigurationIndexingChromaLocalPersistance? chromaLocalPersistance,

            Outputs.DestinationLangchainConfigurationIndexingDocArrayHnswSearch? docArrayHnswSearch,

            Outputs.DestinationLangchainConfigurationIndexingPinecone? pinecone)
        {
            ChromaLocalPersistance = chromaLocalPersistance;
            DocArrayHnswSearch = docArrayHnswSearch;
            Pinecone = pinecone;
        }
    }
}
