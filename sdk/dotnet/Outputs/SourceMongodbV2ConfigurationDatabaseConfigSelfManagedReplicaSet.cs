// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Outputs
{

    [OutputType]
    public sealed class SourceMongodbV2ConfigurationDatabaseConfigSelfManagedReplicaSet
    {
        /// <summary>
        /// Parsed as JSON.
        /// </summary>
        public readonly string? AdditionalProperties;
        /// <summary>
        /// The authentication source where the user information is stored. Default: "admin"
        /// </summary>
        public readonly string? AuthSource;
        /// <summary>
        /// The connection string of the cluster that you want to replicate.  https://www.mongodb.com/docs/manual/reference/connection-string/#find-your-self-hosted-deployment-s-connection-string for more information.
        /// </summary>
        public readonly string ConnectionString;
        /// <summary>
        /// The name of the MongoDB database that contains the collection(s) to replicate.
        /// </summary>
        public readonly string Database;
        /// <summary>
        /// The password associated with this username.
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// When enabled, syncs will validate and structure records against the stream's schema. Default: true
        /// </summary>
        public readonly bool? SchemaEnforced;
        /// <summary>
        /// The username which is used to access the database.
        /// </summary>
        public readonly string? Username;

        [OutputConstructor]
        private SourceMongodbV2ConfigurationDatabaseConfigSelfManagedReplicaSet(
            string? additionalProperties,

            string? authSource,

            string connectionString,

            string database,

            string? password,

            bool? schemaEnforced,

            string? username)
        {
            AdditionalProperties = additionalProperties;
            AuthSource = authSource;
            ConnectionString = connectionString;
            Database = database;
            Password = password;
            SchemaEnforced = schemaEnforced;
            Username = username;
        }
    }
}
