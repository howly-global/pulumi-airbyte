// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Outputs
{

    [OutputType]
    public sealed class SourceCoinApiConfiguration
    {
        /// <summary>
        /// API Key
        /// </summary>
        public readonly string ApiKey;
        /// <summary>
        /// The end date in ISO 8601 format. If not supplied, data will be returned
        /// from the start date to the current time, or when the count of result
        /// elements reaches its limit.
        /// </summary>
        public readonly string? EndDate;
        /// <summary>
        /// The environment to use. Either sandbox or production.
        /// 
        /// must be one of ["sandbox", "production"]; Default: "sandbox"
        /// </summary>
        public readonly string? Environment;
        /// <summary>
        /// The maximum number of elements to return. If not supplied, the default
        /// is 100. For numbers larger than 100, each 100 items is counted as one
        /// request for pricing purposes. Maximum value is 100000.
        /// 
        /// Default: 100
        /// </summary>
        public readonly int? Limit;
        /// <summary>
        /// The period to use. See the documentation for a list. https://docs.coinapi.io/#list-all-periods-get
        /// </summary>
        public readonly string Period;
        /// <summary>
        /// The start date in ISO 8601 format.
        /// </summary>
        public readonly string StartDate;
        /// <summary>
        /// The symbol ID to use. See the documentation for a list.
        /// https://docs.coinapi.io/#list-all-symbols-get
        /// </summary>
        public readonly string SymbolId;

        [OutputConstructor]
        private SourceCoinApiConfiguration(
            string apiKey,

            string? endDate,

            string? environment,

            int? limit,

            string period,

            string startDate,

            string symbolId)
        {
            ApiKey = apiKey;
            EndDate = endDate;
            Environment = environment;
            Limit = limit;
            Period = period;
            StartDate = startDate;
            SymbolId = symbolId;
        }
    }
}
