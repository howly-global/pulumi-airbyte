// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Inputs
{

    public sealed class SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The character delimiting individual cells in the CSV data. This may only be a 1-character string. For tab-delimited data enter '\t'. Default: ","
        /// </summary>
        [Input("delimiter")]
        public Input<string>? Delimiter { get; set; }

        /// <summary>
        /// Whether two quotes in a quoted CSV value denote a single quote in the data. Default: true
        /// </summary>
        [Input("doubleQuote")]
        public Input<bool>? DoubleQuote { get; set; }

        /// <summary>
        /// The character encoding of the CSV data. Leave blank to default to &lt;strong&gt;UTF8&lt;/strong&gt;. See &lt;a href="https://docs.python.org/3/library/codecs.html#standard-encodings" target="_blank"&gt;list of python encodings&lt;/a&gt; for allowable options. Default: "utf8"
        /// </summary>
        [Input("encoding")]
        public Input<string>? Encoding { get; set; }

        /// <summary>
        /// The character used for escaping special characters. To disallow escaping, leave this field blank.
        /// </summary>
        [Input("escapeChar")]
        public Input<string>? EscapeChar { get; set; }

        [Input("falseValues")]
        private InputList<string>? _falseValues;

        /// <summary>
        /// A set of case-sensitive strings that should be interpreted as false values.
        /// </summary>
        public InputList<string> FalseValues
        {
            get => _falseValues ?? (_falseValues = new InputList<string>());
            set => _falseValues = value;
        }

        /// <summary>
        /// How headers will be defined. `User Provided` assumes the CSV does not have a header row and uses the headers provided and `Autogenerated` assumes the CSV does not have a header row and the CDK will generate headers using for `f{i}` where `i` is the index starting from 0. Else, the default behavior is to use the header from the CSV file. If a user wants to autogenerate or provide column names for a CSV having headers, they can skip rows.
        /// </summary>
        [Input("headerDefinition")]
        public Input<Inputs.SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatHeaderDefinitionGetArgs>? HeaderDefinition { get; set; }

        /// <summary>
        /// Whether to ignore errors that occur when the number of fields in the CSV does not match the number of columns in the schema. Default: false
        /// </summary>
        [Input("ignoreErrorsOnFieldsMismatch")]
        public Input<bool>? IgnoreErrorsOnFieldsMismatch { get; set; }

        [Input("nullValues")]
        private InputList<string>? _nullValues;

        /// <summary>
        /// A set of case-sensitive strings that should be interpreted as null values. For example, if the value 'NA' should be interpreted as null, enter 'NA' in this field.
        /// </summary>
        public InputList<string> NullValues
        {
            get => _nullValues ?? (_nullValues = new InputList<string>());
            set => _nullValues = value;
        }

        /// <summary>
        /// The character used for quoting CSV values. To disallow quoting, make this field blank. Default: "\""
        /// </summary>
        [Input("quoteChar")]
        public Input<string>? QuoteChar { get; set; }

        /// <summary>
        /// The number of rows to skip after the header row. Default: 0
        /// </summary>
        [Input("skipRowsAfterHeader")]
        public Input<int>? SkipRowsAfterHeader { get; set; }

        /// <summary>
        /// The number of rows to skip before the header row. For example, if the header row is on the 3rd row, enter 2 in this field. Default: 0
        /// </summary>
        [Input("skipRowsBeforeHeader")]
        public Input<int>? SkipRowsBeforeHeader { get; set; }

        /// <summary>
        /// Whether strings can be interpreted as null values. If true, strings that match the null_values set will be interpreted as null. If false, strings that match the null_values set will be interpreted as the string itself. Default: true
        /// </summary>
        [Input("stringsCanBeNull")]
        public Input<bool>? StringsCanBeNull { get; set; }

        [Input("trueValues")]
        private InputList<string>? _trueValues;

        /// <summary>
        /// A set of case-sensitive strings that should be interpreted as true values.
        /// </summary>
        public InputList<string> TrueValues
        {
            get => _trueValues ?? (_trueValues = new InputList<string>());
            set => _trueValues = value;
        }

        public SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatGetArgs()
        {
        }
        public static new SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatGetArgs Empty => new SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatGetArgs();
    }
}
