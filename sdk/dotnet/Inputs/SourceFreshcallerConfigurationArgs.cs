// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Inputs
{

    public sealed class SourceFreshcallerConfigurationArgs : global::Pulumi.ResourceArgs
    {
        [Input("apiKey", required: true)]
        private Input<string>? _apiKey;

        /// <summary>
        /// Freshcaller API Key. See the &lt;a href="https://docs.airbyte.com/integrations/sources/freshcaller"&gt;docs&lt;/a&gt; for more information on how to obtain this key.
        /// </summary>
        public Input<string>? ApiKey
        {
            get => _apiKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Used to construct Base URL for the Freshcaller APIs
        /// </summary>
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        /// <summary>
        /// The number of requests per minute that this source allowed to use. There is a rate limit of 50 requests per minute per app per account.
        /// </summary>
        [Input("requestsPerMinute")]
        public Input<int>? RequestsPerMinute { get; set; }

        /// <summary>
        /// UTC date and time. Any data created after this date will be replicated.
        /// </summary>
        [Input("startDate")]
        public Input<string>? StartDate { get; set; }

        /// <summary>
        /// Lag in minutes for each sync, i.e., at time T, data for the time range [prev_sync_time, T-30] will be fetched
        /// </summary>
        [Input("syncLagMinutes")]
        public Input<int>? SyncLagMinutes { get; set; }

        public SourceFreshcallerConfigurationArgs()
        {
        }
        public static new SourceFreshcallerConfigurationArgs Empty => new SourceFreshcallerConfigurationArgs();
    }
}
