// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Inputs
{

    public sealed class DestinationRedshiftConfigurationUploadingMethodAwss3StagingEncryptionAescbcEnvelopeEncryptionArgs : global::Pulumi.ResourceArgs
    {
        [Input("keyEncryptingKey")]
        private Input<string>? _keyEncryptingKey;

        /// <summary>
        /// The key, base64-encoded. Must be either 128, 192, or 256 bits. Leave blank to have Airbyte generate an ephemeral key for each sync.
        /// </summary>
        public Input<string>? KeyEncryptingKey
        {
            get => _keyEncryptingKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _keyEncryptingKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public DestinationRedshiftConfigurationUploadingMethodAwss3StagingEncryptionAescbcEnvelopeEncryptionArgs()
        {
        }
        public static new DestinationRedshiftConfigurationUploadingMethodAwss3StagingEncryptionAescbcEnvelopeEncryptionArgs Empty => new DestinationRedshiftConfigurationUploadingMethodAwss3StagingEncryptionAescbcEnvelopeEncryptionArgs();
    }
}
