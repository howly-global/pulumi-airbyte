// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Inputs
{

    public sealed class SourceOracleConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Connect data that will be used for DB connection
        /// </summary>
        [Input("connectionData")]
        public Input<Inputs.SourceOracleConfigurationConnectionDataArgs>? ConnectionData { get; set; }

        /// <summary>
        /// The encryption method with is used when communicating with the database.
        /// </summary>
        [Input("encryption", required: true)]
        public Input<Inputs.SourceOracleConfigurationEncryptionArgs> Encryption { get; set; } = null!;

        /// <summary>
        /// Hostname of the database.
        /// </summary>
        [Input("host", required: true)]
        public Input<string> Host { get; set; } = null!;

        /// <summary>
        /// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&amp;'. (example: key1=value1&amp;key2=value2&amp;key3=value3).
        /// </summary>
        [Input("jdbcUrlParams")]
        public Input<string>? JdbcUrlParams { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// The password associated with the username.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Port of the database.
        /// Oracle Corporations recommends the following port numbers:
        /// 1521 - Default listening port for client connections to the listener. 
        /// 2484 - Recommended and officially registered listening port for client connections to the listener using TCP/IP with SSL
        /// Default: 1521
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("schemas")]
        private InputList<string>? _schemas;

        /// <summary>
        /// The list of schemas to sync from. Defaults to user. Case sensitive.
        /// </summary>
        public InputList<string> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<string>());
            set => _schemas = value;
        }

        /// <summary>
        /// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
        /// </summary>
        [Input("tunnelMethod")]
        public Input<Inputs.SourceOracleConfigurationTunnelMethodArgs>? TunnelMethod { get; set; }

        /// <summary>
        /// The username which is used to access the database.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public SourceOracleConfigurationArgs()
        {
        }
        public static new SourceOracleConfigurationArgs Empty => new SourceOracleConfigurationArgs();
    }
}
