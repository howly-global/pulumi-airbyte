// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Inputs
{

    public sealed class DestinationAwsDatalakeConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// target aws account id
        /// </summary>
        [Input("awsAccountId")]
        public Input<string>? AwsAccountId { get; set; }

        /// <summary>
        /// The name of the S3 bucket. Read more &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-bucket-overview.html"&gt;here&lt;/a&gt;.
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        /// <summary>
        /// S3 prefix
        /// </summary>
        [Input("bucketPrefix")]
        public Input<string>? BucketPrefix { get; set; }

        /// <summary>
        /// Choose How to Authenticate to AWS.
        /// </summary>
        [Input("credentials", required: true)]
        public Input<Inputs.DestinationAwsDatalakeConfigurationCredentialsArgs> Credentials { get; set; } = null!;

        /// <summary>
        /// Format of the data output.
        /// </summary>
        [Input("format")]
        public Input<Inputs.DestinationAwsDatalakeConfigurationFormatArgs>? Format { get; set; }

        /// <summary>
        /// Cast float/double as decimal(38,18). This can help achieve higher accuracy and represent numbers correctly as received from the source. Default: false
        /// </summary>
        [Input("glueCatalogFloatAsDecimal")]
        public Input<bool>? GlueCatalogFloatAsDecimal { get; set; }

        [Input("lakeformationDatabaseDefaultTagKey")]
        private Input<string>? _lakeformationDatabaseDefaultTagKey;

        /// <summary>
        /// Add a default tag key to databases created by this destination
        /// </summary>
        public Input<string>? LakeformationDatabaseDefaultTagKey
        {
            get => _lakeformationDatabaseDefaultTagKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _lakeformationDatabaseDefaultTagKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Add default values for the `Tag Key` to databases created by this destination. Comma separate for multiple values.
        /// </summary>
        [Input("lakeformationDatabaseDefaultTagValues")]
        public Input<string>? LakeformationDatabaseDefaultTagValues { get; set; }

        /// <summary>
        /// The default database this destination will use to create tables in per stream. Can be changed per connection by customizing the namespace.
        /// </summary>
        [Input("lakeformationDatabaseName", required: true)]
        public Input<string> LakeformationDatabaseName { get; set; } = null!;

        /// <summary>
        /// Whether to create tables as LF governed tables. Default: false
        /// </summary>
        [Input("lakeformationGovernedTables")]
        public Input<bool>? LakeformationGovernedTables { get; set; }

        /// <summary>
        /// Partition data by cursor fields when a cursor field is a date. must be one of ["NO PARTITIONING", "DATE", "YEAR", "MONTH", "DAY", "YEAR/MONTH", "YEAR/MONTH/DAY"]; Default: "NO PARTITIONING"
        /// </summary>
        [Input("partitioning")]
        public Input<string>? Partitioning { get; set; }

        /// <summary>
        /// The region of the S3 bucket. See &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions"&gt;here&lt;/a&gt; for all region codes. must be one of ["", "af-south-1", "ap-east-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-south-1", "ap-south-2", "ap-southeast-1", "ap-southeast-2", "ap-southeast-3", "ap-southeast-4", "ca-central-1", "ca-west-1", "cn-north-1", "cn-northwest-1", "eu-central-1", "eu-central-2", "eu-north-1", "eu-south-1", "eu-south-2", "eu-west-1", "eu-west-2", "eu-west-3", "il-central-1", "me-central-1", "me-south-1", "sa-east-1", "us-east-1", "us-east-2", "us-gov-east-1", "us-gov-west-1", "us-west-1", "us-west-2"]; Default: ""
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public DestinationAwsDatalakeConfigurationArgs()
        {
        }
        public static new DestinationAwsDatalakeConfigurationArgs Empty => new DestinationAwsDatalakeConfigurationArgs();
    }
}
