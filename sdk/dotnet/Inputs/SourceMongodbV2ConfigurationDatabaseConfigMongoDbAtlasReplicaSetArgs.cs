// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Inputs
{

    public sealed class SourceMongodbV2ConfigurationDatabaseConfigMongoDbAtlasReplicaSetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Parsed as JSON.
        /// </summary>
        [Input("additionalProperties")]
        public Input<string>? AdditionalProperties { get; set; }

        /// <summary>
        /// The authentication source where the user information is stored.  See https://www.mongodb.com/docs/manual/reference/connection-string/#mongodb-urioption-urioption.authSource for more details. Default: "admin"
        /// </summary>
        [Input("authSource")]
        public Input<string>? AuthSource { get; set; }

        /// <summary>
        /// The connection string of the cluster that you want to replicate.
        /// </summary>
        [Input("connectionString", required: true)]
        public Input<string> ConnectionString { get; set; } = null!;

        /// <summary>
        /// The name of the MongoDB database that contains the collection(s) to replicate.
        /// </summary>
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        [Input("password", required: true)]
        private Input<string>? _password;

        /// <summary>
        /// The password associated with this username.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// When enabled, syncs will validate and structure records against the stream's schema. Default: true
        /// </summary>
        [Input("schemaEnforced")]
        public Input<bool>? SchemaEnforced { get; set; }

        /// <summary>
        /// The username which is used to access the database.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public SourceMongodbV2ConfigurationDatabaseConfigMongoDbAtlasReplicaSetArgs()
        {
        }
        public static new SourceMongodbV2ConfigurationDatabaseConfigMongoDbAtlasReplicaSetArgs Empty => new SourceMongodbV2ConfigurationDatabaseConfigMongoDbAtlasReplicaSetArgs();
    }
}
