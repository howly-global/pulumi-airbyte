// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Inputs
{

    public sealed class DestinationLangchainConfigurationIndexingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Chroma is a popular vector store that can be used to store and retrieve embeddings. It will build its index in memory and persist it to disk by the end of the sync.
        /// </summary>
        [Input("chromaLocalPersistance")]
        public Input<Inputs.DestinationLangchainConfigurationIndexingChromaLocalPersistanceArgs>? ChromaLocalPersistance { get; set; }

        /// <summary>
        /// DocArrayHnswSearch is a lightweight Document Index implementation provided by Docarray that runs fully locally and is best suited for small- to medium-sized datasets. It stores vectors on disk in hnswlib, and stores all other data in SQLite.
        /// </summary>
        [Input("docArrayHnswSearch")]
        public Input<Inputs.DestinationLangchainConfigurationIndexingDocArrayHnswSearchArgs>? DocArrayHnswSearch { get; set; }

        /// <summary>
        /// Pinecone is a popular vector store that can be used to store and retrieve embeddings. It is a managed service and can also be queried from outside of langchain.
        /// </summary>
        [Input("pinecone")]
        public Input<Inputs.DestinationLangchainConfigurationIndexingPineconeArgs>? Pinecone { get; set; }

        public DestinationLangchainConfigurationIndexingArgs()
        {
        }
        public static new DestinationLangchainConfigurationIndexingArgs Empty => new DestinationLangchainConfigurationIndexingArgs();
    }
}
