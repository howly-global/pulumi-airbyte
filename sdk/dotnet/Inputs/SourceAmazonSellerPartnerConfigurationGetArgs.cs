// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Inputs
{

    public sealed class SourceAmazonSellerPartnerConfigurationGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Type of the Account you're going to authorize the Airbyte application by. must be one of ["Seller", "Vendor"]; Default: "Seller"
        /// </summary>
        [Input("accountType")]
        public Input<string>? AccountType { get; set; }

        /// <summary>
        /// Select the AWS Environment. must be one of ["PRODUCTION", "SANDBOX"]; Default: "PRODUCTION"
        /// </summary>
        [Input("awsEnvironment")]
        public Input<string>? AwsEnvironment { get; set; }

        /// <summary>
        /// Your Login with Amazon Client ID.
        /// </summary>
        [Input("lwaAppId", required: true)]
        public Input<string> LwaAppId { get; set; } = null!;

        /// <summary>
        /// Your Login with Amazon Client Secret.
        /// </summary>
        [Input("lwaClientSecret", required: true)]
        public Input<string> LwaClientSecret { get; set; } = null!;

        /// <summary>
        /// For syncs spanning a large date range, this option is used to request data in a smaller fixed window to improve sync reliability. This time window can be configured granularly by day. Default: 90
        /// </summary>
        [Input("periodInDays")]
        public Input<int>? PeriodInDays { get; set; }

        [Input("refreshToken", required: true)]
        private Input<string>? _refreshToken;

        /// <summary>
        /// The Refresh Token obtained via OAuth flow authorization.
        /// </summary>
        public Input<string>? RefreshToken
        {
            get => _refreshToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _refreshToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Select the AWS Region. must be one of ["AE", "AU", "BE", "BR", "CA", "DE", "EG", "ES", "FR", "GB", "IN", "IT", "JP", "MX", "NL", "PL", "SA", "SE", "SG", "TR", "UK", "US"]; Default: "US"
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// UTC date and time in the format 2017-01-25T00:00:00Z. Any data after this date will not be replicated.
        /// </summary>
        [Input("replicationEndDate")]
        public Input<string>? ReplicationEndDate { get; set; }

        /// <summary>
        /// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. If start date is not provided, the date 2 years ago from today will be used.
        /// </summary>
        [Input("replicationStartDate")]
        public Input<string>? ReplicationStartDate { get; set; }

        [Input("reportOptionsLists")]
        private InputList<Inputs.SourceAmazonSellerPartnerConfigurationReportOptionsListGetArgs>? _reportOptionsLists;

        /// <summary>
        /// Additional information passed to reports. This varies by report type.
        /// </summary>
        public InputList<Inputs.SourceAmazonSellerPartnerConfigurationReportOptionsListGetArgs> ReportOptionsLists
        {
            get => _reportOptionsLists ?? (_reportOptionsLists = new InputList<Inputs.SourceAmazonSellerPartnerConfigurationReportOptionsListGetArgs>());
            set => _reportOptionsLists = value;
        }

        public SourceAmazonSellerPartnerConfigurationGetArgs()
        {
        }
        public static new SourceAmazonSellerPartnerConfigurationGetArgs Empty => new SourceAmazonSellerPartnerConfigurationGetArgs();
    }
}
