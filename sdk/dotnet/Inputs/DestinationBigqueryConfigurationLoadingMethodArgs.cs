// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Inputs
{

    public sealed class DestinationBigqueryConfigurationLoadingMethodArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// &lt;i&gt;(recommended)&lt;/i&gt; Writes large batches of records to a file, uploads the file to GCS, then uses COPY INTO to load your data into BigQuery. Provides best-in-class speed, reliability and scalability. Read more about GCS Staging &lt;a href="https://docs.airbyte.com/integrations/destinations/bigquery#gcs-staging"&gt;here&lt;/a&gt;.
        /// </summary>
        [Input("gcsStaging")]
        public Input<Inputs.DestinationBigqueryConfigurationLoadingMethodGcsStagingArgs>? GcsStaging { get; set; }

        /// <summary>
        /// &lt;i&gt;(not recommended)&lt;/i&gt; Direct loading using SQL INSERT statements. This method is extremely inefficient and provided only for quick testing. In all other cases, you should use GCS staging.
        /// </summary>
        [Input("standardInserts")]
        public Input<Inputs.DestinationBigqueryConfigurationLoadingMethodStandardInsertsArgs>? StandardInserts { get; set; }

        public DestinationBigqueryConfigurationLoadingMethodArgs()
        {
        }
        public static new DestinationBigqueryConfigurationLoadingMethodArgs Empty => new DestinationBigqueryConfigurationLoadingMethodArgs();
    }
}
