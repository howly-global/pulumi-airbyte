// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Inputs
{

    public sealed class SourceFacebookMarketingConfigurationCustomInsightGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("actionBreakdowns")]
        private InputList<string>? _actionBreakdowns;

        /// <summary>
        /// A list of chosen action_breakdowns for action_breakdowns
        /// </summary>
        public InputList<string> ActionBreakdowns
        {
            get => _actionBreakdowns ?? (_actionBreakdowns = new InputList<string>());
            set => _actionBreakdowns = value;
        }

        /// <summary>
        /// Determines the report time of action stats. For example, if a person saw the ad on Jan 1st but converted on Jan 2nd, when you query the API with action_report_time=impression, you see a conversion on Jan 1st. When you query the API with action_report_time=conversion, you see a conversion on Jan 2nd. must be one of ["conversion", "impression", "mixed"]; Default: "mixed"
        /// </summary>
        [Input("actionReportTime")]
        public Input<string>? ActionReportTime { get; set; }

        [Input("breakdowns")]
        private InputList<string>? _breakdowns;

        /// <summary>
        /// A list of chosen breakdowns for breakdowns
        /// </summary>
        public InputList<string> Breakdowns
        {
            get => _breakdowns ?? (_breakdowns = new InputList<string>());
            set => _breakdowns = value;
        }

        /// <summary>
        /// The date until which you'd like to replicate data for this stream, in the format YYYY-MM-DDT00:00:00Z. All data generated between the start date and this end date will be replicated. Not setting this option will result in always syncing the latest data.
        /// </summary>
        [Input("endDate")]
        public Input<string>? EndDate { get; set; }

        [Input("fields")]
        private InputList<string>? _fields;

        /// <summary>
        /// A list of chosen fields for fields parameter
        /// </summary>
        public InputList<string> Fields
        {
            get => _fields ?? (_fields = new InputList<string>());
            set => _fields = value;
        }

        /// <summary>
        /// The insights job timeout. Default: 60
        /// </summary>
        [Input("insightsJobTimeout")]
        public Input<int>? InsightsJobTimeout { get; set; }

        /// <summary>
        /// The attribution window. Default: 28
        /// </summary>
        [Input("insightsLookbackWindow")]
        public Input<int>? InsightsLookbackWindow { get; set; }

        /// <summary>
        /// Chosen level for API. must be one of ["ad", "adset", "campaign", "account"]; Default: "ad"
        /// </summary>
        [Input("level")]
        public Input<string>? Level { get; set; }

        /// <summary>
        /// The name value of insight
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The date from which you'd like to replicate data for this stream, in the format YYYY-MM-DDT00:00:00Z.
        /// </summary>
        [Input("startDate")]
        public Input<string>? StartDate { get; set; }

        /// <summary>
        /// Time window in days by which to aggregate statistics. The sync will be chunked into N day intervals, where N is the number of days you specified. For example, if you set this value to 7, then all statistics will be reported as 7-day aggregates by starting from the start_date. If the start and end dates are October 1st and October 30th, then the connector will output 5 records: 01 - 06, 07 - 13, 14 - 20, 21 - 27, and 28 - 30 (3 days only). Default: 1
        /// </summary>
        [Input("timeIncrement")]
        public Input<int>? TimeIncrement { get; set; }

        public SourceFacebookMarketingConfigurationCustomInsightGetArgs()
        {
        }
        public static new SourceFacebookMarketingConfigurationCustomInsightGetArgs Empty => new SourceFacebookMarketingConfigurationCustomInsightGetArgs();
    }
}
