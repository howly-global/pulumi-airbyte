// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Inputs
{

    public sealed class SourcePolygonStockApiConfigurationGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Determines whether or not the results are adjusted for splits. By default, results are adjusted and set to true. Set this to false to get results that are NOT adjusted for splits.
        /// </summary>
        [Input("adjusted")]
        public Input<string>? Adjusted { get; set; }

        /// <summary>
        /// Your API ACCESS Key
        /// </summary>
        [Input("apiKey", required: true)]
        public Input<string> ApiKey { get; set; } = null!;

        /// <summary>
        /// The target date for the aggregate window.
        /// </summary>
        [Input("endDate", required: true)]
        public Input<string> EndDate { get; set; } = null!;

        /// <summary>
        /// The target date for the aggregate window.
        /// </summary>
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        /// <summary>
        /// The size of the timespan multiplier.
        /// </summary>
        [Input("multiplier", required: true)]
        public Input<int> Multiplier { get; set; } = null!;

        /// <summary>
        /// Sort the results by timestamp. asc will return results in ascending order (oldest at the top), desc will return results in descending order (newest at the top).
        /// </summary>
        [Input("sort")]
        public Input<string>? Sort { get; set; }

        /// <summary>
        /// The beginning date for the aggregate window.
        /// </summary>
        [Input("startDate", required: true)]
        public Input<string> StartDate { get; set; } = null!;

        /// <summary>
        /// The exchange symbol that this item is traded under.
        /// </summary>
        [Input("stocksTicker", required: true)]
        public Input<string> StocksTicker { get; set; } = null!;

        /// <summary>
        /// The size of the time window.
        /// </summary>
        [Input("timespan", required: true)]
        public Input<string> Timespan { get; set; } = null!;

        public SourcePolygonStockApiConfigurationGetArgs()
        {
        }
        public static new SourcePolygonStockApiConfigurationGetArgs Empty => new SourcePolygonStockApiConfigurationGetArgs();
    }
}
