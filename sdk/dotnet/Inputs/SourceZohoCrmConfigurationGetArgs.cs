// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Inputs
{

    public sealed class SourceZohoCrmConfigurationGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// OAuth2.0 Client ID
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// OAuth2.0 Client Secret
        /// </summary>
        [Input("clientSecret", required: true)]
        public Input<string> ClientSecret { get; set; } = null!;

        /// <summary>
        /// Please choose the region of your Data Center location. More info by this &lt;a href="https://www.zoho.com/crm/developer/docs/api/v2/multi-dc.html"&gt;Link&lt;/a&gt;. must be one of ["US", "AU", "EU", "IN", "CN", "JP"]
        /// </summary>
        [Input("dcRegion", required: true)]
        public Input<string> DcRegion { get; set; } = null!;

        /// <summary>
        /// Choose your Edition of Zoho CRM to determine API Concurrency Limits. must be one of ["Free", "Standard", "Professional", "Enterprise", "Ultimate"]; Default: "Free"
        /// </summary>
        [Input("edition")]
        public Input<string>? Edition { get; set; }

        /// <summary>
        /// Please choose the environment. must be one of ["Production", "Developer", "Sandbox"]
        /// </summary>
        [Input("environment", required: true)]
        public Input<string> Environment { get; set; } = null!;

        [Input("refreshToken", required: true)]
        private Input<string>? _refreshToken;

        /// <summary>
        /// OAuth2.0 Refresh Token
        /// </summary>
        public Input<string>? RefreshToken
        {
            get => _refreshToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _refreshToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// ISO 8601, for instance: `YYYY-MM-DD`, `YYYY-MM-DD HH:MM:SS+HH:MM`
        /// </summary>
        [Input("startDatetime")]
        public Input<string>? StartDatetime { get; set; }

        public SourceZohoCrmConfigurationGetArgs()
        {
        }
        public static new SourceZohoCrmConfigurationGetArgs Empty => new SourceZohoCrmConfigurationGetArgs();
    }
}
