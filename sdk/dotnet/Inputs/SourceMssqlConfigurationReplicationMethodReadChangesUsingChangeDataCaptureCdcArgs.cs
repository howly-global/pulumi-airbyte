// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Inputs
{

    public sealed class SourceMssqlConfigurationReplicationMethodReadChangesUsingChangeDataCaptureCdcArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 300 seconds. Valid range: 120 seconds to 3600 seconds. Read about &lt;a href="https://docs.airbyte.com/integrations/sources/mysql/#change-data-capture-cdc"&gt;initial waiting time&lt;/a&gt;. Default: 300
        /// </summary>
        [Input("initialWaitingSeconds")]
        public Input<int>? InitialWaitingSeconds { get; set; }

        /// <summary>
        /// Determines whether Airbyte should fail or re-sync data in case of an stale/invalid cursor value into the WAL. If 'Fail sync' is chosen, a user will have to manually reset the connection before being able to continue syncing data. If 'Re-sync data' is chosen, Airbyte will automatically trigger a refresh but could lead to higher cloud costs and data loss. must be one of ["Fail sync", "Re-sync data"]; Default: "Fail sync"
        /// </summary>
        [Input("invalidCdcCursorPositionBehavior")]
        public Input<string>? InvalidCdcCursorPositionBehavior { get; set; }

        /// <summary>
        /// The size of the internal queue. This may interfere with memory consumption and efficiency of the connector, please be careful. Default: 10000
        /// </summary>
        [Input("queueSize")]
        public Input<int>? QueueSize { get; set; }

        public SourceMssqlConfigurationReplicationMethodReadChangesUsingChangeDataCaptureCdcArgs()
        {
        }
        public static new SourceMssqlConfigurationReplicationMethodReadChangesUsingChangeDataCaptureCdcArgs Empty => new SourceMssqlConfigurationReplicationMethodReadChangesUsingChangeDataCaptureCdcArgs();
    }
}
