// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Inputs
{

    public sealed class SourceGithubConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Please enter your basic URL from self-hosted GitHub instance or leave it empty to use GitHub. Default: "https://api.github.com/"
        /// </summary>
        [Input("apiUrl")]
        public Input<string>? ApiUrl { get; set; }

        /// <summary>
        /// (DEPRCATED) Space-delimited list of GitHub repository branches to pull commits for, e.g. `airbytehq/airbyte/master`. If no branches are specified for a repository, the default branch will be pulled.
        /// </summary>
        [Input("branch")]
        public Input<string>? Branch { get; set; }

        [Input("branches")]
        private InputList<string>? _branches;

        /// <summary>
        /// List of GitHub repository branches to pull commits for, e.g. `airbytehq/airbyte/master`. If no branches are specified for a repository, the default branch will be pulled.
        /// </summary>
        public InputList<string> Branches
        {
            get => _branches ?? (_branches = new InputList<string>());
            set => _branches = value;
        }

        /// <summary>
        /// Choose how to authenticate to GitHub
        /// </summary>
        [Input("credentials", required: true)]
        public Input<Inputs.SourceGithubConfigurationCredentialsArgs> Credentials { get; set; } = null!;

        [Input("repositories", required: true)]
        private InputList<string>? _repositories;

        /// <summary>
        /// List of GitHub organizations/repositories, e.g. `airbytehq/airbyte` for single repository, `airbytehq/*` for get all repositories from organization and `airbytehq/a* for matching multiple repositories by pattern.
        /// </summary>
        public InputList<string> Repositories
        {
            get => _repositories ?? (_repositories = new InputList<string>());
            set => _repositories = value;
        }

        /// <summary>
        /// (DEPRCATED) Space-delimited list of GitHub organizations/repositories, e.g. `airbytehq/airbyte` for single repository, `airbytehq/*` for get all repositories from organization and `airbytehq/airbyte airbytehq/another-repo` for multiple repositories.
        /// </summary>
        [Input("repository")]
        public Input<string>? Repository { get; set; }

        /// <summary>
        /// The date from which you'd like to replicate data from GitHub in the format YYYY-MM-DDT00:00:00Z. If the date is not set, all data will be replicated.  For the streams which support this configuration, only data generated on or after the start date will be replicated. This field doesn't apply to all streams, see the &lt;a href="https://docs.airbyte.com/integrations/sources/github"&gt;docs&lt;/a&gt; for more info
        /// </summary>
        [Input("startDate")]
        public Input<string>? StartDate { get; set; }

        public SourceGithubConfigurationArgs()
        {
        }
        public static new SourceGithubConfigurationArgs Empty => new SourceGithubConfigurationArgs();
    }
}
