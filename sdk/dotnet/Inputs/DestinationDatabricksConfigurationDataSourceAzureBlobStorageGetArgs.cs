// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Inputs
{

    public sealed class DestinationDatabricksConfigurationDataSourceAzureBlobStorageGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account's name of the Azure Blob Storage.
        /// </summary>
        [Input("azureBlobStorageAccountName", required: true)]
        public Input<string> AzureBlobStorageAccountName { get; set; } = null!;

        /// <summary>
        /// The name of the Azure blob storage container.
        /// </summary>
        [Input("azureBlobStorageContainerName", required: true)]
        public Input<string> AzureBlobStorageContainerName { get; set; } = null!;

        /// <summary>
        /// This is Azure Blob Storage endpoint domain name. Leave default value (or leave it empty if run container from command line) to use Microsoft native from example. Default: "blob.core.windows.net"
        /// </summary>
        [Input("azureBlobStorageEndpointDomainName")]
        public Input<string>? AzureBlobStorageEndpointDomainName { get; set; }

        [Input("azureBlobStorageSasToken", required: true)]
        private Input<string>? _azureBlobStorageSasToken;

        /// <summary>
        /// Shared access signature (SAS) token to grant limited access to objects in your storage account.
        /// </summary>
        public Input<string>? AzureBlobStorageSasToken
        {
            get => _azureBlobStorageSasToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _azureBlobStorageSasToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public DestinationDatabricksConfigurationDataSourceAzureBlobStorageGetArgs()
        {
        }
        public static new DestinationDatabricksConfigurationDataSourceAzureBlobStorageGetArgs Empty => new DestinationDatabricksConfigurationDataSourceAzureBlobStorageGetArgs();
    }
}
