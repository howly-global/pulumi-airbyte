// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte
{
    public static class GetSourceS3
    {
        public static Task<GetSourceS3Result> InvokeAsync(GetSourceS3Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSourceS3Result>("airbyte:index/getSourceS3:getSourceS3", args ?? new GetSourceS3Args(), options.WithDefaults());

        public static Output<GetSourceS3Result> Invoke(GetSourceS3InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSourceS3Result>("airbyte:index/getSourceS3:getSourceS3", args ?? new GetSourceS3InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSourceS3Args : global::Pulumi.InvokeArgs
    {
        [Input("sourceId", required: true)]
        public string SourceId { get; set; } = null!;

        public GetSourceS3Args()
        {
        }
        public static new GetSourceS3Args Empty => new GetSourceS3Args();
    }

    public sealed class GetSourceS3InvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("sourceId", required: true)]
        public Input<string> SourceId { get; set; } = null!;

        public GetSourceS3InvokeArgs()
        {
        }
        public static new GetSourceS3InvokeArgs Empty => new GetSourceS3InvokeArgs();
    }


    [OutputType]
    public sealed class GetSourceS3Result
    {
        public readonly string Configuration;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string SourceId;
        public readonly string SourceType;
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetSourceS3Result(
            string configuration,

            string id,

            string name,

            string sourceId,

            string sourceType,

            string workspaceId)
        {
            Configuration = configuration;
            Id = id;
            Name = name;
            SourceId = sourceId;
            SourceType = sourceType;
            WorkspaceId = workspaceId;
        }
    }
}
