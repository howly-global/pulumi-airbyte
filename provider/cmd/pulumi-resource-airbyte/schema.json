{
    "name": "airbyte",
    "description": "A Pulumi package for creating and managing airbyte cloud resources.",
    "keywords": [
        "howly-global",
        "airbyte",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`airbyte` Terraform Provider](https://github.com/howly-global/terraform-provider-airbyte).",
    "repository": "https://github.com/howly-global/pulumi-airbyte",
    "publisher": "howly-global",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20"
        },
        "go": {
            "importBasePath": "github.com/howly-global/pulumi-airbyte/sdk/go/airbyte",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing airbyte cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/howly-global/terraform-provider-airbyte)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-airbyte` repo](https://github.com/howly-global/pulumi-airbyte/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-airbyte` repo](https://github.com/howly-global/terraform-provider-airbyte/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/howly-global/terraform-provider-airbyte)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-airbyte` repo](https://github.com/howly-global/pulumi-airbyte/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-airbyte` repo](https://github.com/howly-global/terraform-provider-airbyte/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "bearerAuth": {
                "type": "string",
                "secret": true
            },
            "clientId": {
                "type": "string",
                "secret": true
            },
            "clientSecret": {
                "type": "string",
                "secret": true
            },
            "password": {
                "type": "string",
                "secret": true
            },
            "serverUrl": {
                "type": "string",
                "description": "Server URL (defaults to https://api.airbyte.com/v1)\n"
            },
            "username": {
                "type": "string",
                "secret": true
            }
        }
    },
    "types": {
        "airbyte:index/ConnectionConfigurations:ConnectionConfigurations": {
            "properties": {
                "streams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/ConnectionConfigurationsStream:ConnectionConfigurationsStream"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "streams"
                    ]
                }
            }
        },
        "airbyte:index/ConnectionConfigurationsStream:ConnectionConfigurationsStream": {
            "properties": {
                "cursorFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Path to the field that will be used to determine if a record is new or modified since the last sync. This field is REQUIRED if `sync_mode` is `incremental` unless there is a default.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Not Null\n"
                },
                "primaryKeys": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": "Paths to the fields that will be used as primary key. This field is REQUIRED if `destination_sync_mode` is `*_dedup` unless it is already supplied by the source schema.\n"
                },
                "syncMode": {
                    "type": "string",
                    "description": "must be one of [\"full_refresh_overwrite\", \"full_refresh_append\", \"incremental_append\", \"incremental_deduped_history\"]\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cursorFields",
                        "name",
                        "primaryKeys",
                        "syncMode"
                    ]
                }
            }
        },
        "airbyte:index/ConnectionSchedule:ConnectionSchedule": {
            "properties": {
                "basicTiming": {
                    "type": "string"
                },
                "cronExpression": {
                    "type": "string"
                },
                "scheduleType": {
                    "type": "string",
                    "description": "Not Null; must be one of [\"manual\", \"cron\"]\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "basicTiming",
                        "cronExpression",
                        "scheduleType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationAstraConfiguration:DestinationAstraConfiguration": {
            "properties": {
                "embedding": {
                    "$ref": "#/types/airbyte:index/DestinationAstraConfigurationEmbedding:DestinationAstraConfigurationEmbedding",
                    "description": "Embedding configuration\n"
                },
                "indexing": {
                    "$ref": "#/types/airbyte:index/DestinationAstraConfigurationIndexing:DestinationAstraConfigurationIndexing",
                    "description": "Astra DB gives developers the APIs, real-time data and ecosystem integrations to put accurate RAG and Gen AI apps with fewer hallucinations in production.\n"
                },
                "omitRawText": {
                    "type": "boolean",
                    "description": "Do not store the text that gets embedded along with the vector and the metadata in the destination. If set to true, only the vector and the metadata will be stored - in this case raw text for LLM use cases needs to be retrieved from another source. Default: false\n"
                },
                "processing": {
                    "$ref": "#/types/airbyte:index/DestinationAstraConfigurationProcessing:DestinationAstraConfigurationProcessing"
                }
            },
            "type": "object",
            "required": [
                "embedding",
                "indexing",
                "processing"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "embedding",
                        "indexing",
                        "omitRawText",
                        "processing"
                    ]
                }
            }
        },
        "airbyte:index/DestinationAstraConfigurationEmbedding:DestinationAstraConfigurationEmbedding": {
            "properties": {
                "azureOpenAi": {
                    "$ref": "#/types/airbyte:index/DestinationAstraConfigurationEmbeddingAzureOpenAi:DestinationAstraConfigurationEmbeddingAzureOpenAi",
                    "description": "Use the Azure-hosted OpenAI API to embed text. This option is using the text-embedding-ada-002 model with 1536 embedding dimensions.\n"
                },
                "cohere": {
                    "$ref": "#/types/airbyte:index/DestinationAstraConfigurationEmbeddingCohere:DestinationAstraConfigurationEmbeddingCohere",
                    "description": "Use the Cohere API to embed text.\n"
                },
                "fake": {
                    "$ref": "#/types/airbyte:index/DestinationAstraConfigurationEmbeddingFake:DestinationAstraConfigurationEmbeddingFake",
                    "description": "Use a fake embedding made out of random vectors with 1536 embedding dimensions. This is useful for testing the data pipeline without incurring any costs.\n"
                },
                "openAi": {
                    "$ref": "#/types/airbyte:index/DestinationAstraConfigurationEmbeddingOpenAi:DestinationAstraConfigurationEmbeddingOpenAi",
                    "description": "Use the OpenAI API to embed text. This option is using the text-embedding-ada-002 model with 1536 embedding dimensions.\n"
                },
                "openAiCompatible": {
                    "$ref": "#/types/airbyte:index/DestinationAstraConfigurationEmbeddingOpenAiCompatible:DestinationAstraConfigurationEmbeddingOpenAiCompatible",
                    "description": "Use a service that's compatible with the OpenAI API to embed text.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationAstraConfigurationEmbeddingAzureOpenAi:DestinationAstraConfigurationEmbeddingAzureOpenAi": {
            "properties": {
                "apiBase": {
                    "type": "string",
                    "description": "The base URL for your Azure OpenAI resource.  You can find this in the Azure portal under your Azure OpenAI resource\n"
                },
                "deployment": {
                    "type": "string",
                    "description": "The deployment for your Azure OpenAI resource.  You can find this in the Azure portal under your Azure OpenAI resource\n"
                },
                "openaiKey": {
                    "type": "string",
                    "description": "The API key for your Azure OpenAI resource.  You can find this in the Azure portal under your Azure OpenAI resource\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiBase",
                "deployment",
                "openaiKey"
            ]
        },
        "airbyte:index/DestinationAstraConfigurationEmbeddingCohere:DestinationAstraConfigurationEmbeddingCohere": {
            "properties": {
                "cohereKey": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "cohereKey"
            ]
        },
        "airbyte:index/DestinationAstraConfigurationEmbeddingFake:DestinationAstraConfigurationEmbeddingFake": {
            "type": "object"
        },
        "airbyte:index/DestinationAstraConfigurationEmbeddingOpenAi:DestinationAstraConfigurationEmbeddingOpenAi": {
            "properties": {
                "openaiKey": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "openaiKey"
            ]
        },
        "airbyte:index/DestinationAstraConfigurationEmbeddingOpenAiCompatible:DestinationAstraConfigurationEmbeddingOpenAiCompatible": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Default: \"\"\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "The base URL for your OpenAI-compatible service\n"
                },
                "dimensions": {
                    "type": "integer",
                    "description": "The number of dimensions the embedding model is generating\n"
                },
                "modelName": {
                    "type": "string",
                    "description": "The name of the model to use for embedding. Default: \"text-embedding-ada-002\"\n"
                }
            },
            "type": "object",
            "required": [
                "baseUrl",
                "dimensions"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "baseUrl",
                        "dimensions",
                        "modelName"
                    ]
                }
            }
        },
        "airbyte:index/DestinationAstraConfigurationIndexing:DestinationAstraConfigurationIndexing": {
            "properties": {
                "astraDbAppToken": {
                    "type": "string",
                    "description": "The application token authorizes a user to connect to a specific Astra DB database. It is created when the user clicks the Generate Token button on the Overview tab of the Database page in the Astra UI.\n",
                    "secret": true
                },
                "astraDbEndpoint": {
                    "type": "string",
                    "description": "The endpoint specifies which Astra DB database queries are sent to. It can be copied from the Database Details section of the Overview tab of the Database page in the Astra UI.\n"
                },
                "astraDbKeyspace": {
                    "type": "string",
                    "description": "Keyspaces (or Namespaces) serve as containers for organizing data within a database. You can create a new keyspace uisng the Data Explorer tab in the Astra UI. The keyspace default_keyspace is created for you when you create a Vector Database in Astra DB.\n",
                    "secret": true
                },
                "collection": {
                    "type": "string",
                    "description": "Collections hold data. They are analagous to tables in traditional Cassandra terminology. This tool will create the collection with the provided name automatically if it does not already exist. Alternatively, you can create one thorugh the Data Explorer tab in the Astra UI.\n"
                }
            },
            "type": "object",
            "required": [
                "astraDbAppToken",
                "astraDbEndpoint",
                "astraDbKeyspace",
                "collection"
            ]
        },
        "airbyte:index/DestinationAstraConfigurationProcessing:DestinationAstraConfigurationProcessing": {
            "properties": {
                "chunkOverlap": {
                    "type": "integer",
                    "description": "Size of overlap between chunks in tokens to store in vector store to better capture relevant context. Default: 0\n"
                },
                "chunkSize": {
                    "type": "integer",
                    "description": "Size of chunks in tokens to store in vector store (make sure it is not too big for the context if your LLM)\n"
                },
                "fieldNameMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/DestinationAstraConfigurationProcessingFieldNameMapping:DestinationAstraConfigurationProcessingFieldNameMapping"
                    },
                    "description": "List of fields to rename. Not applicable for nested fields, but can be used to rename fields already flattened via dot notation.\n"
                },
                "metadataFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of fields in the record that should be stored as metadata. The field list is applied to all streams in the same way and non-existing fields are ignored. If none are defined, all fields are considered metadata fields. When specifying text fields, you can access nested fields in the record by using dot notation, e.g. `user.name` will access the `name` field in the `user` object. It's also possible to use wildcards to access all fields in an object, e.g. `users.*.name` will access all `names` fields in all entries of the `users` array. When specifying nested paths, all matching values are flattened into an array set to a field named by the path.\n"
                },
                "textFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of fields in the record that should be used to calculate the embedding. The field list is applied to all streams in the same way and non-existing fields are ignored. If none are defined, all fields are considered text fields. When specifying text fields, you can access nested fields in the record by using dot notation, e.g. `user.name` will access the `name` field in the `user` object. It's also possible to use wildcards to access all fields in an object, e.g. `users.*.name` will access all `names` fields in all entries of the `users` array.\n"
                },
                "textSplitter": {
                    "$ref": "#/types/airbyte:index/DestinationAstraConfigurationProcessingTextSplitter:DestinationAstraConfigurationProcessingTextSplitter",
                    "description": "Split text fields into chunks based on the specified method.\n"
                }
            },
            "type": "object",
            "required": [
                "chunkSize"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "chunkOverlap",
                        "chunkSize"
                    ]
                }
            }
        },
        "airbyte:index/DestinationAstraConfigurationProcessingFieldNameMapping:DestinationAstraConfigurationProcessingFieldNameMapping": {
            "properties": {
                "fromField": {
                    "type": "string",
                    "description": "The field name in the source\n"
                },
                "toField": {
                    "type": "string",
                    "description": "The field name to use in the destination\n"
                }
            },
            "type": "object",
            "required": [
                "fromField",
                "toField"
            ]
        },
        "airbyte:index/DestinationAstraConfigurationProcessingTextSplitter:DestinationAstraConfigurationProcessingTextSplitter": {
            "properties": {
                "byMarkdownHeader": {
                    "$ref": "#/types/airbyte:index/DestinationAstraConfigurationProcessingTextSplitterByMarkdownHeader:DestinationAstraConfigurationProcessingTextSplitterByMarkdownHeader",
                    "description": "Split the text by Markdown headers down to the specified header level. If the chunk size fits multiple sections, they will be combined into a single chunk.\n"
                },
                "byProgrammingLanguage": {
                    "$ref": "#/types/airbyte:index/DestinationAstraConfigurationProcessingTextSplitterByProgrammingLanguage:DestinationAstraConfigurationProcessingTextSplitterByProgrammingLanguage",
                    "description": "Split the text by suitable delimiters based on the programming language. This is useful for splitting code into chunks.\n"
                },
                "bySeparator": {
                    "$ref": "#/types/airbyte:index/DestinationAstraConfigurationProcessingTextSplitterBySeparator:DestinationAstraConfigurationProcessingTextSplitterBySeparator",
                    "description": "Split the text by the list of separators until the chunk size is reached, using the earlier mentioned separators where possible. This is useful for splitting text fields by paragraphs, sentences, words, etc.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationAstraConfigurationProcessingTextSplitterByMarkdownHeader:DestinationAstraConfigurationProcessingTextSplitterByMarkdownHeader": {
            "properties": {
                "splitLevel": {
                    "type": "integer",
                    "description": "Level of markdown headers to split text fields by. Headings down to the specified level will be used as split points. Default: 1\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "splitLevel"
                    ]
                }
            }
        },
        "airbyte:index/DestinationAstraConfigurationProcessingTextSplitterByProgrammingLanguage:DestinationAstraConfigurationProcessingTextSplitterByProgrammingLanguage": {
            "properties": {
                "language": {
                    "type": "string",
                    "description": "Split code in suitable places based on the programming language. must be one of [\"cpp\", \"go\", \"java\", \"js\", \"php\", \"proto\", \"python\", \"rst\", \"ruby\", \"rust\", \"scala\", \"swift\", \"markdown\", \"latex\", \"html\", \"sol\"]\n"
                }
            },
            "type": "object",
            "required": [
                "language"
            ]
        },
        "airbyte:index/DestinationAstraConfigurationProcessingTextSplitterBySeparator:DestinationAstraConfigurationProcessingTextSplitterBySeparator": {
            "properties": {
                "keepSeparator": {
                    "type": "boolean",
                    "description": "Whether to keep the separator in the resulting chunks. Default: false\n"
                },
                "separators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of separator strings to split text fields by. The separator itself needs to be wrapped in double quotes, e.g. to split by the dot character, use \".\". To split by a newline, use \"\\n\".\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "keepSeparator"
                    ]
                }
            }
        },
        "airbyte:index/DestinationAwsDatalakeConfiguration:DestinationAwsDatalakeConfiguration": {
            "properties": {
                "awsAccountId": {
                    "type": "string",
                    "description": "target aws account id\n"
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of the S3 bucket. Read more \u003ca href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-bucket-overview.html\"\u003ehere\u003c/a\u003e.\n"
                },
                "bucketPrefix": {
                    "type": "string",
                    "description": "S3 prefix\n"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/DestinationAwsDatalakeConfigurationCredentials:DestinationAwsDatalakeConfigurationCredentials",
                    "description": "Choose How to Authenticate to AWS.\n"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/DestinationAwsDatalakeConfigurationFormat:DestinationAwsDatalakeConfigurationFormat",
                    "description": "Format of the data output.\n"
                },
                "glueCatalogFloatAsDecimal": {
                    "type": "boolean",
                    "description": "Cast float/double as decimal(38,18). This can help achieve higher accuracy and represent numbers correctly as received from the source. Default: false\n"
                },
                "lakeformationDatabaseDefaultTagKey": {
                    "type": "string",
                    "description": "Add a default tag key to databases created by this destination\n",
                    "secret": true
                },
                "lakeformationDatabaseDefaultTagValues": {
                    "type": "string",
                    "description": "Add default values for the `Tag Key` to databases created by this destination. Comma separate for multiple values.\n"
                },
                "lakeformationDatabaseName": {
                    "type": "string",
                    "description": "The default database this destination will use to create tables in per stream. Can be changed per connection by customizing the namespace.\n"
                },
                "lakeformationGovernedTables": {
                    "type": "boolean",
                    "description": "Whether to create tables as LF governed tables. Default: false\n"
                },
                "partitioning": {
                    "type": "string",
                    "description": "Partition data by cursor fields when a cursor field is a date. must be one of [\"NO PARTITIONING\", \"DATE\", \"YEAR\", \"MONTH\", \"DAY\", \"YEAR/MONTH\", \"YEAR/MONTH/DAY\"]; Default: \"NO PARTITIONING\"\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region of the S3 bucket. See \u003ca href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions\"\u003ehere\u003c/a\u003e for all region codes. must be one of [\"\", \"af-south-1\", \"ap-east-1\", \"ap-northeast-1\", \"ap-northeast-2\", \"ap-northeast-3\", \"ap-south-1\", \"ap-south-2\", \"ap-southeast-1\", \"ap-southeast-2\", \"ap-southeast-3\", \"ap-southeast-4\", \"ca-central-1\", \"ca-west-1\", \"cn-north-1\", \"cn-northwest-1\", \"eu-central-1\", \"eu-central-2\", \"eu-north-1\", \"eu-south-1\", \"eu-south-2\", \"eu-west-1\", \"eu-west-2\", \"eu-west-3\", \"il-central-1\", \"me-central-1\", \"me-south-1\", \"sa-east-1\", \"us-east-1\", \"us-east-2\", \"us-gov-east-1\", \"us-gov-west-1\", \"us-west-1\", \"us-west-2\"]; Default: \"\"\n"
                }
            },
            "type": "object",
            "required": [
                "bucketName",
                "credentials",
                "lakeformationDatabaseName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bucketName",
                        "credentials",
                        "glueCatalogFloatAsDecimal",
                        "lakeformationDatabaseName",
                        "lakeformationGovernedTables",
                        "partitioning",
                        "region"
                    ]
                }
            }
        },
        "airbyte:index/DestinationAwsDatalakeConfigurationCredentials:DestinationAwsDatalakeConfigurationCredentials": {
            "properties": {
                "iamRole": {
                    "$ref": "#/types/airbyte:index/DestinationAwsDatalakeConfigurationCredentialsIamRole:DestinationAwsDatalakeConfigurationCredentialsIamRole"
                },
                "iamUser": {
                    "$ref": "#/types/airbyte:index/DestinationAwsDatalakeConfigurationCredentialsIamUser:DestinationAwsDatalakeConfigurationCredentialsIamUser"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationAwsDatalakeConfigurationCredentialsIamRole:DestinationAwsDatalakeConfigurationCredentialsIamRole": {
            "properties": {
                "roleArn": {
                    "type": "string",
                    "description": "Will assume this role to write data to s3\n"
                }
            },
            "type": "object",
            "required": [
                "roleArn"
            ]
        },
        "airbyte:index/DestinationAwsDatalakeConfigurationCredentialsIamUser:DestinationAwsDatalakeConfigurationCredentialsIamUser": {
            "properties": {
                "awsAccessKeyId": {
                    "type": "string",
                    "description": "AWS User Access Key Id\n",
                    "secret": true
                },
                "awsSecretAccessKey": {
                    "type": "string",
                    "description": "Secret Access Key\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "awsAccessKeyId",
                "awsSecretAccessKey"
            ]
        },
        "airbyte:index/DestinationAwsDatalakeConfigurationFormat:DestinationAwsDatalakeConfigurationFormat": {
            "properties": {
                "jsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/DestinationAwsDatalakeConfigurationFormatJsonLinesNewlineDelimitedJson:DestinationAwsDatalakeConfigurationFormatJsonLinesNewlineDelimitedJson"
                },
                "parquetColumnarStorage": {
                    "$ref": "#/types/airbyte:index/DestinationAwsDatalakeConfigurationFormatParquetColumnarStorage:DestinationAwsDatalakeConfigurationFormatParquetColumnarStorage"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationAwsDatalakeConfigurationFormatJsonLinesNewlineDelimitedJson:DestinationAwsDatalakeConfigurationFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "compressionCodec": {
                    "type": "string",
                    "description": "The compression algorithm used to compress data. must be one of [\"UNCOMPRESSED\", \"GZIP\"]; Default: \"UNCOMPRESSED\"\n"
                },
                "formatType": {
                    "type": "string",
                    "description": "must be one of [\"JSONL\"]; Default: \"JSONL\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "compressionCodec",
                        "formatType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationAwsDatalakeConfigurationFormatParquetColumnarStorage:DestinationAwsDatalakeConfigurationFormatParquetColumnarStorage": {
            "properties": {
                "compressionCodec": {
                    "type": "string",
                    "description": "The compression algorithm used to compress data. must be one of [\"UNCOMPRESSED\", \"SNAPPY\", \"GZIP\", \"ZSTD\"]; Default: \"SNAPPY\"\n"
                },
                "formatType": {
                    "type": "string",
                    "description": "must be one of [\"Parquet\"]; Default: \"Parquet\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "compressionCodec",
                        "formatType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationAzureBlobStorageConfiguration:DestinationAzureBlobStorageConfiguration": {
            "properties": {
                "azureBlobStorageAccountKey": {
                    "type": "string",
                    "description": "The Azure blob storage account key.\n",
                    "secret": true
                },
                "azureBlobStorageAccountName": {
                    "type": "string",
                    "description": "The account's name of the Azure Blob Storage.\n"
                },
                "azureBlobStorageContainerName": {
                    "type": "string",
                    "description": "The name of the Azure blob storage container. If not exists - will be created automatically. May be empty, then will be created automatically airbytecontainer+timestamp\n"
                },
                "azureBlobStorageEndpointDomainName": {
                    "type": "string",
                    "description": "This is Azure Blob Storage endpoint domain name. Leave default value (or leave it empty if run container from command line) to use Microsoft native from example. Default: \"blob.core.windows.net\"\n"
                },
                "azureBlobStorageOutputBufferSize": {
                    "type": "integer",
                    "description": "The amount of megabytes to buffer for the output stream to Azure. This will impact memory footprint on workers, but may need adjustment for performance and appropriate block size in Azure. Default: 5\n"
                },
                "azureBlobStorageSpillSize": {
                    "type": "integer",
                    "description": "The amount of megabytes after which the connector should spill the records in a new blob object. Make sure to configure size greater than individual records. Enter 0 if not applicable. Default: 500\n"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/DestinationAzureBlobStorageConfigurationFormat:DestinationAzureBlobStorageConfigurationFormat",
                    "description": "Output data format\n"
                }
            },
            "type": "object",
            "required": [
                "azureBlobStorageAccountKey",
                "azureBlobStorageAccountName",
                "format"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "azureBlobStorageAccountKey",
                        "azureBlobStorageAccountName",
                        "azureBlobStorageEndpointDomainName",
                        "azureBlobStorageOutputBufferSize",
                        "azureBlobStorageSpillSize",
                        "format"
                    ]
                }
            }
        },
        "airbyte:index/DestinationAzureBlobStorageConfigurationFormat:DestinationAzureBlobStorageConfigurationFormat": {
            "properties": {
                "csvCommaSeparatedValues": {
                    "$ref": "#/types/airbyte:index/DestinationAzureBlobStorageConfigurationFormatCsvCommaSeparatedValues:DestinationAzureBlobStorageConfigurationFormatCsvCommaSeparatedValues"
                },
                "jsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/DestinationAzureBlobStorageConfigurationFormatJsonLinesNewlineDelimitedJson:DestinationAzureBlobStorageConfigurationFormatJsonLinesNewlineDelimitedJson"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationAzureBlobStorageConfigurationFormatCsvCommaSeparatedValues:DestinationAzureBlobStorageConfigurationFormatCsvCommaSeparatedValues": {
            "properties": {
                "flattening": {
                    "type": "string",
                    "description": "Whether the input json data should be normalized (flattened) in the output CSV. Please refer to docs for details. must be one of [\"No flattening\", \"Root level flattening\"]; Default: \"No flattening\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "flattening"
                    ]
                }
            }
        },
        "airbyte:index/DestinationAzureBlobStorageConfigurationFormatJsonLinesNewlineDelimitedJson:DestinationAzureBlobStorageConfigurationFormatJsonLinesNewlineDelimitedJson": {
            "type": "object"
        },
        "airbyte:index/DestinationBigqueryConfiguration:DestinationBigqueryConfiguration": {
            "properties": {
                "bigQueryClientBufferSizeMb": {
                    "type": "integer",
                    "description": "Google BigQuery client's chunk (buffer) size (MIN=1, MAX = 15) for each table. The size that will be written by a single RPC. Written data will be buffered and only flushed upon reaching this size or closing the channel. The default 15MB value is used if not set explicitly. Read more \u003ca href=\"https://googleapis.dev/python/bigquery/latest/generated/google.cloud.bigquery.client.Client.html\"\u003ehere\u003c/a\u003e. Default: 15\n"
                },
                "credentialsJson": {
                    "type": "string",
                    "description": "The contents of the JSON service account key. Check out the \u003ca href=\"https://docs.airbyte.com/integrations/destinations/bigquery#service-account-key\"\u003edocs\u003c/a\u003e if you need help generating this key. Default credentials will be used if this field is left empty.\n"
                },
                "datasetId": {
                    "type": "string",
                    "description": "The default BigQuery Dataset ID that tables are replicated to if the source does not specify a namespace. Read more \u003ca href=\"https://cloud.google.com/bigquery/docs/datasets#create-dataset\"\u003ehere\u003c/a\u003e.\n"
                },
                "datasetLocation": {
                    "type": "string",
                    "description": "The location of the dataset. Warning: Changes made after creation will not be applied. Read more \u003ca href=\"https://cloud.google.com/bigquery/docs/locations\"\u003ehere\u003c/a\u003e. must be one of [\"US\", \"EU\", \"asia-east1\", \"asia-east2\", \"asia-northeast1\", \"asia-northeast2\", \"asia-northeast3\", \"asia-south1\", \"asia-south2\", \"asia-southeast1\", \"asia-southeast2\", \"australia-southeast1\", \"australia-southeast2\", \"europe-central1\", \"europe-central2\", \"europe-north1\", \"europe-southwest1\", \"europe-west1\", \"europe-west2\", \"europe-west3\", \"europe-west4\", \"europe-west6\", \"europe-west7\", \"europe-west8\", \"europe-west9\", \"europe-west12\", \"me-central1\", \"me-central2\", \"me-west1\", \"northamerica-northeast1\", \"northamerica-northeast2\", \"southamerica-east1\", \"southamerica-west1\", \"us-central1\", \"us-east1\", \"us-east2\", \"us-east3\", \"us-east4\", \"us-east5\", \"us-south1\", \"us-west1\", \"us-west2\", \"us-west3\", \"us-west4\"]\n"
                },
                "disableTypeDedupe": {
                    "type": "boolean",
                    "description": "Disable Writing Final Tables. WARNING! The data format in _airbyte_data is likely stable but there are no guarantees that other metadata columns will remain the same in future versions. Default: false\n"
                },
                "loadingMethod": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryConfigurationLoadingMethod:DestinationBigqueryConfigurationLoadingMethod",
                    "description": "The way data will be uploaded to BigQuery.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The GCP project ID for the project containing the target BigQuery dataset. Read more \u003ca href=\"https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects\"\u003ehere\u003c/a\u003e.\n"
                },
                "rawDataDataset": {
                    "type": "string",
                    "description": "The dataset to write raw tables into (default: airbyte_internal)\n"
                },
                "transformationPriority": {
                    "type": "string",
                    "description": "Interactive run type means that the query is executed as soon as possible, and these queries count towards concurrent rate limit and daily limit. Read more about interactive run type \u003ca href=\"https://cloud.google.com/bigquery/docs/running-queries#queries\"\u003ehere\u003c/a\u003e. Batch queries are queued and started as soon as idle resources are available in the BigQuery shared resource pool, which usually occurs within a few minutes. Batch queries don’t count towards your concurrent rate limit. Read more about batch queries \u003ca href=\"https://cloud.google.com/bigquery/docs/running-queries#batch\"\u003ehere\u003c/a\u003e. The default \"interactive\" value is used if not set explicitly. must be one of [\"interactive\", \"batch\"]; Default: \"interactive\"\n"
                }
            },
            "type": "object",
            "required": [
                "datasetId",
                "datasetLocation",
                "projectId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bigQueryClientBufferSizeMb",
                        "datasetId",
                        "datasetLocation",
                        "disableTypeDedupe",
                        "projectId",
                        "transformationPriority"
                    ]
                }
            }
        },
        "airbyte:index/DestinationBigqueryConfigurationLoadingMethod:DestinationBigqueryConfigurationLoadingMethod": {
            "properties": {
                "gcsStaging": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryConfigurationLoadingMethodGcsStaging:DestinationBigqueryConfigurationLoadingMethodGcsStaging",
                    "description": "\u003ci\u003e(recommended)\u003c/i\u003e Writes large batches of records to a file, uploads the file to GCS, then uses COPY INTO to load your data into BigQuery. Provides best-in-class speed, reliability and scalability. Read more about GCS Staging \u003ca href=\"https://docs.airbyte.com/integrations/destinations/bigquery#gcs-staging\"\u003ehere\u003c/a\u003e.\n"
                },
                "standardInserts": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryConfigurationLoadingMethodStandardInserts:DestinationBigqueryConfigurationLoadingMethodStandardInserts",
                    "description": "\u003ci\u003e(not recommended)\u003c/i\u003e Direct loading using SQL INSERT statements. This method is extremely inefficient and provided only for quick testing. In all other cases, you should use GCS staging.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationBigqueryConfigurationLoadingMethodGcsStaging:DestinationBigqueryConfigurationLoadingMethodGcsStaging": {
            "properties": {
                "credential": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryConfigurationLoadingMethodGcsStagingCredential:DestinationBigqueryConfigurationLoadingMethodGcsStagingCredential",
                    "description": "An HMAC key is a type of credential and can be associated with a service account or a user account in Cloud Storage. Read more \u003ca href=\"https://cloud.google.com/storage/docs/authentication/hmackeys\"\u003ehere\u003c/a\u003e.\n"
                },
                "gcsBucketName": {
                    "type": "string",
                    "description": "The name of the GCS bucket. Read more \u003ca href=\"https://cloud.google.com/storage/docs/naming-buckets\"\u003ehere\u003c/a\u003e.\n"
                },
                "gcsBucketPath": {
                    "type": "string",
                    "description": "Directory under the GCS bucket where data will be written.\n"
                },
                "keepFilesInGcsBucket": {
                    "type": "string",
                    "description": "This upload method is supposed to temporary store records in GCS bucket. By this select you can chose if these records should be removed from GCS when migration has finished. The default \"Delete all tmp files from GCS\" value is used if not set explicitly. must be one of [\"Delete all tmp files from GCS\", \"Keep all tmp files in GCS\"]; Default: \"Delete all tmp files from GCS\"\n"
                }
            },
            "type": "object",
            "required": [
                "credential",
                "gcsBucketName",
                "gcsBucketPath"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "credential",
                        "gcsBucketName",
                        "gcsBucketPath",
                        "keepFilesInGcsBucket"
                    ]
                }
            }
        },
        "airbyte:index/DestinationBigqueryConfigurationLoadingMethodGcsStagingCredential:DestinationBigqueryConfigurationLoadingMethodGcsStagingCredential": {
            "properties": {
                "hmacKey": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryConfigurationLoadingMethodGcsStagingCredentialHmacKey:DestinationBigqueryConfigurationLoadingMethodGcsStagingCredentialHmacKey"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationBigqueryConfigurationLoadingMethodGcsStagingCredentialHmacKey:DestinationBigqueryConfigurationLoadingMethodGcsStagingCredentialHmacKey": {
            "properties": {
                "hmacKeyAccessId": {
                    "type": "string",
                    "description": "HMAC key access ID. When linked to a service account, this ID is 61 characters long; when linked to a user account, it is 24 characters long.\n",
                    "secret": true
                },
                "hmacKeySecret": {
                    "type": "string",
                    "description": "The corresponding secret for the access ID. It is a 40-character base-64 encoded string.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "hmacKeyAccessId",
                "hmacKeySecret"
            ]
        },
        "airbyte:index/DestinationBigqueryConfigurationLoadingMethodStandardInserts:DestinationBigqueryConfigurationLoadingMethodStandardInserts": {
            "type": "object"
        },
        "airbyte:index/DestinationClickhouseConfiguration:DestinationClickhouseConfiguration": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "Name of the database.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname of the database.\n"
                },
                "jdbcUrlParams": {
                    "type": "string",
                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '\u0026'. (example: key1=value1\u0026key2=value2\u0026key3=value3).\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password associated with the username.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "HTTP port of the database. Default: 8123\n"
                },
                "rawDataSchema": {
                    "type": "string",
                    "description": "The schema to write raw tables into (default: airbyte_internal)\n"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/DestinationClickhouseConfigurationTunnelMethod:DestinationClickhouseConfigurationTunnelMethod",
                    "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username to use to access the database.\n"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "database",
                        "host",
                        "port",
                        "username"
                    ]
                }
            }
        },
        "airbyte:index/DestinationClickhouseConfigurationTunnelMethod:DestinationClickhouseConfigurationTunnelMethod": {
            "properties": {
                "noTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationClickhouseConfigurationTunnelMethodNoTunnel:DestinationClickhouseConfigurationTunnelMethodNoTunnel"
                },
                "passwordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationClickhouseConfigurationTunnelMethodPasswordAuthentication:DestinationClickhouseConfigurationTunnelMethodPasswordAuthentication"
                },
                "sshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationClickhouseConfigurationTunnelMethodSshKeyAuthentication:DestinationClickhouseConfigurationTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationClickhouseConfigurationTunnelMethodNoTunnel:DestinationClickhouseConfigurationTunnelMethodNoTunnel": {
            "type": "object"
        },
        "airbyte:index/DestinationClickhouseConfigurationTunnelMethodPasswordAuthentication:DestinationClickhouseConfigurationTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host\n"
                },
                "tunnelUserPassword": {
                    "type": "string",
                    "description": "OS-level password for logging into the jump server host\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser",
                        "tunnelUserPassword"
                    ]
                }
            }
        },
        "airbyte:index/DestinationClickhouseConfigurationTunnelMethodSshKeyAuthentication:DestinationClickhouseConfigurationTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string",
                    "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )\n",
                    "secret": true
                },
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host.\n"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "sshKey",
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser"
                    ]
                }
            }
        },
        "airbyte:index/DestinationConvexConfiguration:DestinationConvexConfiguration": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "API access key used to send data to a Convex deployment.\n",
                    "secret": true
                },
                "deploymentUrl": {
                    "type": "string",
                    "description": "URL of the Convex deployment that is the destination\n"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "deploymentUrl"
            ]
        },
        "airbyte:index/DestinationDatabricksConfiguration:DestinationDatabricksConfiguration": {
            "properties": {
                "acceptTerms": {
                    "type": "boolean",
                    "description": "You must agree to the Databricks JDBC Driver \u003ca href=\"https://databricks.com/jdbc-odbc-driver-license\"\u003eTerms \u0026 Conditions\u003c/a\u003e to use this connector. Default: false\n"
                },
                "dataSource": {
                    "$ref": "#/types/airbyte:index/DestinationDatabricksConfigurationDataSource:DestinationDatabricksConfigurationDataSource",
                    "description": "Storage on which the delta lake is built.\n"
                },
                "database": {
                    "type": "string",
                    "description": "The name of the catalog. If not specified otherwise, the \"hive_metastore\" will be used.\n"
                },
                "databricksHttpPath": {
                    "type": "string",
                    "description": "Databricks Cluster HTTP Path.\n"
                },
                "databricksPersonalAccessToken": {
                    "type": "string",
                    "description": "Databricks Personal Access Token for making authenticated requests.\n",
                    "secret": true
                },
                "databricksPort": {
                    "type": "string",
                    "description": "Databricks Cluster Port. Default: \"443\"\n"
                },
                "databricksServerHostname": {
                    "type": "string",
                    "description": "Databricks Cluster Server Hostname.\n"
                },
                "enableSchemaEvolution": {
                    "type": "boolean",
                    "description": "Support schema evolution for all streams. If \"false\", the connector might fail when a stream's schema changes. Default: false\n"
                },
                "purgeStagingData": {
                    "type": "boolean",
                    "description": "Default to 'true'. Switch it to 'false' for debugging purpose. Default: true\n"
                },
                "schema": {
                    "type": "string",
                    "description": "The default schema tables are written. If not specified otherwise, the \"default\" will be used. Default: \"default\"\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "databricksHttpPath",
                "databricksPersonalAccessToken",
                "databricksServerHostname"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "acceptTerms",
                        "dataSource",
                        "databricksHttpPath",
                        "databricksPersonalAccessToken",
                        "databricksPort",
                        "databricksServerHostname",
                        "enableSchemaEvolution",
                        "purgeStagingData",
                        "schema"
                    ]
                }
            }
        },
        "airbyte:index/DestinationDatabricksConfigurationDataSource:DestinationDatabricksConfigurationDataSource": {
            "properties": {
                "amazonS3": {
                    "$ref": "#/types/airbyte:index/DestinationDatabricksConfigurationDataSourceAmazonS3:DestinationDatabricksConfigurationDataSourceAmazonS3"
                },
                "azureBlobStorage": {
                    "$ref": "#/types/airbyte:index/DestinationDatabricksConfigurationDataSourceAzureBlobStorage:DestinationDatabricksConfigurationDataSourceAzureBlobStorage"
                },
                "recommendedManagedTables": {
                    "$ref": "#/types/airbyte:index/DestinationDatabricksConfigurationDataSourceRecommendedManagedTables:DestinationDatabricksConfigurationDataSourceRecommendedManagedTables"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationDatabricksConfigurationDataSourceAmazonS3:DestinationDatabricksConfigurationDataSourceAmazonS3": {
            "properties": {
                "fileNamePattern": {
                    "type": "string",
                    "description": "The pattern allows you to set the file-name format for the S3 staging file(s)\n"
                },
                "s3AccessKeyId": {
                    "type": "string",
                    "description": "The Access Key Id granting allow one to access the above S3 staging bucket. Airbyte requires Read and Write permissions to the given bucket.\n",
                    "secret": true
                },
                "s3BucketName": {
                    "type": "string",
                    "description": "The name of the S3 bucket to use for intermittent staging of the data.\n"
                },
                "s3BucketPath": {
                    "type": "string",
                    "description": "The directory under the S3 bucket where data will be written.\n"
                },
                "s3BucketRegion": {
                    "type": "string",
                    "description": "The region of the S3 staging bucket to use if utilising a copy strategy. must be one of [\"\", \"us-east-1\", \"us-east-2\", \"us-west-1\", \"us-west-2\", \"af-south-1\", \"ap-east-1\", \"ap-south-1\", \"ap-northeast-1\", \"ap-northeast-2\", \"ap-northeast-3\", \"ap-southeast-1\", \"ap-southeast-2\", \"ca-central-1\", \"cn-north-1\", \"cn-northwest-1\", \"eu-central-1\", \"eu-north-1\", \"eu-south-1\", \"eu-west-1\", \"eu-west-2\", \"eu-west-3\", \"sa-east-1\", \"me-south-1\", \"us-gov-east-1\", \"us-gov-west-1\"]; Default: \"\"\n"
                },
                "s3SecretAccessKey": {
                    "type": "string",
                    "description": "The corresponding secret to the above access key id.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "s3AccessKeyId",
                "s3BucketName",
                "s3BucketPath",
                "s3SecretAccessKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "s3AccessKeyId",
                        "s3BucketName",
                        "s3BucketPath",
                        "s3BucketRegion",
                        "s3SecretAccessKey"
                    ]
                }
            }
        },
        "airbyte:index/DestinationDatabricksConfigurationDataSourceAzureBlobStorage:DestinationDatabricksConfigurationDataSourceAzureBlobStorage": {
            "properties": {
                "azureBlobStorageAccountName": {
                    "type": "string",
                    "description": "The account's name of the Azure Blob Storage.\n"
                },
                "azureBlobStorageContainerName": {
                    "type": "string",
                    "description": "The name of the Azure blob storage container.\n"
                },
                "azureBlobStorageEndpointDomainName": {
                    "type": "string",
                    "description": "This is Azure Blob Storage endpoint domain name. Leave default value (or leave it empty if run container from command line) to use Microsoft native from example. Default: \"blob.core.windows.net\"\n"
                },
                "azureBlobStorageSasToken": {
                    "type": "string",
                    "description": "Shared access signature (SAS) token to grant limited access to objects in your storage account.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "azureBlobStorageAccountName",
                "azureBlobStorageContainerName",
                "azureBlobStorageSasToken"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "azureBlobStorageAccountName",
                        "azureBlobStorageContainerName",
                        "azureBlobStorageEndpointDomainName",
                        "azureBlobStorageSasToken"
                    ]
                }
            }
        },
        "airbyte:index/DestinationDatabricksConfigurationDataSourceRecommendedManagedTables:DestinationDatabricksConfigurationDataSourceRecommendedManagedTables": {
            "type": "object"
        },
        "airbyte:index/DestinationDevNullConfiguration:DestinationDevNullConfiguration": {
            "properties": {
                "testDestination": {
                    "$ref": "#/types/airbyte:index/DestinationDevNullConfigurationTestDestination:DestinationDevNullConfigurationTestDestination",
                    "description": "The type of destination to be used\n"
                }
            },
            "type": "object",
            "required": [
                "testDestination"
            ]
        },
        "airbyte:index/DestinationDevNullConfigurationTestDestination:DestinationDevNullConfigurationTestDestination": {
            "properties": {
                "silent": {
                    "$ref": "#/types/airbyte:index/DestinationDevNullConfigurationTestDestinationSilent:DestinationDevNullConfigurationTestDestinationSilent"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationDevNullConfigurationTestDestinationSilent:DestinationDevNullConfigurationTestDestinationSilent": {
            "type": "object"
        },
        "airbyte:index/DestinationDuckdbConfiguration:DestinationDuckdbConfiguration": {
            "properties": {
                "destinationPath": {
                    "type": "string",
                    "description": "Path to the .duckdb file, or the text 'md:' to connect to MotherDuck. The file will be placed inside that local mount. For more information check out our \u003ca href=\"https://docs.airbyte.io/integrations/destinations/duckdb\"\u003edocs\u003c/a\u003e\n"
                },
                "motherduckApiKey": {
                    "type": "string",
                    "description": "API key to use for authentication to a MotherDuck database.\n",
                    "secret": true
                },
                "schema": {
                    "type": "string",
                    "description": "Database schema name, default for duckdb is 'main'.\n"
                }
            },
            "type": "object",
            "required": [
                "destinationPath"
            ]
        },
        "airbyte:index/DestinationDynamodbConfiguration:DestinationDynamodbConfiguration": {
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "The access key id to access the DynamoDB. Airbyte requires Read and Write permissions to the DynamoDB.\n",
                    "secret": true
                },
                "dynamodbEndpoint": {
                    "type": "string",
                    "description": "This is your DynamoDB endpoint url.(if you are working with AWS DynamoDB, just leave empty). Default: \"\"\n"
                },
                "dynamodbRegion": {
                    "type": "string",
                    "description": "The region of the DynamoDB. must be one of [\"\", \"af-south-1\", \"ap-east-1\", \"ap-northeast-1\", \"ap-northeast-2\", \"ap-northeast-3\", \"ap-south-1\", \"ap-south-2\", \"ap-southeast-1\", \"ap-southeast-2\", \"ap-southeast-3\", \"ap-southeast-4\", \"ca-central-1\", \"ca-west-1\", \"cn-north-1\", \"cn-northwest-1\", \"eu-central-1\", \"eu-central-2\", \"eu-north-1\", \"eu-south-1\", \"eu-south-2\", \"eu-west-1\", \"eu-west-2\", \"eu-west-3\", \"il-central-1\", \"me-central-1\", \"me-south-1\", \"sa-east-1\", \"us-east-1\", \"us-east-2\", \"us-gov-east-1\", \"us-gov-west-1\", \"us-west-1\", \"us-west-2\"]; Default: \"\"\n"
                },
                "dynamodbTableNamePrefix": {
                    "type": "string",
                    "description": "The prefix to use when naming DynamoDB tables.\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "The corresponding secret to the access key id.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "dynamodbTableNamePrefix",
                "secretAccessKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessKeyId",
                        "dynamodbEndpoint",
                        "dynamodbRegion",
                        "dynamodbTableNamePrefix",
                        "secretAccessKey"
                    ]
                }
            }
        },
        "airbyte:index/DestinationElasticsearchConfiguration:DestinationElasticsearchConfiguration": {
            "properties": {
                "authenticationMethod": {
                    "$ref": "#/types/airbyte:index/DestinationElasticsearchConfigurationAuthenticationMethod:DestinationElasticsearchConfigurationAuthenticationMethod",
                    "description": "The type of authentication to be used\n"
                },
                "caCertificate": {
                    "type": "string",
                    "description": "CA certificate\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The full url of the Elasticsearch server\n"
                },
                "upsert": {
                    "type": "boolean",
                    "description": "If a primary key identifier is defined in the source, an upsert will be performed using the primary key value as the elasticsearch doc id. Does not support composite primary keys. Default: true\n"
                }
            },
            "type": "object",
            "required": [
                "endpoint"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "endpoint",
                        "upsert"
                    ]
                }
            }
        },
        "airbyte:index/DestinationElasticsearchConfigurationAuthenticationMethod:DestinationElasticsearchConfigurationAuthenticationMethod": {
            "properties": {
                "apiKeySecret": {
                    "$ref": "#/types/airbyte:index/DestinationElasticsearchConfigurationAuthenticationMethodApiKeySecret:DestinationElasticsearchConfigurationAuthenticationMethodApiKeySecret",
                    "description": "Use a api key and secret combination to authenticate\n"
                },
                "usernamePassword": {
                    "$ref": "#/types/airbyte:index/DestinationElasticsearchConfigurationAuthenticationMethodUsernamePassword:DestinationElasticsearchConfigurationAuthenticationMethodUsernamePassword",
                    "description": "Basic auth header with a username and password\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationElasticsearchConfigurationAuthenticationMethodApiKeySecret:DestinationElasticsearchConfigurationAuthenticationMethodApiKeySecret": {
            "properties": {
                "apiKeyId": {
                    "type": "string",
                    "description": "The Key ID to used when accessing an enterprise Elasticsearch instance.\n"
                },
                "apiKeySecret": {
                    "type": "string",
                    "description": "The secret associated with the API Key ID.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKeyId",
                "apiKeySecret"
            ]
        },
        "airbyte:index/DestinationElasticsearchConfigurationAuthenticationMethodUsernamePassword:DestinationElasticsearchConfigurationAuthenticationMethodUsernamePassword": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "Basic auth password to access a secure Elasticsearch server\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "Basic auth username to access a secure Elasticsearch server\n"
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "airbyte:index/DestinationFirestoreConfiguration:DestinationFirestoreConfiguration": {
            "properties": {
                "credentialsJson": {
                    "type": "string",
                    "description": "The contents of the JSON service account key. Check out the \u003ca href=\"https://docs.airbyte.io/integrations/destinations/firestore\"\u003edocs\u003c/a\u003e if you need help generating this key. Default credentials will be used if this field is left empty.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The GCP project ID for the project containing the target BigQuery dataset.\n"
                }
            },
            "type": "object",
            "required": [
                "projectId"
            ]
        },
        "airbyte:index/DestinationGcsConfiguration:DestinationGcsConfiguration": {
            "properties": {
                "credential": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationCredential:DestinationGcsConfigurationCredential",
                    "description": "An HMAC key is a type of credential and can be associated with a service account or a user account in Cloud Storage. Read more \u003ca href=\"https://cloud.google.com/storage/docs/authentication/hmackeys\"\u003ehere\u003c/a\u003e.\n"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormat:DestinationGcsConfigurationFormat",
                    "description": "Output data format. One of the following formats must be selected - \u003ca href=\"https://cloud.google.com/bigquery/docs/loading-data-cloud-storage-avro#advantages_of_avro\"\u003eAVRO\u003c/a\u003e format, \u003ca href=\"https://cloud.google.com/bigquery/docs/loading-data-cloud-storage-parquet#parquet_schemas\"\u003ePARQUET\u003c/a\u003e format, \u003ca href=\"https://cloud.google.com/bigquery/docs/loading-data-cloud-storage-csv#loading_csv_data_into_a_table\"\u003eCSV\u003c/a\u003e format, or \u003ca href=\"https://cloud.google.com/bigquery/docs/loading-data-cloud-storage-json#loading_json_data_into_a_new_table\"\u003eJSONL\u003c/a\u003e format.\n"
                },
                "gcsBucketName": {
                    "type": "string",
                    "description": "You can find the bucket name in the App Engine Admin console Application Settings page, under the label Google Cloud Storage Bucket. Read more \u003ca href=\"https://cloud.google.com/storage/docs/naming-buckets\"\u003ehere\u003c/a\u003e.\n"
                },
                "gcsBucketPath": {
                    "type": "string",
                    "description": "GCS Bucket Path string Subdirectory under the above bucket to sync the data into.\n"
                },
                "gcsBucketRegion": {
                    "type": "string",
                    "description": "Select a Region of the GCS Bucket. Read more \u003ca href=\"https://cloud.google.com/storage/docs/locations\"\u003ehere\u003c/a\u003e. must be one of [\"northamerica-northeast1\", \"northamerica-northeast2\", \"us-central1\", \"us-east1\", \"us-east4\", \"us-west1\", \"us-west2\", \"us-west3\", \"us-west4\", \"southamerica-east1\", \"southamerica-west1\", \"europe-central2\", \"europe-north1\", \"europe-west1\", \"europe-west2\", \"europe-west3\", \"europe-west4\", \"europe-west6\", \"asia-east1\", \"asia-east2\", \"asia-northeast1\", \"asia-northeast2\", \"asia-northeast3\", \"asia-south1\", \"asia-south2\", \"asia-southeast1\", \"asia-southeast2\", \"australia-southeast1\", \"australia-southeast2\", \"asia\", \"eu\", \"us\", \"asia1\", \"eur4\", \"nam4\"]; Default: \"us\"\n"
                }
            },
            "type": "object",
            "required": [
                "credential",
                "format",
                "gcsBucketName",
                "gcsBucketPath"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "credential",
                        "format",
                        "gcsBucketName",
                        "gcsBucketPath",
                        "gcsBucketRegion"
                    ]
                }
            }
        },
        "airbyte:index/DestinationGcsConfigurationCredential:DestinationGcsConfigurationCredential": {
            "properties": {
                "hmacKey": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationCredentialHmacKey:DestinationGcsConfigurationCredentialHmacKey"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationCredentialHmacKey:DestinationGcsConfigurationCredentialHmacKey": {
            "properties": {
                "credentialType": {
                    "type": "string",
                    "description": "must be one of [\"HMAC_KEY\"]; Default: \"HMAC_KEY\"\n"
                },
                "hmacKeyAccessId": {
                    "type": "string",
                    "description": "When linked to a service account, this ID is 61 characters long; when linked to a user account, it is 24 characters long. Read more \u003ca href=\"https://cloud.google.com/storage/docs/authentication/hmackeys#overview\"\u003ehere\u003c/a\u003e.\n",
                    "secret": true
                },
                "hmacKeySecret": {
                    "type": "string",
                    "description": "The corresponding secret for the access ID. It is a 40-character base-64 encoded string.  Read more \u003ca href=\"https://cloud.google.com/storage/docs/authentication/hmackeys#secrets\"\u003ehere\u003c/a\u003e.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "hmacKeyAccessId",
                "hmacKeySecret"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "credentialType",
                        "hmacKeyAccessId",
                        "hmacKeySecret"
                    ]
                }
            }
        },
        "airbyte:index/DestinationGcsConfigurationFormat:DestinationGcsConfigurationFormat": {
            "properties": {
                "avroApacheAvro": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatAvroApacheAvro:DestinationGcsConfigurationFormatAvroApacheAvro"
                },
                "csvCommaSeparatedValues": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatCsvCommaSeparatedValues:DestinationGcsConfigurationFormatCsvCommaSeparatedValues"
                },
                "jsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatJsonLinesNewlineDelimitedJson:DestinationGcsConfigurationFormatJsonLinesNewlineDelimitedJson"
                },
                "parquetColumnarStorage": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatParquetColumnarStorage:DestinationGcsConfigurationFormatParquetColumnarStorage"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationFormatAvroApacheAvro:DestinationGcsConfigurationFormatAvroApacheAvro": {
            "properties": {
                "compressionCodec": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodec:DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodec",
                    "description": "The compression algorithm used to compress data. Default to no compression.\n"
                },
                "formatType": {
                    "type": "string",
                    "description": "must be one of [\"Avro\"]; Default: \"Avro\"\n"
                }
            },
            "type": "object",
            "required": [
                "compressionCodec"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "compressionCodec",
                        "formatType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodec:DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodec": {
            "properties": {
                "bzip2": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecBzip2:DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecBzip2"
                },
                "deflate": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecDeflate:DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecDeflate"
                },
                "noCompression": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecNoCompression:DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecNoCompression"
                },
                "snappy": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecSnappy:DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecSnappy"
                },
                "xz": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecXz:DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecXz"
                },
                "zstandard": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecZstandard:DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecZstandard"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecBzip2:DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecBzip2": {
            "properties": {
                "codec": {
                    "type": "string",
                    "description": "must be one of [\"bzip2\"]; Default: \"bzip2\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "codec"
                    ]
                }
            }
        },
        "airbyte:index/DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecDeflate:DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecDeflate": {
            "properties": {
                "codec": {
                    "type": "string",
                    "description": "must be one of [\"Deflate\"]; Default: \"Deflate\"\n"
                },
                "compressionLevel": {
                    "type": "integer",
                    "description": "0: no compression \u0026 fastest, 9: best compression \u0026 slowest. Default: 0\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "codec",
                        "compressionLevel"
                    ]
                }
            }
        },
        "airbyte:index/DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecNoCompression:DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecNoCompression": {
            "properties": {
                "codec": {
                    "type": "string",
                    "description": "must be one of [\"no compression\"]; Default: \"no compression\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "codec"
                    ]
                }
            }
        },
        "airbyte:index/DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecSnappy:DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecSnappy": {
            "properties": {
                "codec": {
                    "type": "string",
                    "description": "must be one of [\"snappy\"]; Default: \"snappy\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "codec"
                    ]
                }
            }
        },
        "airbyte:index/DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecXz:DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecXz": {
            "properties": {
                "codec": {
                    "type": "string",
                    "description": "must be one of [\"xz\"]; Default: \"xz\"\n"
                },
                "compressionLevel": {
                    "type": "integer",
                    "description": "The presets 0-3 are fast presets with medium compression. The presets 4-6 are fairly slow presets with high compression. The default preset is 6. The presets 7-9 are like the preset 6 but use bigger dictionaries and have higher compressor and decompressor memory requirements. Unless the uncompressed size of the file exceeds 8 MiB, 16 MiB, or 32 MiB, it is waste of memory to use the presets 7, 8, or 9, respectively. Read more \u003ca href=\"https://commons.apache.org/proper/commons-compress/apidocs/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.html#XZCompressorOutputStream-java.io.OutputStream-int-\"\u003ehere\u003c/a\u003e for details. Default: 6\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "codec",
                        "compressionLevel"
                    ]
                }
            }
        },
        "airbyte:index/DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecZstandard:DestinationGcsConfigurationFormatAvroApacheAvroCompressionCodecZstandard": {
            "properties": {
                "codec": {
                    "type": "string",
                    "description": "must be one of [\"zstandard\"]; Default: \"zstandard\"\n"
                },
                "compressionLevel": {
                    "type": "integer",
                    "description": "Negative levels are 'fast' modes akin to lz4 or snappy, levels above 9 are generally for archival purposes, and levels above 18 use a lot of memory. Default: 3\n"
                },
                "includeChecksum": {
                    "type": "boolean",
                    "description": "If true, include a checksum with each data block. Default: false\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "codec",
                        "compressionLevel",
                        "includeChecksum"
                    ]
                }
            }
        },
        "airbyte:index/DestinationGcsConfigurationFormatCsvCommaSeparatedValues:DestinationGcsConfigurationFormatCsvCommaSeparatedValues": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatCsvCommaSeparatedValuesCompression:DestinationGcsConfigurationFormatCsvCommaSeparatedValuesCompression",
                    "description": "Whether the output files should be compressed. If compression is selected, the output filename will have an extra extension (GZIP: \".csv.gz\").\n"
                },
                "flattening": {
                    "type": "string",
                    "description": "Whether the input JSON data should be normalized (flattened) in the output CSV. Please refer to docs for details. must be one of [\"No flattening\", \"Root level flattening\"]; Default: \"No flattening\"\n"
                },
                "formatType": {
                    "type": "string",
                    "description": "must be one of [\"CSV\"]; Default: \"CSV\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "flattening",
                        "formatType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationGcsConfigurationFormatCsvCommaSeparatedValuesCompression:DestinationGcsConfigurationFormatCsvCommaSeparatedValuesCompression": {
            "properties": {
                "gzip": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatCsvCommaSeparatedValuesCompressionGzip:DestinationGcsConfigurationFormatCsvCommaSeparatedValuesCompressionGzip"
                },
                "noCompression": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatCsvCommaSeparatedValuesCompressionNoCompression:DestinationGcsConfigurationFormatCsvCommaSeparatedValuesCompressionNoCompression"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationFormatCsvCommaSeparatedValuesCompressionGzip:DestinationGcsConfigurationFormatCsvCommaSeparatedValuesCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string",
                    "description": "must be one of [\"GZIP\"]; Default: \"GZIP\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "compressionType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationGcsConfigurationFormatCsvCommaSeparatedValuesCompressionNoCompression:DestinationGcsConfigurationFormatCsvCommaSeparatedValuesCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string",
                    "description": "must be one of [\"No Compression\"]; Default: \"No Compression\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "compressionType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationGcsConfigurationFormatJsonLinesNewlineDelimitedJson:DestinationGcsConfigurationFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatJsonLinesNewlineDelimitedJsonCompression:DestinationGcsConfigurationFormatJsonLinesNewlineDelimitedJsonCompression",
                    "description": "Whether the output files should be compressed. If compression is selected, the output filename will have an extra extension (GZIP: \".jsonl.gz\").\n"
                },
                "formatType": {
                    "type": "string",
                    "description": "must be one of [\"JSONL\"]; Default: \"JSONL\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "formatType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationGcsConfigurationFormatJsonLinesNewlineDelimitedJsonCompression:DestinationGcsConfigurationFormatJsonLinesNewlineDelimitedJsonCompression": {
            "properties": {
                "gzip": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationGcsConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionGzip"
                },
                "noCompression": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationGcsConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationGcsConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string",
                    "description": "must be one of [\"GZIP\"]; Default: \"GZIP\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "compressionType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationGcsConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationGcsConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string",
                    "description": "must be one of [\"No Compression\"]; Default: \"No Compression\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "compressionType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationGcsConfigurationFormatParquetColumnarStorage:DestinationGcsConfigurationFormatParquetColumnarStorage": {
            "properties": {
                "blockSizeMb": {
                    "type": "integer",
                    "description": "This is the size of a row group being buffered in memory. It limits the memory usage when writing. Larger values will improve the IO when reading, but consume more memory when writing. Default: 128 MB. Default: 128\n"
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The compression algorithm used to compress data pages. must be one of [\"UNCOMPRESSED\", \"SNAPPY\", \"GZIP\", \"LZO\", \"BROTLI\", \"LZ4\", \"ZSTD\"]; Default: \"UNCOMPRESSED\"\n"
                },
                "dictionaryEncoding": {
                    "type": "boolean",
                    "description": "Default: true. Default: true\n"
                },
                "dictionaryPageSizeKb": {
                    "type": "integer",
                    "description": "There is one dictionary page per column per row group when dictionary encoding is used. The dictionary page size works like the page size but for dictionary. Default: 1024 KB. Default: 1024\n"
                },
                "formatType": {
                    "type": "string",
                    "description": "must be one of [\"Parquet\"]; Default: \"Parquet\"\n"
                },
                "maxPaddingSizeMb": {
                    "type": "integer",
                    "description": "Maximum size allowed as padding to align row groups. This is also the minimum size of a row group. Default: 8 MB. Default: 8\n"
                },
                "pageSizeKb": {
                    "type": "integer",
                    "description": "The page size is for compression. A block is composed of pages. A page is the smallest unit that must be read fully to access a single record. If this value is too small, the compression will deteriorate. Default: 1024 KB. Default: 1024\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "blockSizeMb",
                        "compressionCodec",
                        "dictionaryEncoding",
                        "dictionaryPageSizeKb",
                        "formatType",
                        "maxPaddingSizeMb",
                        "pageSizeKb"
                    ]
                }
            }
        },
        "airbyte:index/DestinationGoogleSheetsConfiguration:DestinationGoogleSheetsConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/DestinationGoogleSheetsConfigurationCredentials:DestinationGoogleSheetsConfigurationCredentials",
                    "description": "Google API Credentials for connecting to Google Sheets and Google Drive APIs\n"
                },
                "spreadsheetId": {
                    "type": "string",
                    "description": "The link to your spreadsheet. See \u003ca href='https://docs.airbyte.com/integrations/destinations/google-sheets#sheetlink'\u003ethis guide\u003c/a\u003e for more details.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "spreadsheetId"
            ]
        },
        "airbyte:index/DestinationGoogleSheetsConfigurationCredentials:DestinationGoogleSheetsConfigurationCredentials": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your Google Sheets developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your Google Sheets developer application.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The token for obtaining new access token.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/DestinationLangchainConfiguration:DestinationLangchainConfiguration": {
            "properties": {
                "embedding": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationEmbedding:DestinationLangchainConfigurationEmbedding",
                    "description": "Embedding configuration\n"
                },
                "indexing": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationIndexing:DestinationLangchainConfigurationIndexing",
                    "description": "Indexing configuration\n"
                },
                "processing": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationProcessing:DestinationLangchainConfigurationProcessing"
                }
            },
            "type": "object",
            "required": [
                "embedding",
                "indexing",
                "processing"
            ]
        },
        "airbyte:index/DestinationLangchainConfigurationEmbedding:DestinationLangchainConfigurationEmbedding": {
            "properties": {
                "fake": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationEmbeddingFake:DestinationLangchainConfigurationEmbeddingFake",
                    "description": "Use a fake embedding made out of random vectors with 1536 embedding dimensions. This is useful for testing the data pipeline without incurring any costs.\n"
                },
                "openAi": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationEmbeddingOpenAi:DestinationLangchainConfigurationEmbeddingOpenAi",
                    "description": "Use the OpenAI API to embed text. This option is using the text-embedding-ada-002 model with 1536 embedding dimensions.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationLangchainConfigurationEmbeddingFake:DestinationLangchainConfigurationEmbeddingFake": {
            "type": "object"
        },
        "airbyte:index/DestinationLangchainConfigurationEmbeddingOpenAi:DestinationLangchainConfigurationEmbeddingOpenAi": {
            "properties": {
                "openaiKey": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "openaiKey"
            ]
        },
        "airbyte:index/DestinationLangchainConfigurationIndexing:DestinationLangchainConfigurationIndexing": {
            "properties": {
                "chromaLocalPersistance": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationIndexingChromaLocalPersistance:DestinationLangchainConfigurationIndexingChromaLocalPersistance",
                    "description": "Chroma is a popular vector store that can be used to store and retrieve embeddings. It will build its index in memory and persist it to disk by the end of the sync.\n"
                },
                "docArrayHnswSearch": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationIndexingDocArrayHnswSearch:DestinationLangchainConfigurationIndexingDocArrayHnswSearch",
                    "description": "DocArrayHnswSearch is a lightweight Document Index implementation provided by Docarray that runs fully locally and is best suited for small- to medium-sized datasets. It stores vectors on disk in hnswlib, and stores all other data in SQLite.\n"
                },
                "pinecone": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationIndexingPinecone:DestinationLangchainConfigurationIndexingPinecone",
                    "description": "Pinecone is a popular vector store that can be used to store and retrieve embeddings. It is a managed service and can also be queried from outside of langchain.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationLangchainConfigurationIndexingChromaLocalPersistance:DestinationLangchainConfigurationIndexingChromaLocalPersistance": {
            "properties": {
                "collectionName": {
                    "type": "string",
                    "description": "Name of the collection to use. Default: \"langchain\"\n"
                },
                "destinationPath": {
                    "type": "string",
                    "description": "Path to the directory where chroma files will be written. The files will be placed inside that local mount.\n"
                }
            },
            "type": "object",
            "required": [
                "destinationPath"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "collectionName",
                        "destinationPath"
                    ]
                }
            }
        },
        "airbyte:index/DestinationLangchainConfigurationIndexingDocArrayHnswSearch:DestinationLangchainConfigurationIndexingDocArrayHnswSearch": {
            "properties": {
                "destinationPath": {
                    "type": "string",
                    "description": "Path to the directory where hnswlib and meta data files will be written. The files will be placed inside that local mount. All files in the specified destination directory will be deleted on each run.\n"
                }
            },
            "type": "object",
            "required": [
                "destinationPath"
            ]
        },
        "airbyte:index/DestinationLangchainConfigurationIndexingPinecone:DestinationLangchainConfigurationIndexingPinecone": {
            "properties": {
                "index": {
                    "type": "string",
                    "description": "Pinecone index to use\n"
                },
                "pineconeEnvironment": {
                    "type": "string",
                    "description": "Pinecone environment to use\n"
                },
                "pineconeKey": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "index",
                "pineconeEnvironment",
                "pineconeKey"
            ]
        },
        "airbyte:index/DestinationLangchainConfigurationProcessing:DestinationLangchainConfigurationProcessing": {
            "properties": {
                "chunkOverlap": {
                    "type": "integer",
                    "description": "Size of overlap between chunks in tokens to store in vector store to better capture relevant context. Default: 0\n"
                },
                "chunkSize": {
                    "type": "integer",
                    "description": "Size of chunks in tokens to store in vector store (make sure it is not too big for the context if your LLM)\n"
                },
                "textFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of fields in the record that should be used to calculate the embedding. All other fields are passed along as meta fields. The field list is applied to all streams in the same way and non-existing fields are ignored. If none are defined, all fields are considered text fields. When specifying text fields, you can access nested fields in the record by using dot notation, e.g. `user.name` will access the `name` field in the `user` object. It's also possible to use wildcards to access all fields in an object, e.g. `users.*.name` will access all `names` fields in all entries of the `users` array.\n"
                }
            },
            "type": "object",
            "required": [
                "chunkSize",
                "textFields"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "chunkOverlap",
                        "chunkSize",
                        "textFields"
                    ]
                }
            }
        },
        "airbyte:index/DestinationMilvusConfiguration:DestinationMilvusConfiguration": {
            "properties": {
                "embedding": {
                    "$ref": "#/types/airbyte:index/DestinationMilvusConfigurationEmbedding:DestinationMilvusConfigurationEmbedding",
                    "description": "Embedding configuration\n"
                },
                "indexing": {
                    "$ref": "#/types/airbyte:index/DestinationMilvusConfigurationIndexing:DestinationMilvusConfigurationIndexing",
                    "description": "Indexing configuration\n"
                },
                "omitRawText": {
                    "type": "boolean",
                    "description": "Do not store the text that gets embedded along with the vector and the metadata in the destination. If set to true, only the vector and the metadata will be stored - in this case raw text for LLM use cases needs to be retrieved from another source. Default: false\n"
                },
                "processing": {
                    "$ref": "#/types/airbyte:index/DestinationMilvusConfigurationProcessing:DestinationMilvusConfigurationProcessing"
                }
            },
            "type": "object",
            "required": [
                "embedding",
                "indexing",
                "processing"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "embedding",
                        "indexing",
                        "omitRawText",
                        "processing"
                    ]
                }
            }
        },
        "airbyte:index/DestinationMilvusConfigurationEmbedding:DestinationMilvusConfigurationEmbedding": {
            "properties": {
                "azureOpenAi": {
                    "$ref": "#/types/airbyte:index/DestinationMilvusConfigurationEmbeddingAzureOpenAi:DestinationMilvusConfigurationEmbeddingAzureOpenAi",
                    "description": "Use the Azure-hosted OpenAI API to embed text. This option is using the text-embedding-ada-002 model with 1536 embedding dimensions.\n"
                },
                "cohere": {
                    "$ref": "#/types/airbyte:index/DestinationMilvusConfigurationEmbeddingCohere:DestinationMilvusConfigurationEmbeddingCohere",
                    "description": "Use the Cohere API to embed text.\n"
                },
                "fake": {
                    "$ref": "#/types/airbyte:index/DestinationMilvusConfigurationEmbeddingFake:DestinationMilvusConfigurationEmbeddingFake",
                    "description": "Use a fake embedding made out of random vectors with 1536 embedding dimensions. This is useful for testing the data pipeline without incurring any costs.\n"
                },
                "openAi": {
                    "$ref": "#/types/airbyte:index/DestinationMilvusConfigurationEmbeddingOpenAi:DestinationMilvusConfigurationEmbeddingOpenAi",
                    "description": "Use the OpenAI API to embed text. This option is using the text-embedding-ada-002 model with 1536 embedding dimensions.\n"
                },
                "openAiCompatible": {
                    "$ref": "#/types/airbyte:index/DestinationMilvusConfigurationEmbeddingOpenAiCompatible:DestinationMilvusConfigurationEmbeddingOpenAiCompatible",
                    "description": "Use a service that's compatible with the OpenAI API to embed text.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationMilvusConfigurationEmbeddingAzureOpenAi:DestinationMilvusConfigurationEmbeddingAzureOpenAi": {
            "properties": {
                "apiBase": {
                    "type": "string",
                    "description": "The base URL for your Azure OpenAI resource.  You can find this in the Azure portal under your Azure OpenAI resource\n"
                },
                "deployment": {
                    "type": "string",
                    "description": "The deployment for your Azure OpenAI resource.  You can find this in the Azure portal under your Azure OpenAI resource\n"
                },
                "openaiKey": {
                    "type": "string",
                    "description": "The API key for your Azure OpenAI resource.  You can find this in the Azure portal under your Azure OpenAI resource\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiBase",
                "deployment",
                "openaiKey"
            ]
        },
        "airbyte:index/DestinationMilvusConfigurationEmbeddingCohere:DestinationMilvusConfigurationEmbeddingCohere": {
            "properties": {
                "cohereKey": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "cohereKey"
            ]
        },
        "airbyte:index/DestinationMilvusConfigurationEmbeddingFake:DestinationMilvusConfigurationEmbeddingFake": {
            "type": "object"
        },
        "airbyte:index/DestinationMilvusConfigurationEmbeddingOpenAi:DestinationMilvusConfigurationEmbeddingOpenAi": {
            "properties": {
                "openaiKey": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "openaiKey"
            ]
        },
        "airbyte:index/DestinationMilvusConfigurationEmbeddingOpenAiCompatible:DestinationMilvusConfigurationEmbeddingOpenAiCompatible": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Default: \"\"\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "The base URL for your OpenAI-compatible service\n"
                },
                "dimensions": {
                    "type": "integer",
                    "description": "The number of dimensions the embedding model is generating\n"
                },
                "modelName": {
                    "type": "string",
                    "description": "The name of the model to use for embedding. Default: \"text-embedding-ada-002\"\n"
                }
            },
            "type": "object",
            "required": [
                "baseUrl",
                "dimensions"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "baseUrl",
                        "dimensions",
                        "modelName"
                    ]
                }
            }
        },
        "airbyte:index/DestinationMilvusConfigurationIndexing:DestinationMilvusConfigurationIndexing": {
            "properties": {
                "auth": {
                    "$ref": "#/types/airbyte:index/DestinationMilvusConfigurationIndexingAuth:DestinationMilvusConfigurationIndexingAuth",
                    "description": "Authentication method\n"
                },
                "collection": {
                    "type": "string",
                    "description": "The collection to load data into\n"
                },
                "db": {
                    "type": "string",
                    "description": "The database to connect to. Default: \"\"\n"
                },
                "host": {
                    "type": "string",
                    "description": "The public endpoint of the Milvus instance.\n"
                },
                "textField": {
                    "type": "string",
                    "description": "The field in the entity that contains the embedded text. Default: \"text\"\n"
                },
                "vectorField": {
                    "type": "string",
                    "description": "The field in the entity that contains the vector. Default: \"vector\"\n"
                }
            },
            "type": "object",
            "required": [
                "auth",
                "collection",
                "host"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "auth",
                        "collection",
                        "db",
                        "host",
                        "textField",
                        "vectorField"
                    ]
                }
            }
        },
        "airbyte:index/DestinationMilvusConfigurationIndexingAuth:DestinationMilvusConfigurationIndexingAuth": {
            "properties": {
                "apiToken": {
                    "$ref": "#/types/airbyte:index/DestinationMilvusConfigurationIndexingAuthApiToken:DestinationMilvusConfigurationIndexingAuthApiToken",
                    "description": "Authenticate using an API token (suitable for Zilliz Cloud)\n"
                },
                "noAuth": {
                    "$ref": "#/types/airbyte:index/DestinationMilvusConfigurationIndexingAuthNoAuth:DestinationMilvusConfigurationIndexingAuthNoAuth",
                    "description": "Do not authenticate (suitable for locally running test clusters, do not use for clusters with public IP addresses)\n"
                },
                "usernamePassword": {
                    "$ref": "#/types/airbyte:index/DestinationMilvusConfigurationIndexingAuthUsernamePassword:DestinationMilvusConfigurationIndexingAuthUsernamePassword",
                    "description": "Authenticate using username and password (suitable for self-managed Milvus clusters)\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationMilvusConfigurationIndexingAuthApiToken:DestinationMilvusConfigurationIndexingAuthApiToken": {
            "properties": {
                "token": {
                    "type": "string",
                    "description": "API Token for the Milvus instance\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "token"
            ]
        },
        "airbyte:index/DestinationMilvusConfigurationIndexingAuthNoAuth:DestinationMilvusConfigurationIndexingAuthNoAuth": {
            "type": "object"
        },
        "airbyte:index/DestinationMilvusConfigurationIndexingAuthUsernamePassword:DestinationMilvusConfigurationIndexingAuthUsernamePassword": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "Password for the Milvus instance\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "Username for the Milvus instance\n"
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "airbyte:index/DestinationMilvusConfigurationProcessing:DestinationMilvusConfigurationProcessing": {
            "properties": {
                "chunkOverlap": {
                    "type": "integer",
                    "description": "Size of overlap between chunks in tokens to store in vector store to better capture relevant context. Default: 0\n"
                },
                "chunkSize": {
                    "type": "integer",
                    "description": "Size of chunks in tokens to store in vector store (make sure it is not too big for the context if your LLM)\n"
                },
                "fieldNameMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/DestinationMilvusConfigurationProcessingFieldNameMapping:DestinationMilvusConfigurationProcessingFieldNameMapping"
                    },
                    "description": "List of fields to rename. Not applicable for nested fields, but can be used to rename fields already flattened via dot notation.\n"
                },
                "metadataFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of fields in the record that should be stored as metadata. The field list is applied to all streams in the same way and non-existing fields are ignored. If none are defined, all fields are considered metadata fields. When specifying text fields, you can access nested fields in the record by using dot notation, e.g. `user.name` will access the `name` field in the `user` object. It's also possible to use wildcards to access all fields in an object, e.g. `users.*.name` will access all `names` fields in all entries of the `users` array. When specifying nested paths, all matching values are flattened into an array set to a field named by the path.\n"
                },
                "textFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of fields in the record that should be used to calculate the embedding. The field list is applied to all streams in the same way and non-existing fields are ignored. If none are defined, all fields are considered text fields. When specifying text fields, you can access nested fields in the record by using dot notation, e.g. `user.name` will access the `name` field in the `user` object. It's also possible to use wildcards to access all fields in an object, e.g. `users.*.name` will access all `names` fields in all entries of the `users` array.\n"
                },
                "textSplitter": {
                    "$ref": "#/types/airbyte:index/DestinationMilvusConfigurationProcessingTextSplitter:DestinationMilvusConfigurationProcessingTextSplitter",
                    "description": "Split text fields into chunks based on the specified method.\n"
                }
            },
            "type": "object",
            "required": [
                "chunkSize"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "chunkOverlap",
                        "chunkSize"
                    ]
                }
            }
        },
        "airbyte:index/DestinationMilvusConfigurationProcessingFieldNameMapping:DestinationMilvusConfigurationProcessingFieldNameMapping": {
            "properties": {
                "fromField": {
                    "type": "string",
                    "description": "The field name in the source\n"
                },
                "toField": {
                    "type": "string",
                    "description": "The field name to use in the destination\n"
                }
            },
            "type": "object",
            "required": [
                "fromField",
                "toField"
            ]
        },
        "airbyte:index/DestinationMilvusConfigurationProcessingTextSplitter:DestinationMilvusConfigurationProcessingTextSplitter": {
            "properties": {
                "byMarkdownHeader": {
                    "$ref": "#/types/airbyte:index/DestinationMilvusConfigurationProcessingTextSplitterByMarkdownHeader:DestinationMilvusConfigurationProcessingTextSplitterByMarkdownHeader",
                    "description": "Split the text by Markdown headers down to the specified header level. If the chunk size fits multiple sections, they will be combined into a single chunk.\n"
                },
                "byProgrammingLanguage": {
                    "$ref": "#/types/airbyte:index/DestinationMilvusConfigurationProcessingTextSplitterByProgrammingLanguage:DestinationMilvusConfigurationProcessingTextSplitterByProgrammingLanguage",
                    "description": "Split the text by suitable delimiters based on the programming language. This is useful for splitting code into chunks.\n"
                },
                "bySeparator": {
                    "$ref": "#/types/airbyte:index/DestinationMilvusConfigurationProcessingTextSplitterBySeparator:DestinationMilvusConfigurationProcessingTextSplitterBySeparator",
                    "description": "Split the text by the list of separators until the chunk size is reached, using the earlier mentioned separators where possible. This is useful for splitting text fields by paragraphs, sentences, words, etc.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationMilvusConfigurationProcessingTextSplitterByMarkdownHeader:DestinationMilvusConfigurationProcessingTextSplitterByMarkdownHeader": {
            "properties": {
                "splitLevel": {
                    "type": "integer",
                    "description": "Level of markdown headers to split text fields by. Headings down to the specified level will be used as split points. Default: 1\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "splitLevel"
                    ]
                }
            }
        },
        "airbyte:index/DestinationMilvusConfigurationProcessingTextSplitterByProgrammingLanguage:DestinationMilvusConfigurationProcessingTextSplitterByProgrammingLanguage": {
            "properties": {
                "language": {
                    "type": "string",
                    "description": "Split code in suitable places based on the programming language. must be one of [\"cpp\", \"go\", \"java\", \"js\", \"php\", \"proto\", \"python\", \"rst\", \"ruby\", \"rust\", \"scala\", \"swift\", \"markdown\", \"latex\", \"html\", \"sol\"]\n"
                }
            },
            "type": "object",
            "required": [
                "language"
            ]
        },
        "airbyte:index/DestinationMilvusConfigurationProcessingTextSplitterBySeparator:DestinationMilvusConfigurationProcessingTextSplitterBySeparator": {
            "properties": {
                "keepSeparator": {
                    "type": "boolean",
                    "description": "Whether to keep the separator in the resulting chunks. Default: false\n"
                },
                "separators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of separator strings to split text fields by. The separator itself needs to be wrapped in double quotes, e.g. to split by the dot character, use \".\". To split by a newline, use \"\\n\".\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "keepSeparator"
                    ]
                }
            }
        },
        "airbyte:index/DestinationMongodbConfiguration:DestinationMongodbConfiguration": {
            "properties": {
                "authType": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationAuthType:DestinationMongodbConfigurationAuthType",
                    "description": "Authorization type.\n"
                },
                "database": {
                    "type": "string",
                    "description": "Name of the database.\n"
                },
                "instanceType": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationInstanceType:DestinationMongodbConfigurationInstanceType",
                    "description": "MongoDb instance to connect to. For MongoDB Atlas and Replica Set TLS connection is used by default.\n"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationTunnelMethod:DestinationMongodbConfigurationTunnelMethod",
                    "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.\n"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "database"
            ]
        },
        "airbyte:index/DestinationMongodbConfigurationAuthType:DestinationMongodbConfigurationAuthType": {
            "properties": {
                "loginPassword": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationAuthTypeLoginPassword:DestinationMongodbConfigurationAuthTypeLoginPassword",
                    "description": "Login/Password.\n"
                },
                "none": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationAuthTypeNone:DestinationMongodbConfigurationAuthTypeNone",
                    "description": "None.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationMongodbConfigurationAuthTypeLoginPassword:DestinationMongodbConfigurationAuthTypeLoginPassword": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "Password associated with the username.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "Username to use to access the database.\n"
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "airbyte:index/DestinationMongodbConfigurationAuthTypeNone:DestinationMongodbConfigurationAuthTypeNone": {
            "type": "object"
        },
        "airbyte:index/DestinationMongodbConfigurationInstanceType:DestinationMongodbConfigurationInstanceType": {
            "properties": {
                "mongoDbAtlas": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationInstanceTypeMongoDbAtlas:DestinationMongodbConfigurationInstanceTypeMongoDbAtlas"
                },
                "replicaSet": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationInstanceTypeReplicaSet:DestinationMongodbConfigurationInstanceTypeReplicaSet"
                },
                "standaloneMongoDbInstance": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationInstanceTypeStandaloneMongoDbInstance:DestinationMongodbConfigurationInstanceTypeStandaloneMongoDbInstance"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationMongodbConfigurationInstanceTypeMongoDbAtlas:DestinationMongodbConfigurationInstanceTypeMongoDbAtlas": {
            "properties": {
                "clusterUrl": {
                    "type": "string",
                    "description": "URL of a cluster to connect to.\n"
                },
                "instance": {
                    "type": "string",
                    "description": "must be one of [\"atlas\"]; Default: \"atlas\"\n"
                }
            },
            "type": "object",
            "required": [
                "clusterUrl"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "clusterUrl",
                        "instance"
                    ]
                }
            }
        },
        "airbyte:index/DestinationMongodbConfigurationInstanceTypeReplicaSet:DestinationMongodbConfigurationInstanceTypeReplicaSet": {
            "properties": {
                "instance": {
                    "type": "string",
                    "description": "must be one of [\"replica\"]; Default: \"replica\"\n"
                },
                "replicaSet": {
                    "type": "string",
                    "description": "A replica set name.\n"
                },
                "serverAddresses": {
                    "type": "string",
                    "description": "The members of a replica set. Please specify `host`:`port` of each member seperated by comma.\n"
                }
            },
            "type": "object",
            "required": [
                "serverAddresses"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "instance",
                        "serverAddresses"
                    ]
                }
            }
        },
        "airbyte:index/DestinationMongodbConfigurationInstanceTypeStandaloneMongoDbInstance:DestinationMongodbConfigurationInstanceTypeStandaloneMongoDbInstance": {
            "properties": {
                "host": {
                    "type": "string",
                    "description": "The Host of a Mongo database to be replicated.\n"
                },
                "instance": {
                    "type": "string",
                    "description": "must be one of [\"standalone\"]; Default: \"standalone\"\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The Port of a Mongo database to be replicated. Default: 27017\n"
                }
            },
            "type": "object",
            "required": [
                "host"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "host",
                        "instance",
                        "port"
                    ]
                }
            }
        },
        "airbyte:index/DestinationMongodbConfigurationTunnelMethod:DestinationMongodbConfigurationTunnelMethod": {
            "properties": {
                "noTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationTunnelMethodNoTunnel:DestinationMongodbConfigurationTunnelMethodNoTunnel"
                },
                "passwordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationTunnelMethodPasswordAuthentication:DestinationMongodbConfigurationTunnelMethodPasswordAuthentication"
                },
                "sshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationTunnelMethodSshKeyAuthentication:DestinationMongodbConfigurationTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationMongodbConfigurationTunnelMethodNoTunnel:DestinationMongodbConfigurationTunnelMethodNoTunnel": {
            "type": "object"
        },
        "airbyte:index/DestinationMongodbConfigurationTunnelMethodPasswordAuthentication:DestinationMongodbConfigurationTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host\n"
                },
                "tunnelUserPassword": {
                    "type": "string",
                    "description": "OS-level password for logging into the jump server host\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser",
                        "tunnelUserPassword"
                    ]
                }
            }
        },
        "airbyte:index/DestinationMongodbConfigurationTunnelMethodSshKeyAuthentication:DestinationMongodbConfigurationTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string",
                    "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )\n",
                    "secret": true
                },
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host.\n"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "sshKey",
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser"
                    ]
                }
            }
        },
        "airbyte:index/DestinationMssqlConfiguration:DestinationMssqlConfiguration": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "The name of the MSSQL database.\n"
                },
                "host": {
                    "type": "string",
                    "description": "The host name of the MSSQL database.\n"
                },
                "jdbcUrlParams": {
                    "type": "string",
                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '\u0026'. (example: key1=value1\u0026key2=value2\u0026key3=value3).\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this username.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "The port of the MSSQL database. Default: 1433\n"
                },
                "rawDataSchema": {
                    "type": "string",
                    "description": "The schema to write raw tables into (default: airbyte_internal)\n"
                },
                "schema": {
                    "type": "string",
                    "description": "The default schema tables are written to if the source does not specify a namespace. The usual value for this field is \"public\". Default: \"public\"\n"
                },
                "sslMethod": {
                    "$ref": "#/types/airbyte:index/DestinationMssqlConfigurationSslMethod:DestinationMssqlConfigurationSslMethod",
                    "description": "The encryption method which is used to communicate with the database.\n"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/DestinationMssqlConfigurationTunnelMethod:DestinationMssqlConfigurationTunnelMethod",
                    "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username which is used to access the database.\n"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "database",
                        "host",
                        "port",
                        "schema",
                        "username"
                    ]
                }
            }
        },
        "airbyte:index/DestinationMssqlConfigurationSslMethod:DestinationMssqlConfigurationSslMethod": {
            "properties": {
                "encryptedTrustServerCertificate": {
                    "$ref": "#/types/airbyte:index/DestinationMssqlConfigurationSslMethodEncryptedTrustServerCertificate:DestinationMssqlConfigurationSslMethodEncryptedTrustServerCertificate",
                    "description": "Use the certificate provided by the server without verification. (For testing purposes only!)\n"
                },
                "encryptedVerifyCertificate": {
                    "$ref": "#/types/airbyte:index/DestinationMssqlConfigurationSslMethodEncryptedVerifyCertificate:DestinationMssqlConfigurationSslMethodEncryptedVerifyCertificate",
                    "description": "Verify and use the certificate provided by the server.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationMssqlConfigurationSslMethodEncryptedTrustServerCertificate:DestinationMssqlConfigurationSslMethodEncryptedTrustServerCertificate": {
            "type": "object"
        },
        "airbyte:index/DestinationMssqlConfigurationSslMethodEncryptedVerifyCertificate:DestinationMssqlConfigurationSslMethodEncryptedVerifyCertificate": {
            "properties": {
                "hostNameInCertificate": {
                    "type": "string",
                    "description": "Specifies the host name of the server. The value of this property must match the subject property of the certificate.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationMssqlConfigurationTunnelMethod:DestinationMssqlConfigurationTunnelMethod": {
            "properties": {
                "noTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationMssqlConfigurationTunnelMethodNoTunnel:DestinationMssqlConfigurationTunnelMethodNoTunnel"
                },
                "passwordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationMssqlConfigurationTunnelMethodPasswordAuthentication:DestinationMssqlConfigurationTunnelMethodPasswordAuthentication"
                },
                "sshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationMssqlConfigurationTunnelMethodSshKeyAuthentication:DestinationMssqlConfigurationTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationMssqlConfigurationTunnelMethodNoTunnel:DestinationMssqlConfigurationTunnelMethodNoTunnel": {
            "type": "object"
        },
        "airbyte:index/DestinationMssqlConfigurationTunnelMethodPasswordAuthentication:DestinationMssqlConfigurationTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host\n"
                },
                "tunnelUserPassword": {
                    "type": "string",
                    "description": "OS-level password for logging into the jump server host\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser",
                        "tunnelUserPassword"
                    ]
                }
            }
        },
        "airbyte:index/DestinationMssqlConfigurationTunnelMethodSshKeyAuthentication:DestinationMssqlConfigurationTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string",
                    "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )\n",
                    "secret": true
                },
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host.\n"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "sshKey",
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser"
                    ]
                }
            }
        },
        "airbyte:index/DestinationMysqlConfiguration:DestinationMysqlConfiguration": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "Name of the database.\n"
                },
                "disableTypeDedupe": {
                    "type": "boolean",
                    "description": "Disable Writing Final Tables. WARNING! The data format in _airbyte_data is likely stable but there are no guarantees that other metadata columns will remain the same in future versions. Default: false\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname of the database.\n"
                },
                "jdbcUrlParams": {
                    "type": "string",
                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '\u0026'. (example: key1=value1\u0026key2=value2\u0026key3=value3).\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password associated with the username.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port of the database. Default: 3306\n"
                },
                "rawDataSchema": {
                    "type": "string",
                    "description": "The database to write raw tables into\n"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/DestinationMysqlConfigurationTunnelMethod:DestinationMysqlConfigurationTunnelMethod",
                    "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username to use to access the database.\n"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "database",
                        "disableTypeDedupe",
                        "host",
                        "port",
                        "username"
                    ]
                }
            }
        },
        "airbyte:index/DestinationMysqlConfigurationTunnelMethod:DestinationMysqlConfigurationTunnelMethod": {
            "properties": {
                "noTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationMysqlConfigurationTunnelMethodNoTunnel:DestinationMysqlConfigurationTunnelMethodNoTunnel"
                },
                "passwordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationMysqlConfigurationTunnelMethodPasswordAuthentication:DestinationMysqlConfigurationTunnelMethodPasswordAuthentication"
                },
                "sshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationMysqlConfigurationTunnelMethodSshKeyAuthentication:DestinationMysqlConfigurationTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationMysqlConfigurationTunnelMethodNoTunnel:DestinationMysqlConfigurationTunnelMethodNoTunnel": {
            "type": "object"
        },
        "airbyte:index/DestinationMysqlConfigurationTunnelMethodPasswordAuthentication:DestinationMysqlConfigurationTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host\n"
                },
                "tunnelUserPassword": {
                    "type": "string",
                    "description": "OS-level password for logging into the jump server host\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser",
                        "tunnelUserPassword"
                    ]
                }
            }
        },
        "airbyte:index/DestinationMysqlConfigurationTunnelMethodSshKeyAuthentication:DestinationMysqlConfigurationTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string",
                    "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )\n",
                    "secret": true
                },
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host.\n"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "sshKey",
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser"
                    ]
                }
            }
        },
        "airbyte:index/DestinationOracleConfiguration:DestinationOracleConfiguration": {
            "properties": {
                "host": {
                    "type": "string",
                    "description": "The hostname of the database.\n"
                },
                "jdbcUrlParams": {
                    "type": "string",
                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '\u0026'. (example: key1=value1\u0026key2=value2\u0026key3=value3).\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with the username.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "The port of the database. Default: 1521\n"
                },
                "rawDataSchema": {
                    "type": "string",
                    "description": "The schema to write raw tables into (default: airbyte_internal)\n"
                },
                "schema": {
                    "type": "string",
                    "description": "The default schema is used as the target schema for all statements issued from the connection that do not explicitly specify a schema name. The usual value for this field is \"airbyte\".  In Oracle, schemas and users are the same thing, so the \"user\" parameter is used as the login credentials and this is used for the default Airbyte message schema. Default: \"airbyte\"\n"
                },
                "sid": {
                    "type": "string",
                    "description": "The System Identifier uniquely distinguishes the instance from any other instance on the same computer.\n"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/DestinationOracleConfigurationTunnelMethod:DestinationOracleConfigurationTunnelMethod",
                    "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username to access the database. This user must have CREATE USER privileges in the database.\n"
                }
            },
            "type": "object",
            "required": [
                "host",
                "sid",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "host",
                        "port",
                        "schema",
                        "sid",
                        "username"
                    ]
                }
            }
        },
        "airbyte:index/DestinationOracleConfigurationTunnelMethod:DestinationOracleConfigurationTunnelMethod": {
            "properties": {
                "noTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationOracleConfigurationTunnelMethodNoTunnel:DestinationOracleConfigurationTunnelMethodNoTunnel"
                },
                "passwordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationOracleConfigurationTunnelMethodPasswordAuthentication:DestinationOracleConfigurationTunnelMethodPasswordAuthentication"
                },
                "sshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationOracleConfigurationTunnelMethodSshKeyAuthentication:DestinationOracleConfigurationTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationOracleConfigurationTunnelMethodNoTunnel:DestinationOracleConfigurationTunnelMethodNoTunnel": {
            "type": "object"
        },
        "airbyte:index/DestinationOracleConfigurationTunnelMethodPasswordAuthentication:DestinationOracleConfigurationTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host\n"
                },
                "tunnelUserPassword": {
                    "type": "string",
                    "description": "OS-level password for logging into the jump server host\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser",
                        "tunnelUserPassword"
                    ]
                }
            }
        },
        "airbyte:index/DestinationOracleConfigurationTunnelMethodSshKeyAuthentication:DestinationOracleConfigurationTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string",
                    "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )\n",
                    "secret": true
                },
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host.\n"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "sshKey",
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser"
                    ]
                }
            }
        },
        "airbyte:index/DestinationPineconeConfiguration:DestinationPineconeConfiguration": {
            "properties": {
                "embedding": {
                    "$ref": "#/types/airbyte:index/DestinationPineconeConfigurationEmbedding:DestinationPineconeConfigurationEmbedding",
                    "description": "Embedding configuration\n"
                },
                "indexing": {
                    "$ref": "#/types/airbyte:index/DestinationPineconeConfigurationIndexing:DestinationPineconeConfigurationIndexing",
                    "description": "Pinecone is a popular vector store that can be used to store and retrieve embeddings.\n"
                },
                "omitRawText": {
                    "type": "boolean",
                    "description": "Do not store the text that gets embedded along with the vector and the metadata in the destination. If set to true, only the vector and the metadata will be stored - in this case raw text for LLM use cases needs to be retrieved from another source. Default: false\n"
                },
                "processing": {
                    "$ref": "#/types/airbyte:index/DestinationPineconeConfigurationProcessing:DestinationPineconeConfigurationProcessing"
                }
            },
            "type": "object",
            "required": [
                "embedding",
                "indexing",
                "processing"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "embedding",
                        "indexing",
                        "omitRawText",
                        "processing"
                    ]
                }
            }
        },
        "airbyte:index/DestinationPineconeConfigurationEmbedding:DestinationPineconeConfigurationEmbedding": {
            "properties": {
                "azureOpenAi": {
                    "$ref": "#/types/airbyte:index/DestinationPineconeConfigurationEmbeddingAzureOpenAi:DestinationPineconeConfigurationEmbeddingAzureOpenAi",
                    "description": "Use the Azure-hosted OpenAI API to embed text. This option is using the text-embedding-ada-002 model with 1536 embedding dimensions.\n"
                },
                "cohere": {
                    "$ref": "#/types/airbyte:index/DestinationPineconeConfigurationEmbeddingCohere:DestinationPineconeConfigurationEmbeddingCohere",
                    "description": "Use the Cohere API to embed text.\n"
                },
                "fake": {
                    "$ref": "#/types/airbyte:index/DestinationPineconeConfigurationEmbeddingFake:DestinationPineconeConfigurationEmbeddingFake",
                    "description": "Use a fake embedding made out of random vectors with 1536 embedding dimensions. This is useful for testing the data pipeline without incurring any costs.\n"
                },
                "openAi": {
                    "$ref": "#/types/airbyte:index/DestinationPineconeConfigurationEmbeddingOpenAi:DestinationPineconeConfigurationEmbeddingOpenAi",
                    "description": "Use the OpenAI API to embed text. This option is using the text-embedding-ada-002 model with 1536 embedding dimensions.\n"
                },
                "openAiCompatible": {
                    "$ref": "#/types/airbyte:index/DestinationPineconeConfigurationEmbeddingOpenAiCompatible:DestinationPineconeConfigurationEmbeddingOpenAiCompatible",
                    "description": "Use a service that's compatible with the OpenAI API to embed text.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationPineconeConfigurationEmbeddingAzureOpenAi:DestinationPineconeConfigurationEmbeddingAzureOpenAi": {
            "properties": {
                "apiBase": {
                    "type": "string",
                    "description": "The base URL for your Azure OpenAI resource.  You can find this in the Azure portal under your Azure OpenAI resource\n"
                },
                "deployment": {
                    "type": "string",
                    "description": "The deployment for your Azure OpenAI resource.  You can find this in the Azure portal under your Azure OpenAI resource\n"
                },
                "openaiKey": {
                    "type": "string",
                    "description": "The API key for your Azure OpenAI resource.  You can find this in the Azure portal under your Azure OpenAI resource\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiBase",
                "deployment",
                "openaiKey"
            ]
        },
        "airbyte:index/DestinationPineconeConfigurationEmbeddingCohere:DestinationPineconeConfigurationEmbeddingCohere": {
            "properties": {
                "cohereKey": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "cohereKey"
            ]
        },
        "airbyte:index/DestinationPineconeConfigurationEmbeddingFake:DestinationPineconeConfigurationEmbeddingFake": {
            "type": "object"
        },
        "airbyte:index/DestinationPineconeConfigurationEmbeddingOpenAi:DestinationPineconeConfigurationEmbeddingOpenAi": {
            "properties": {
                "openaiKey": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "openaiKey"
            ]
        },
        "airbyte:index/DestinationPineconeConfigurationEmbeddingOpenAiCompatible:DestinationPineconeConfigurationEmbeddingOpenAiCompatible": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Default: \"\"\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "The base URL for your OpenAI-compatible service\n"
                },
                "dimensions": {
                    "type": "integer",
                    "description": "The number of dimensions the embedding model is generating\n"
                },
                "modelName": {
                    "type": "string",
                    "description": "The name of the model to use for embedding. Default: \"text-embedding-ada-002\"\n"
                }
            },
            "type": "object",
            "required": [
                "baseUrl",
                "dimensions"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "baseUrl",
                        "dimensions",
                        "modelName"
                    ]
                }
            }
        },
        "airbyte:index/DestinationPineconeConfigurationIndexing:DestinationPineconeConfigurationIndexing": {
            "properties": {
                "index": {
                    "type": "string",
                    "description": "Pinecone index in your project to load data into\n"
                },
                "pineconeEnvironment": {
                    "type": "string",
                    "description": "Pinecone Cloud environment to use\n"
                },
                "pineconeKey": {
                    "type": "string",
                    "description": "The Pinecone API key to use matching the environment (copy from Pinecone console)\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "index",
                "pineconeEnvironment",
                "pineconeKey"
            ]
        },
        "airbyte:index/DestinationPineconeConfigurationProcessing:DestinationPineconeConfigurationProcessing": {
            "properties": {
                "chunkOverlap": {
                    "type": "integer",
                    "description": "Size of overlap between chunks in tokens to store in vector store to better capture relevant context. Default: 0\n"
                },
                "chunkSize": {
                    "type": "integer",
                    "description": "Size of chunks in tokens to store in vector store (make sure it is not too big for the context if your LLM)\n"
                },
                "fieldNameMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/DestinationPineconeConfigurationProcessingFieldNameMapping:DestinationPineconeConfigurationProcessingFieldNameMapping"
                    },
                    "description": "List of fields to rename. Not applicable for nested fields, but can be used to rename fields already flattened via dot notation.\n"
                },
                "metadataFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of fields in the record that should be stored as metadata. The field list is applied to all streams in the same way and non-existing fields are ignored. If none are defined, all fields are considered metadata fields. When specifying text fields, you can access nested fields in the record by using dot notation, e.g. `user.name` will access the `name` field in the `user` object. It's also possible to use wildcards to access all fields in an object, e.g. `users.*.name` will access all `names` fields in all entries of the `users` array. When specifying nested paths, all matching values are flattened into an array set to a field named by the path.\n"
                },
                "textFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of fields in the record that should be used to calculate the embedding. The field list is applied to all streams in the same way and non-existing fields are ignored. If none are defined, all fields are considered text fields. When specifying text fields, you can access nested fields in the record by using dot notation, e.g. `user.name` will access the `name` field in the `user` object. It's also possible to use wildcards to access all fields in an object, e.g. `users.*.name` will access all `names` fields in all entries of the `users` array.\n"
                },
                "textSplitter": {
                    "$ref": "#/types/airbyte:index/DestinationPineconeConfigurationProcessingTextSplitter:DestinationPineconeConfigurationProcessingTextSplitter",
                    "description": "Split text fields into chunks based on the specified method.\n"
                }
            },
            "type": "object",
            "required": [
                "chunkSize"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "chunkOverlap",
                        "chunkSize"
                    ]
                }
            }
        },
        "airbyte:index/DestinationPineconeConfigurationProcessingFieldNameMapping:DestinationPineconeConfigurationProcessingFieldNameMapping": {
            "properties": {
                "fromField": {
                    "type": "string",
                    "description": "The field name in the source\n"
                },
                "toField": {
                    "type": "string",
                    "description": "The field name to use in the destination\n"
                }
            },
            "type": "object",
            "required": [
                "fromField",
                "toField"
            ]
        },
        "airbyte:index/DestinationPineconeConfigurationProcessingTextSplitter:DestinationPineconeConfigurationProcessingTextSplitter": {
            "properties": {
                "byMarkdownHeader": {
                    "$ref": "#/types/airbyte:index/DestinationPineconeConfigurationProcessingTextSplitterByMarkdownHeader:DestinationPineconeConfigurationProcessingTextSplitterByMarkdownHeader",
                    "description": "Split the text by Markdown headers down to the specified header level. If the chunk size fits multiple sections, they will be combined into a single chunk.\n"
                },
                "byProgrammingLanguage": {
                    "$ref": "#/types/airbyte:index/DestinationPineconeConfigurationProcessingTextSplitterByProgrammingLanguage:DestinationPineconeConfigurationProcessingTextSplitterByProgrammingLanguage",
                    "description": "Split the text by suitable delimiters based on the programming language. This is useful for splitting code into chunks.\n"
                },
                "bySeparator": {
                    "$ref": "#/types/airbyte:index/DestinationPineconeConfigurationProcessingTextSplitterBySeparator:DestinationPineconeConfigurationProcessingTextSplitterBySeparator",
                    "description": "Split the text by the list of separators until the chunk size is reached, using the earlier mentioned separators where possible. This is useful for splitting text fields by paragraphs, sentences, words, etc.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationPineconeConfigurationProcessingTextSplitterByMarkdownHeader:DestinationPineconeConfigurationProcessingTextSplitterByMarkdownHeader": {
            "properties": {
                "splitLevel": {
                    "type": "integer",
                    "description": "Level of markdown headers to split text fields by. Headings down to the specified level will be used as split points. Default: 1\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "splitLevel"
                    ]
                }
            }
        },
        "airbyte:index/DestinationPineconeConfigurationProcessingTextSplitterByProgrammingLanguage:DestinationPineconeConfigurationProcessingTextSplitterByProgrammingLanguage": {
            "properties": {
                "language": {
                    "type": "string",
                    "description": "Split code in suitable places based on the programming language. must be one of [\"cpp\", \"go\", \"java\", \"js\", \"php\", \"proto\", \"python\", \"rst\", \"ruby\", \"rust\", \"scala\", \"swift\", \"markdown\", \"latex\", \"html\", \"sol\"]\n"
                }
            },
            "type": "object",
            "required": [
                "language"
            ]
        },
        "airbyte:index/DestinationPineconeConfigurationProcessingTextSplitterBySeparator:DestinationPineconeConfigurationProcessingTextSplitterBySeparator": {
            "properties": {
                "keepSeparator": {
                    "type": "boolean",
                    "description": "Whether to keep the separator in the resulting chunks. Default: false\n"
                },
                "separators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of separator strings to split text fields by. The separator itself needs to be wrapped in double quotes, e.g. to split by the dot character, use \".\". To split by a newline, use \"\\n\".\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "keepSeparator"
                    ]
                }
            }
        },
        "airbyte:index/DestinationPostgresConfiguration:DestinationPostgresConfiguration": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "Name of the database.\n"
                },
                "disableTypeDedupe": {
                    "type": "boolean",
                    "description": "Disable Writing Final Tables. WARNING! The data format in _airbyte_data is likely stable but there are no guarantees that other metadata columns will remain the same in future versions. Default: false\n"
                },
                "dropCascade": {
                    "type": "boolean",
                    "description": "Drop tables with CASCADE. WARNING! This will delete all data in all dependent objects (views, etc.). Use with caution. This option is intended for usecases which can easily rebuild the dependent objects. Default: false\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname of the database.\n"
                },
                "jdbcUrlParams": {
                    "type": "string",
                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '\u0026'. (example: key1=value1\u0026key2=value2\u0026key3=value3).\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password associated with the username.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port of the database. Default: 5432\n"
                },
                "rawDataSchema": {
                    "type": "string",
                    "description": "The schema to write raw tables into\n"
                },
                "schema": {
                    "type": "string",
                    "description": "The default schema tables are written to if the source does not specify a namespace. The usual value for this field is \"public\". Default: \"public\"\n"
                },
                "sslMode": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationSslMode:DestinationPostgresConfigurationSslMode",
                    "description": "SSL connection modes. \n \u003cb\u003edisable\u003c/b\u003e - Chose this mode to disable encryption of communication between Airbyte and destination database\n \u003cb\u003eallow\u003c/b\u003e - Chose this mode to enable encryption only when required by the source database\n \u003cb\u003eprefer\u003c/b\u003e - Chose this mode to allow unencrypted connection only if the source database does not support encryption\n \u003cb\u003erequire\u003c/b\u003e - Chose this mode to always require encryption. If the source database server does not support encryption, connection will fail\n  \u003cb\u003everify-ca\u003c/b\u003e - Chose this mode to always require encryption and to verify that the source database server has a valid SSL certificate\n  \u003cb\u003everify-full\u003c/b\u003e - This is the most secure mode. Chose this mode to always require encryption and to verify the identity of the source database server\n See more information - \u003ca href=\"https://jdbc.postgresql.org/documentation/head/ssl-client.html\"\u003e in the docs\u003c/a\u003e.\n"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationTunnelMethod:DestinationPostgresConfigurationTunnelMethod",
                    "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username to use to access the database.\n"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "database",
                        "disableTypeDedupe",
                        "dropCascade",
                        "host",
                        "port",
                        "schema",
                        "username"
                    ]
                }
            }
        },
        "airbyte:index/DestinationPostgresConfigurationSslMode:DestinationPostgresConfigurationSslMode": {
            "properties": {
                "allow": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationSslModeAllow:DestinationPostgresConfigurationSslModeAllow",
                    "description": "Allow SSL mode.\n"
                },
                "disable": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationSslModeDisable:DestinationPostgresConfigurationSslModeDisable",
                    "description": "Disable SSL.\n"
                },
                "prefer": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationSslModePrefer:DestinationPostgresConfigurationSslModePrefer",
                    "description": "Prefer SSL mode.\n"
                },
                "require": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationSslModeRequire:DestinationPostgresConfigurationSslModeRequire",
                    "description": "Require SSL mode.\n"
                },
                "verifyCa": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationSslModeVerifyCa:DestinationPostgresConfigurationSslModeVerifyCa",
                    "description": "Verify-ca SSL mode.\n"
                },
                "verifyFull": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationSslModeVerifyFull:DestinationPostgresConfigurationSslModeVerifyFull",
                    "description": "Verify-full SSL mode.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationPostgresConfigurationSslModeAllow:DestinationPostgresConfigurationSslModeAllow": {
            "type": "object"
        },
        "airbyte:index/DestinationPostgresConfigurationSslModeDisable:DestinationPostgresConfigurationSslModeDisable": {
            "type": "object"
        },
        "airbyte:index/DestinationPostgresConfigurationSslModePrefer:DestinationPostgresConfigurationSslModePrefer": {
            "type": "object"
        },
        "airbyte:index/DestinationPostgresConfigurationSslModeRequire:DestinationPostgresConfigurationSslModeRequire": {
            "type": "object"
        },
        "airbyte:index/DestinationPostgresConfigurationSslModeVerifyCa:DestinationPostgresConfigurationSslModeVerifyCa": {
            "properties": {
                "caCertificate": {
                    "type": "string",
                    "description": "CA certificate\n"
                },
                "clientKeyPassword": {
                    "type": "string",
                    "description": "Password for keystorage. This field is optional. If you do not add it - the password will be generated automatically.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "caCertificate"
            ]
        },
        "airbyte:index/DestinationPostgresConfigurationSslModeVerifyFull:DestinationPostgresConfigurationSslModeVerifyFull": {
            "properties": {
                "caCertificate": {
                    "type": "string",
                    "description": "CA certificate\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "Client certificate\n"
                },
                "clientKey": {
                    "type": "string",
                    "description": "Client key\n",
                    "secret": true
                },
                "clientKeyPassword": {
                    "type": "string",
                    "description": "Password for keystorage. This field is optional. If you do not add it - the password will be generated automatically.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey"
            ]
        },
        "airbyte:index/DestinationPostgresConfigurationTunnelMethod:DestinationPostgresConfigurationTunnelMethod": {
            "properties": {
                "noTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationTunnelMethodNoTunnel:DestinationPostgresConfigurationTunnelMethodNoTunnel"
                },
                "passwordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationTunnelMethodPasswordAuthentication:DestinationPostgresConfigurationTunnelMethodPasswordAuthentication"
                },
                "sshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationTunnelMethodSshKeyAuthentication:DestinationPostgresConfigurationTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationPostgresConfigurationTunnelMethodNoTunnel:DestinationPostgresConfigurationTunnelMethodNoTunnel": {
            "type": "object"
        },
        "airbyte:index/DestinationPostgresConfigurationTunnelMethodPasswordAuthentication:DestinationPostgresConfigurationTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host\n"
                },
                "tunnelUserPassword": {
                    "type": "string",
                    "description": "OS-level password for logging into the jump server host\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser",
                        "tunnelUserPassword"
                    ]
                }
            }
        },
        "airbyte:index/DestinationPostgresConfigurationTunnelMethodSshKeyAuthentication:DestinationPostgresConfigurationTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string",
                    "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )\n",
                    "secret": true
                },
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host.\n"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "sshKey",
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser"
                    ]
                }
            }
        },
        "airbyte:index/DestinationPubsubConfiguration:DestinationPubsubConfiguration": {
            "properties": {
                "batchingDelayThreshold": {
                    "type": "integer",
                    "description": "Number of ms before the buffer is flushed. Default: 1\n"
                },
                "batchingElementCountThreshold": {
                    "type": "integer",
                    "description": "Number of messages before the buffer is flushed. Default: 1\n"
                },
                "batchingEnabled": {
                    "type": "boolean",
                    "description": "If TRUE messages will be buffered instead of sending them one by one. Default: false\n"
                },
                "batchingRequestBytesThreshold": {
                    "type": "integer",
                    "description": "Number of bytes before the buffer is flushed. Default: 1\n"
                },
                "credentialsJson": {
                    "type": "string",
                    "description": "The contents of the JSON service account key. Check out the \u003ca href=\"https://docs.airbyte.com/integrations/destinations/pubsub\"\u003edocs\u003c/a\u003e if you need help generating this key.\n"
                },
                "orderingEnabled": {
                    "type": "boolean",
                    "description": "If TRUE PubSub publisher will have \u003ca href=\"https://cloud.google.com/pubsub/docs/ordering\"\u003emessage ordering\u003c/a\u003e enabled. Every message will have an ordering key of stream. Default: false\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The GCP project ID for the project containing the target PubSub.\n"
                },
                "topicId": {
                    "type": "string",
                    "description": "The PubSub topic ID in the given GCP project ID.\n"
                }
            },
            "type": "object",
            "required": [
                "credentialsJson",
                "projectId",
                "topicId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "batchingDelayThreshold",
                        "batchingElementCountThreshold",
                        "batchingEnabled",
                        "batchingRequestBytesThreshold",
                        "credentialsJson",
                        "orderingEnabled",
                        "projectId",
                        "topicId"
                    ]
                }
            }
        },
        "airbyte:index/DestinationQdrantConfiguration:DestinationQdrantConfiguration": {
            "properties": {
                "embedding": {
                    "$ref": "#/types/airbyte:index/DestinationQdrantConfigurationEmbedding:DestinationQdrantConfigurationEmbedding",
                    "description": "Embedding configuration\n"
                },
                "indexing": {
                    "$ref": "#/types/airbyte:index/DestinationQdrantConfigurationIndexing:DestinationQdrantConfigurationIndexing",
                    "description": "Indexing configuration\n"
                },
                "omitRawText": {
                    "type": "boolean",
                    "description": "Do not store the text that gets embedded along with the vector and the metadata in the destination. If set to true, only the vector and the metadata will be stored - in this case raw text for LLM use cases needs to be retrieved from another source. Default: false\n"
                },
                "processing": {
                    "$ref": "#/types/airbyte:index/DestinationQdrantConfigurationProcessing:DestinationQdrantConfigurationProcessing"
                }
            },
            "type": "object",
            "required": [
                "embedding",
                "indexing",
                "processing"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "embedding",
                        "indexing",
                        "omitRawText",
                        "processing"
                    ]
                }
            }
        },
        "airbyte:index/DestinationQdrantConfigurationEmbedding:DestinationQdrantConfigurationEmbedding": {
            "properties": {
                "azureOpenAi": {
                    "$ref": "#/types/airbyte:index/DestinationQdrantConfigurationEmbeddingAzureOpenAi:DestinationQdrantConfigurationEmbeddingAzureOpenAi",
                    "description": "Use the Azure-hosted OpenAI API to embed text. This option is using the text-embedding-ada-002 model with 1536 embedding dimensions.\n"
                },
                "cohere": {
                    "$ref": "#/types/airbyte:index/DestinationQdrantConfigurationEmbeddingCohere:DestinationQdrantConfigurationEmbeddingCohere",
                    "description": "Use the Cohere API to embed text.\n"
                },
                "fake": {
                    "$ref": "#/types/airbyte:index/DestinationQdrantConfigurationEmbeddingFake:DestinationQdrantConfigurationEmbeddingFake",
                    "description": "Use a fake embedding made out of random vectors with 1536 embedding dimensions. This is useful for testing the data pipeline without incurring any costs.\n"
                },
                "openAi": {
                    "$ref": "#/types/airbyte:index/DestinationQdrantConfigurationEmbeddingOpenAi:DestinationQdrantConfigurationEmbeddingOpenAi",
                    "description": "Use the OpenAI API to embed text. This option is using the text-embedding-ada-002 model with 1536 embedding dimensions.\n"
                },
                "openAiCompatible": {
                    "$ref": "#/types/airbyte:index/DestinationQdrantConfigurationEmbeddingOpenAiCompatible:DestinationQdrantConfigurationEmbeddingOpenAiCompatible",
                    "description": "Use a service that's compatible with the OpenAI API to embed text.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationQdrantConfigurationEmbeddingAzureOpenAi:DestinationQdrantConfigurationEmbeddingAzureOpenAi": {
            "properties": {
                "apiBase": {
                    "type": "string",
                    "description": "The base URL for your Azure OpenAI resource.  You can find this in the Azure portal under your Azure OpenAI resource\n"
                },
                "deployment": {
                    "type": "string",
                    "description": "The deployment for your Azure OpenAI resource.  You can find this in the Azure portal under your Azure OpenAI resource\n"
                },
                "openaiKey": {
                    "type": "string",
                    "description": "The API key for your Azure OpenAI resource.  You can find this in the Azure portal under your Azure OpenAI resource\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiBase",
                "deployment",
                "openaiKey"
            ]
        },
        "airbyte:index/DestinationQdrantConfigurationEmbeddingCohere:DestinationQdrantConfigurationEmbeddingCohere": {
            "properties": {
                "cohereKey": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "cohereKey"
            ]
        },
        "airbyte:index/DestinationQdrantConfigurationEmbeddingFake:DestinationQdrantConfigurationEmbeddingFake": {
            "type": "object"
        },
        "airbyte:index/DestinationQdrantConfigurationEmbeddingOpenAi:DestinationQdrantConfigurationEmbeddingOpenAi": {
            "properties": {
                "openaiKey": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "openaiKey"
            ]
        },
        "airbyte:index/DestinationQdrantConfigurationEmbeddingOpenAiCompatible:DestinationQdrantConfigurationEmbeddingOpenAiCompatible": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Default: \"\"\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "The base URL for your OpenAI-compatible service\n"
                },
                "dimensions": {
                    "type": "integer",
                    "description": "The number of dimensions the embedding model is generating\n"
                },
                "modelName": {
                    "type": "string",
                    "description": "The name of the model to use for embedding. Default: \"text-embedding-ada-002\"\n"
                }
            },
            "type": "object",
            "required": [
                "baseUrl",
                "dimensions"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "baseUrl",
                        "dimensions",
                        "modelName"
                    ]
                }
            }
        },
        "airbyte:index/DestinationQdrantConfigurationIndexing:DestinationQdrantConfigurationIndexing": {
            "properties": {
                "authMethod": {
                    "$ref": "#/types/airbyte:index/DestinationQdrantConfigurationIndexingAuthMethod:DestinationQdrantConfigurationIndexingAuthMethod",
                    "description": "Method to authenticate with the Qdrant Instance\n"
                },
                "collection": {
                    "type": "string",
                    "description": "The collection to load data into\n"
                },
                "distanceMetric": {
                    "type": "string",
                    "description": "The Distance metric used to measure similarities among vectors. This field is only used if the collection defined in the does not exist yet and is created automatically by the connector. must be one of [\"dot\", \"cos\", \"euc\"]; Default: \"cos\"\n"
                },
                "preferGrpc": {
                    "type": "boolean",
                    "description": "Whether to prefer gRPC over HTTP. Set to true for Qdrant cloud clusters. Default: true\n"
                },
                "textField": {
                    "type": "string",
                    "description": "The field in the payload that contains the embedded text. Default: \"text\"\n"
                },
                "url": {
                    "type": "string",
                    "description": "Public Endpoint of the Qdrant cluser\n"
                }
            },
            "type": "object",
            "required": [
                "collection",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "collection",
                        "distanceMetric",
                        "preferGrpc",
                        "textField",
                        "url"
                    ]
                }
            }
        },
        "airbyte:index/DestinationQdrantConfigurationIndexingAuthMethod:DestinationQdrantConfigurationIndexingAuthMethod": {
            "properties": {
                "apiKeyAuth": {
                    "$ref": "#/types/airbyte:index/DestinationQdrantConfigurationIndexingAuthMethodApiKeyAuth:DestinationQdrantConfigurationIndexingAuthMethodApiKeyAuth"
                },
                "noAuth": {
                    "$ref": "#/types/airbyte:index/DestinationQdrantConfigurationIndexingAuthMethodNoAuth:DestinationQdrantConfigurationIndexingAuthMethodNoAuth"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationQdrantConfigurationIndexingAuthMethodApiKeyAuth:DestinationQdrantConfigurationIndexingAuthMethodApiKeyAuth": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API Key for the Qdrant instance\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/DestinationQdrantConfigurationIndexingAuthMethodNoAuth:DestinationQdrantConfigurationIndexingAuthMethodNoAuth": {
            "type": "object"
        },
        "airbyte:index/DestinationQdrantConfigurationProcessing:DestinationQdrantConfigurationProcessing": {
            "properties": {
                "chunkOverlap": {
                    "type": "integer",
                    "description": "Size of overlap between chunks in tokens to store in vector store to better capture relevant context. Default: 0\n"
                },
                "chunkSize": {
                    "type": "integer",
                    "description": "Size of chunks in tokens to store in vector store (make sure it is not too big for the context if your LLM)\n"
                },
                "fieldNameMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/DestinationQdrantConfigurationProcessingFieldNameMapping:DestinationQdrantConfigurationProcessingFieldNameMapping"
                    },
                    "description": "List of fields to rename. Not applicable for nested fields, but can be used to rename fields already flattened via dot notation.\n"
                },
                "metadataFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of fields in the record that should be stored as metadata. The field list is applied to all streams in the same way and non-existing fields are ignored. If none are defined, all fields are considered metadata fields. When specifying text fields, you can access nested fields in the record by using dot notation, e.g. `user.name` will access the `name` field in the `user` object. It's also possible to use wildcards to access all fields in an object, e.g. `users.*.name` will access all `names` fields in all entries of the `users` array. When specifying nested paths, all matching values are flattened into an array set to a field named by the path.\n"
                },
                "textFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of fields in the record that should be used to calculate the embedding. The field list is applied to all streams in the same way and non-existing fields are ignored. If none are defined, all fields are considered text fields. When specifying text fields, you can access nested fields in the record by using dot notation, e.g. `user.name` will access the `name` field in the `user` object. It's also possible to use wildcards to access all fields in an object, e.g. `users.*.name` will access all `names` fields in all entries of the `users` array.\n"
                },
                "textSplitter": {
                    "$ref": "#/types/airbyte:index/DestinationQdrantConfigurationProcessingTextSplitter:DestinationQdrantConfigurationProcessingTextSplitter",
                    "description": "Split text fields into chunks based on the specified method.\n"
                }
            },
            "type": "object",
            "required": [
                "chunkSize"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "chunkOverlap",
                        "chunkSize"
                    ]
                }
            }
        },
        "airbyte:index/DestinationQdrantConfigurationProcessingFieldNameMapping:DestinationQdrantConfigurationProcessingFieldNameMapping": {
            "properties": {
                "fromField": {
                    "type": "string",
                    "description": "The field name in the source\n"
                },
                "toField": {
                    "type": "string",
                    "description": "The field name to use in the destination\n"
                }
            },
            "type": "object",
            "required": [
                "fromField",
                "toField"
            ]
        },
        "airbyte:index/DestinationQdrantConfigurationProcessingTextSplitter:DestinationQdrantConfigurationProcessingTextSplitter": {
            "properties": {
                "byMarkdownHeader": {
                    "$ref": "#/types/airbyte:index/DestinationQdrantConfigurationProcessingTextSplitterByMarkdownHeader:DestinationQdrantConfigurationProcessingTextSplitterByMarkdownHeader",
                    "description": "Split the text by Markdown headers down to the specified header level. If the chunk size fits multiple sections, they will be combined into a single chunk.\n"
                },
                "byProgrammingLanguage": {
                    "$ref": "#/types/airbyte:index/DestinationQdrantConfigurationProcessingTextSplitterByProgrammingLanguage:DestinationQdrantConfigurationProcessingTextSplitterByProgrammingLanguage",
                    "description": "Split the text by suitable delimiters based on the programming language. This is useful for splitting code into chunks.\n"
                },
                "bySeparator": {
                    "$ref": "#/types/airbyte:index/DestinationQdrantConfigurationProcessingTextSplitterBySeparator:DestinationQdrantConfigurationProcessingTextSplitterBySeparator",
                    "description": "Split the text by the list of separators until the chunk size is reached, using the earlier mentioned separators where possible. This is useful for splitting text fields by paragraphs, sentences, words, etc.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationQdrantConfigurationProcessingTextSplitterByMarkdownHeader:DestinationQdrantConfigurationProcessingTextSplitterByMarkdownHeader": {
            "properties": {
                "splitLevel": {
                    "type": "integer",
                    "description": "Level of markdown headers to split text fields by. Headings down to the specified level will be used as split points. Default: 1\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "splitLevel"
                    ]
                }
            }
        },
        "airbyte:index/DestinationQdrantConfigurationProcessingTextSplitterByProgrammingLanguage:DestinationQdrantConfigurationProcessingTextSplitterByProgrammingLanguage": {
            "properties": {
                "language": {
                    "type": "string",
                    "description": "Split code in suitable places based on the programming language. must be one of [\"cpp\", \"go\", \"java\", \"js\", \"php\", \"proto\", \"python\", \"rst\", \"ruby\", \"rust\", \"scala\", \"swift\", \"markdown\", \"latex\", \"html\", \"sol\"]\n"
                }
            },
            "type": "object",
            "required": [
                "language"
            ]
        },
        "airbyte:index/DestinationQdrantConfigurationProcessingTextSplitterBySeparator:DestinationQdrantConfigurationProcessingTextSplitterBySeparator": {
            "properties": {
                "keepSeparator": {
                    "type": "boolean",
                    "description": "Whether to keep the separator in the resulting chunks. Default: false\n"
                },
                "separators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of separator strings to split text fields by. The separator itself needs to be wrapped in double quotes, e.g. to split by the dot character, use \".\". To split by a newline, use \"\\n\".\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "keepSeparator"
                    ]
                }
            }
        },
        "airbyte:index/DestinationRedisConfiguration:DestinationRedisConfiguration": {
            "properties": {
                "cacheType": {
                    "type": "string",
                    "description": "Redis cache type to store data in. must be one of [\"hash\"]; Default: \"hash\"\n"
                },
                "host": {
                    "type": "string",
                    "description": "Redis host to connect to.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password associated with Redis.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port of Redis. Default: 6379\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Indicates whether SSL encryption protocol will be used to connect to Redis. It is recommended to use SSL connection if possible. Default: false\n"
                },
                "sslMode": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfigurationSslMode:DestinationRedisConfigurationSslMode",
                    "description": "SSL connection modes. \n  \u003cli\u003e\u003cb\u003everify-full\u003c/b\u003e - This is the most secure mode. Always require encryption and verifies the identity of the source database server\n"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfigurationTunnelMethod:DestinationRedisConfigurationTunnelMethod",
                    "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username associated with Redis.\n"
                }
            },
            "type": "object",
            "required": [
                "host",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cacheType",
                        "host",
                        "port",
                        "ssl",
                        "username"
                    ]
                }
            }
        },
        "airbyte:index/DestinationRedisConfigurationSslMode:DestinationRedisConfigurationSslMode": {
            "properties": {
                "disable": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfigurationSslModeDisable:DestinationRedisConfigurationSslModeDisable",
                    "description": "Disable SSL.\n"
                },
                "verifyFull": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfigurationSslModeVerifyFull:DestinationRedisConfigurationSslModeVerifyFull",
                    "description": "Verify-full SSL mode.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationRedisConfigurationSslModeDisable:DestinationRedisConfigurationSslModeDisable": {
            "type": "object"
        },
        "airbyte:index/DestinationRedisConfigurationSslModeVerifyFull:DestinationRedisConfigurationSslModeVerifyFull": {
            "properties": {
                "caCertificate": {
                    "type": "string",
                    "description": "CA certificate\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "Client certificate\n"
                },
                "clientKey": {
                    "type": "string",
                    "description": "Client key\n",
                    "secret": true
                },
                "clientKeyPassword": {
                    "type": "string",
                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey"
            ]
        },
        "airbyte:index/DestinationRedisConfigurationTunnelMethod:DestinationRedisConfigurationTunnelMethod": {
            "properties": {
                "noTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfigurationTunnelMethodNoTunnel:DestinationRedisConfigurationTunnelMethodNoTunnel"
                },
                "passwordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfigurationTunnelMethodPasswordAuthentication:DestinationRedisConfigurationTunnelMethodPasswordAuthentication"
                },
                "sshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfigurationTunnelMethodSshKeyAuthentication:DestinationRedisConfigurationTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationRedisConfigurationTunnelMethodNoTunnel:DestinationRedisConfigurationTunnelMethodNoTunnel": {
            "type": "object"
        },
        "airbyte:index/DestinationRedisConfigurationTunnelMethodPasswordAuthentication:DestinationRedisConfigurationTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host\n"
                },
                "tunnelUserPassword": {
                    "type": "string",
                    "description": "OS-level password for logging into the jump server host\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser",
                        "tunnelUserPassword"
                    ]
                }
            }
        },
        "airbyte:index/DestinationRedisConfigurationTunnelMethodSshKeyAuthentication:DestinationRedisConfigurationTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string",
                    "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )\n",
                    "secret": true
                },
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host.\n"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "sshKey",
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser"
                    ]
                }
            }
        },
        "airbyte:index/DestinationRedshiftConfiguration:DestinationRedshiftConfiguration": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "Name of the database.\n"
                },
                "disableTypeDedupe": {
                    "type": "boolean",
                    "description": "Disable Writing Final Tables. WARNING! The data format in _airbyte_data is likely stable but there are no guarantees that other metadata columns will remain the same in future versions. Default: false\n"
                },
                "dropCascade": {
                    "type": "boolean",
                    "description": "Drop tables with CASCADE. WARNING! This will delete all data in all dependent objects (views, etc.). Use with caution. This option is intended for usecases which can easily rebuild the dependent objects. Default: false\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host Endpoint of the Redshift Cluster (must include the cluster-id, region and end with .redshift.amazonaws.com)\n"
                },
                "jdbcUrlParams": {
                    "type": "string",
                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '\u0026'. (example: key1=value1\u0026key2=value2\u0026key3=value3).\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password associated with the username.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port of the database. Default: 5439\n"
                },
                "rawDataSchema": {
                    "type": "string",
                    "description": "The schema to write raw tables into (default: airbyte_internal).\n"
                },
                "schema": {
                    "type": "string",
                    "description": "The default schema tables are written to if the source does not specify a namespace. Unless specifically configured, the usual value for this field is \"public\". Default: \"public\"\n"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationTunnelMethod:DestinationRedshiftConfigurationTunnelMethod",
                    "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.\n"
                },
                "uploadingMethod": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationUploadingMethod:DestinationRedshiftConfigurationUploadingMethod",
                    "description": "The way data will be uploaded to Redshift.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username to use to access the database.\n"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "password",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "database",
                        "disableTypeDedupe",
                        "dropCascade",
                        "host",
                        "password",
                        "port",
                        "schema",
                        "username"
                    ]
                }
            }
        },
        "airbyte:index/DestinationRedshiftConfigurationTunnelMethod:DestinationRedshiftConfigurationTunnelMethod": {
            "properties": {
                "noTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationTunnelMethodNoTunnel:DestinationRedshiftConfigurationTunnelMethodNoTunnel"
                },
                "passwordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationTunnelMethodPasswordAuthentication:DestinationRedshiftConfigurationTunnelMethodPasswordAuthentication"
                },
                "sshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationTunnelMethodSshKeyAuthentication:DestinationRedshiftConfigurationTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationRedshiftConfigurationTunnelMethodNoTunnel:DestinationRedshiftConfigurationTunnelMethodNoTunnel": {
            "type": "object"
        },
        "airbyte:index/DestinationRedshiftConfigurationTunnelMethodPasswordAuthentication:DestinationRedshiftConfigurationTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host\n"
                },
                "tunnelUserPassword": {
                    "type": "string",
                    "description": "OS-level password for logging into the jump server host\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser",
                        "tunnelUserPassword"
                    ]
                }
            }
        },
        "airbyte:index/DestinationRedshiftConfigurationTunnelMethodSshKeyAuthentication:DestinationRedshiftConfigurationTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string",
                    "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )\n",
                    "secret": true
                },
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host.\n"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "sshKey",
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser"
                    ]
                }
            }
        },
        "airbyte:index/DestinationRedshiftConfigurationUploadingMethod:DestinationRedshiftConfigurationUploadingMethod": {
            "properties": {
                "awss3Staging": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationUploadingMethodAwss3Staging:DestinationRedshiftConfigurationUploadingMethodAwss3Staging",
                    "description": "\u003ci\u003e(recommended)\u003c/i\u003e Uploads data to S3 and then uses a COPY to insert the data into Redshift. COPY is recommended for production workloads for better speed and scalability. See \u003ca href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-bucket.html\"\u003eAWS docs\u003c/a\u003e for more details.\n"
                },
                "standard": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationUploadingMethodStandard:DestinationRedshiftConfigurationUploadingMethodStandard",
                    "description": "\u003ci\u003e(not recommended)\u003c/i\u003e Direct loading using SQL INSERT statements. This method is extremely inefficient and provided only for quick testing. In all other cases, you should use S3 uploading.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationRedshiftConfigurationUploadingMethodAwss3Staging:DestinationRedshiftConfigurationUploadingMethodAwss3Staging": {
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "This ID grants access to the above S3 staging bucket. Airbyte requires Read and Write permissions to the given bucket. See \u003ca href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\"\u003eAWS docs\u003c/a\u003e on how to generate an access key ID and secret access key.\n",
                    "secret": true
                },
                "encryption": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationUploadingMethodAwss3StagingEncryption:DestinationRedshiftConfigurationUploadingMethodAwss3StagingEncryption",
                    "description": "How to encrypt the staging data\n"
                },
                "fileNamePattern": {
                    "type": "string",
                    "description": "The pattern allows you to set the file-name format for the S3 staging file(s)\n"
                },
                "purgeStagingData": {
                    "type": "boolean",
                    "description": "Whether to delete the staging files from S3 after completing the sync. See \u003ca href=\"https://docs.airbyte.com/integrations/destinations/redshift/#:~:text=the%20root%20directory.-,Purge%20Staging%20Data,-Whether%20to%20delete\"\u003e docs\u003c/a\u003e for details. Default: true\n"
                },
                "s3BucketName": {
                    "type": "string",
                    "description": "The name of the staging S3 bucket.\n"
                },
                "s3BucketPath": {
                    "type": "string",
                    "description": "The directory under the S3 bucket where data will be written. If not provided, then defaults to the root directory. See \u003ca href=\"https://docs.aws.amazon.com/prescriptive-guidance/latest/defining-bucket-names-data-lakes/faq.html#:~:text=be%20globally%20unique.-,For%20S3%20bucket%20paths,-%2C%20you%20can%20use\"\u003epath's name recommendations\u003c/a\u003e for more details.\n"
                },
                "s3BucketRegion": {
                    "type": "string",
                    "description": "The region of the S3 staging bucket. must be one of [\"\", \"af-south-1\", \"ap-east-1\", \"ap-northeast-1\", \"ap-northeast-2\", \"ap-northeast-3\", \"ap-south-1\", \"ap-south-2\", \"ap-southeast-1\", \"ap-southeast-2\", \"ap-southeast-3\", \"ap-southeast-4\", \"ca-central-1\", \"ca-west-1\", \"cn-north-1\", \"cn-northwest-1\", \"eu-central-1\", \"eu-central-2\", \"eu-north-1\", \"eu-south-1\", \"eu-south-2\", \"eu-west-1\", \"eu-west-2\", \"eu-west-3\", \"il-central-1\", \"me-central-1\", \"me-south-1\", \"sa-east-1\", \"us-east-1\", \"us-east-2\", \"us-gov-east-1\", \"us-gov-west-1\", \"us-west-1\", \"us-west-2\"]; Default: \"\"\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "The corresponding secret to the above access key id. See \u003ca href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\"\u003eAWS docs\u003c/a\u003e on how to generate an access key ID and secret access key.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "s3BucketName",
                "secretAccessKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessKeyId",
                        "purgeStagingData",
                        "s3BucketName",
                        "s3BucketRegion",
                        "secretAccessKey"
                    ]
                }
            }
        },
        "airbyte:index/DestinationRedshiftConfigurationUploadingMethodAwss3StagingEncryption:DestinationRedshiftConfigurationUploadingMethodAwss3StagingEncryption": {
            "properties": {
                "aescbcEnvelopeEncryption": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationUploadingMethodAwss3StagingEncryptionAescbcEnvelopeEncryption:DestinationRedshiftConfigurationUploadingMethodAwss3StagingEncryptionAescbcEnvelopeEncryption",
                    "description": "Staging data will be encrypted using AES-CBC envelope encryption.\n"
                },
                "noEncryption": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationUploadingMethodAwss3StagingEncryptionNoEncryption:DestinationRedshiftConfigurationUploadingMethodAwss3StagingEncryptionNoEncryption",
                    "description": "Staging data will be stored in plaintext.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationRedshiftConfigurationUploadingMethodAwss3StagingEncryptionAescbcEnvelopeEncryption:DestinationRedshiftConfigurationUploadingMethodAwss3StagingEncryptionAescbcEnvelopeEncryption": {
            "properties": {
                "keyEncryptingKey": {
                    "type": "string",
                    "description": "The key, base64-encoded. Must be either 128, 192, or 256 bits. Leave blank to have Airbyte generate an ephemeral key for each sync.\n",
                    "secret": true
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationRedshiftConfigurationUploadingMethodAwss3StagingEncryptionNoEncryption:DestinationRedshiftConfigurationUploadingMethodAwss3StagingEncryptionNoEncryption": {
            "type": "object"
        },
        "airbyte:index/DestinationRedshiftConfigurationUploadingMethodStandard:DestinationRedshiftConfigurationUploadingMethodStandard": {
            "type": "object"
        },
        "airbyte:index/DestinationS3Configuration:DestinationS3Configuration": {
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "The access key ID to access the S3 bucket. Airbyte requires Read and Write permissions to the given bucket. Read more \u003ca href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\"\u003ehere\u003c/a\u003e.\n",
                    "secret": true
                },
                "fileNamePattern": {
                    "type": "string",
                    "description": "The pattern allows you to set the file-name format for the S3 staging file(s)\n"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormat:DestinationS3ConfigurationFormat",
                    "description": "Format of the data output. See \u003ca href=\"https://docs.airbyte.com/integrations/destinations/s3/#supported-output-schema\"\u003ehere\u003c/a\u003e for more details\n"
                },
                "s3BucketName": {
                    "type": "string",
                    "description": "The name of the S3 bucket. Read more \u003ca href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-bucket-overview.html\"\u003ehere\u003c/a\u003e.\n"
                },
                "s3BucketPath": {
                    "type": "string",
                    "description": "Directory under the S3 bucket where data will be written. Read more \u003ca href=\"https://docs.airbyte.com/integrations/destinations/s3#:~:text=to%20format%20the-,bucket%20path,-%3A\"\u003ehere\u003c/a\u003e\n"
                },
                "s3BucketRegion": {
                    "type": "string",
                    "description": "The region of the S3 bucket. See \u003ca href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions\"\u003ehere\u003c/a\u003e for all region codes. must be one of [\"\", \"af-south-1\", \"ap-east-1\", \"ap-northeast-1\", \"ap-northeast-2\", \"ap-northeast-3\", \"ap-south-1\", \"ap-south-2\", \"ap-southeast-1\", \"ap-southeast-2\", \"ap-southeast-3\", \"ap-southeast-4\", \"ca-central-1\", \"ca-west-1\", \"cn-north-1\", \"cn-northwest-1\", \"eu-central-1\", \"eu-central-2\", \"eu-north-1\", \"eu-south-1\", \"eu-south-2\", \"eu-west-1\", \"eu-west-2\", \"eu-west-3\", \"il-central-1\", \"me-central-1\", \"me-south-1\", \"sa-east-1\", \"us-east-1\", \"us-east-2\", \"us-gov-east-1\", \"us-gov-west-1\", \"us-west-1\", \"us-west-2\"]; Default: \"\"\n"
                },
                "s3Endpoint": {
                    "type": "string",
                    "description": "Your S3 endpoint url. Read more \u003ca href=\"https://docs.aws.amazon.com/general/latest/gr/s3.html#:~:text=Service%20endpoints-,Amazon%20S3%20endpoints,-When%20you%20use\"\u003ehere\u003c/a\u003e. Default: \"\"\n"
                },
                "s3PathFormat": {
                    "type": "string",
                    "description": "Format string on how data will be organized inside the S3 bucket directory. Read more \u003ca href=\"https://docs.airbyte.com/integrations/destinations/s3#:~:text=The%20full%20path%20of%20the%20output%20data%20with%20the%20default%20S3%20path%20format\"\u003ehere\u003c/a\u003e\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "The corresponding secret to the access key ID. Read more \u003ca href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\"\u003ehere\u003c/a\u003e\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "format",
                "s3BucketName",
                "s3BucketPath"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "format",
                        "s3BucketName",
                        "s3BucketPath",
                        "s3BucketRegion",
                        "s3Endpoint"
                    ]
                }
            }
        },
        "airbyte:index/DestinationS3ConfigurationFormat:DestinationS3ConfigurationFormat": {
            "properties": {
                "avroApacheAvro": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatAvroApacheAvro:DestinationS3ConfigurationFormatAvroApacheAvro"
                },
                "csvCommaSeparatedValues": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatCsvCommaSeparatedValues:DestinationS3ConfigurationFormatCsvCommaSeparatedValues"
                },
                "jsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatJsonLinesNewlineDelimitedJson:DestinationS3ConfigurationFormatJsonLinesNewlineDelimitedJson"
                },
                "parquetColumnarStorage": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatParquetColumnarStorage:DestinationS3ConfigurationFormatParquetColumnarStorage"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3ConfigurationFormatAvroApacheAvro:DestinationS3ConfigurationFormatAvroApacheAvro": {
            "properties": {
                "compressionCodec": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodec:DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodec",
                    "description": "The compression algorithm used to compress data. Default to no compression.\n"
                },
                "formatType": {
                    "type": "string",
                    "description": "must be one of [\"Avro\"]; Default: \"Avro\"\n"
                }
            },
            "type": "object",
            "required": [
                "compressionCodec"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "compressionCodec",
                        "formatType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodec:DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodec": {
            "properties": {
                "bzip2": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecBzip2:DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecBzip2"
                },
                "deflate": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecDeflate:DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecDeflate"
                },
                "noCompression": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecNoCompression:DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecNoCompression"
                },
                "snappy": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecSnappy:DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecSnappy"
                },
                "xz": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecXz:DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecXz"
                },
                "zstandard": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecZstandard:DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecZstandard"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecBzip2:DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecBzip2": {
            "properties": {
                "codec": {
                    "type": "string",
                    "description": "must be one of [\"bzip2\"]; Default: \"bzip2\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "codec"
                    ]
                }
            }
        },
        "airbyte:index/DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecDeflate:DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecDeflate": {
            "properties": {
                "codec": {
                    "type": "string",
                    "description": "must be one of [\"Deflate\"]; Default: \"Deflate\"\n"
                },
                "compressionLevel": {
                    "type": "integer",
                    "description": "0: no compression \u0026 fastest, 9: best compression \u0026 slowest. Default: 0\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "codec",
                        "compressionLevel"
                    ]
                }
            }
        },
        "airbyte:index/DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecNoCompression:DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecNoCompression": {
            "properties": {
                "codec": {
                    "type": "string",
                    "description": "must be one of [\"no compression\"]; Default: \"no compression\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "codec"
                    ]
                }
            }
        },
        "airbyte:index/DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecSnappy:DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecSnappy": {
            "properties": {
                "codec": {
                    "type": "string",
                    "description": "must be one of [\"snappy\"]; Default: \"snappy\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "codec"
                    ]
                }
            }
        },
        "airbyte:index/DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecXz:DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecXz": {
            "properties": {
                "codec": {
                    "type": "string",
                    "description": "must be one of [\"xz\"]; Default: \"xz\"\n"
                },
                "compressionLevel": {
                    "type": "integer",
                    "description": "See \u003ca href=\"https://commons.apache.org/proper/commons-compress/apidocs/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.html#XZCompressorOutputStream-java.io.OutputStream-int-\"\u003ehere\u003c/a\u003e for details. Default: 6\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "codec",
                        "compressionLevel"
                    ]
                }
            }
        },
        "airbyte:index/DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecZstandard:DestinationS3ConfigurationFormatAvroApacheAvroCompressionCodecZstandard": {
            "properties": {
                "codec": {
                    "type": "string",
                    "description": "must be one of [\"zstandard\"]; Default: \"zstandard\"\n"
                },
                "compressionLevel": {
                    "type": "integer",
                    "description": "Negative levels are 'fast' modes akin to lz4 or snappy, levels above 9 are generally for archival purposes, and levels above 18 use a lot of memory. Default: 3\n"
                },
                "includeChecksum": {
                    "type": "boolean",
                    "description": "If true, include a checksum with each data block. Default: false\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "codec",
                        "compressionLevel",
                        "includeChecksum"
                    ]
                }
            }
        },
        "airbyte:index/DestinationS3ConfigurationFormatCsvCommaSeparatedValues:DestinationS3ConfigurationFormatCsvCommaSeparatedValues": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatCsvCommaSeparatedValuesCompression:DestinationS3ConfigurationFormatCsvCommaSeparatedValuesCompression",
                    "description": "Whether the output files should be compressed. If compression is selected, the output filename will have an extra extension (GZIP: \".csv.gz\").\n"
                },
                "flattening": {
                    "type": "string",
                    "description": "Whether the input json data should be normalized (flattened) in the output CSV. Please refer to docs for details. must be one of [\"No flattening\", \"Root level flattening\"]; Default: \"No flattening\"\n"
                },
                "formatType": {
                    "type": "string",
                    "description": "must be one of [\"CSV\"]; Default: \"CSV\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "flattening",
                        "formatType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationS3ConfigurationFormatCsvCommaSeparatedValuesCompression:DestinationS3ConfigurationFormatCsvCommaSeparatedValuesCompression": {
            "properties": {
                "gzip": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatCsvCommaSeparatedValuesCompressionGzip:DestinationS3ConfigurationFormatCsvCommaSeparatedValuesCompressionGzip"
                },
                "noCompression": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatCsvCommaSeparatedValuesCompressionNoCompression:DestinationS3ConfigurationFormatCsvCommaSeparatedValuesCompressionNoCompression"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3ConfigurationFormatCsvCommaSeparatedValuesCompressionGzip:DestinationS3ConfigurationFormatCsvCommaSeparatedValuesCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string",
                    "description": "must be one of [\"GZIP\"]; Default: \"GZIP\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "compressionType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationS3ConfigurationFormatCsvCommaSeparatedValuesCompressionNoCompression:DestinationS3ConfigurationFormatCsvCommaSeparatedValuesCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string",
                    "description": "must be one of [\"No Compression\"]; Default: \"No Compression\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "compressionType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationS3ConfigurationFormatJsonLinesNewlineDelimitedJson:DestinationS3ConfigurationFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatJsonLinesNewlineDelimitedJsonCompression:DestinationS3ConfigurationFormatJsonLinesNewlineDelimitedJsonCompression",
                    "description": "Whether the output files should be compressed. If compression is selected, the output filename will have an extra extension (GZIP: \".jsonl.gz\").\n"
                },
                "flattening": {
                    "type": "string",
                    "description": "Whether the input json data should be normalized (flattened) in the output JSON Lines. Please refer to docs for details. must be one of [\"No flattening\", \"Root level flattening\"]; Default: \"No flattening\"\n"
                },
                "formatType": {
                    "type": "string",
                    "description": "must be one of [\"JSONL\"]; Default: \"JSONL\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "flattening",
                        "formatType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationS3ConfigurationFormatJsonLinesNewlineDelimitedJsonCompression:DestinationS3ConfigurationFormatJsonLinesNewlineDelimitedJsonCompression": {
            "properties": {
                "gzip": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationS3ConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionGzip"
                },
                "noCompression": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationS3ConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3ConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationS3ConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string",
                    "description": "must be one of [\"GZIP\"]; Default: \"GZIP\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "compressionType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationS3ConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationS3ConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string",
                    "description": "must be one of [\"No Compression\"]; Default: \"No Compression\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "compressionType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationS3ConfigurationFormatParquetColumnarStorage:DestinationS3ConfigurationFormatParquetColumnarStorage": {
            "properties": {
                "blockSizeMb": {
                    "type": "integer",
                    "description": "This is the size of a row group being buffered in memory. It limits the memory usage when writing. Larger values will improve the IO when reading, but consume more memory when writing. Default: 128 MB. Default: 128\n"
                },
                "compressionCodec": {
                    "type": "string",
                    "description": "The compression algorithm used to compress data pages. must be one of [\"UNCOMPRESSED\", \"SNAPPY\", \"GZIP\", \"LZO\", \"BROTLI\", \"LZ4\", \"ZSTD\"]; Default: \"UNCOMPRESSED\"\n"
                },
                "dictionaryEncoding": {
                    "type": "boolean",
                    "description": "Default: true. Default: true\n"
                },
                "dictionaryPageSizeKb": {
                    "type": "integer",
                    "description": "There is one dictionary page per column per row group when dictionary encoding is used. The dictionary page size works like the page size but for dictionary. Default: 1024 KB. Default: 1024\n"
                },
                "formatType": {
                    "type": "string",
                    "description": "must be one of [\"Parquet\"]; Default: \"Parquet\"\n"
                },
                "maxPaddingSizeMb": {
                    "type": "integer",
                    "description": "Maximum size allowed as padding to align row groups. This is also the minimum size of a row group. Default: 8 MB. Default: 8\n"
                },
                "pageSizeKb": {
                    "type": "integer",
                    "description": "The page size is for compression. A block is composed of pages. A page is the smallest unit that must be read fully to access a single record. If this value is too small, the compression will deteriorate. Default: 1024 KB. Default: 1024\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "blockSizeMb",
                        "compressionCodec",
                        "dictionaryEncoding",
                        "dictionaryPageSizeKb",
                        "formatType",
                        "maxPaddingSizeMb",
                        "pageSizeKb"
                    ]
                }
            }
        },
        "airbyte:index/DestinationS3GlueConfiguration:DestinationS3GlueConfiguration": {
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "The access key ID to access the S3 bucket. Airbyte requires Read and Write permissions to the given bucket. Read more \u003ca href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\"\u003ehere\u003c/a\u003e.\n",
                    "secret": true
                },
                "fileNamePattern": {
                    "type": "string",
                    "description": "The pattern allows you to set the file-name format for the S3 staging file(s)\n"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/DestinationS3GlueConfigurationFormat:DestinationS3GlueConfigurationFormat",
                    "description": "Format of the data output. See \u003ca href=\"https://docs.airbyte.com/integrations/destinations/s3/#supported-output-schema\"\u003ehere\u003c/a\u003e for more details\n"
                },
                "glueDatabase": {
                    "type": "string",
                    "description": "Name of the glue database for creating the tables, leave blank if no integration\n"
                },
                "glueSerializationLibrary": {
                    "type": "string",
                    "description": "The library that your query engine will use for reading and writing data in your lake. must be one of [\"org.openx.data.jsonserde.JsonSerDe\", \"org.apache.hive.hcatalog.data.JsonSerDe\"]; Default: \"org.openx.data.jsonserde.JsonSerDe\"\n"
                },
                "s3BucketName": {
                    "type": "string",
                    "description": "The name of the S3 bucket. Read more \u003ca href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-bucket-overview.html\"\u003ehere\u003c/a\u003e.\n"
                },
                "s3BucketPath": {
                    "type": "string",
                    "description": "Directory under the S3 bucket where data will be written. Read more \u003ca href=\"https://docs.airbyte.com/integrations/destinations/s3#:~:text=to%20format%20the-,bucket%20path,-%3A\"\u003ehere\u003c/a\u003e\n"
                },
                "s3BucketRegion": {
                    "type": "string",
                    "description": "The region of the S3 bucket. See \u003ca href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions\"\u003ehere\u003c/a\u003e for all region codes. must be one of [\"\", \"af-south-1\", \"ap-east-1\", \"ap-northeast-1\", \"ap-northeast-2\", \"ap-northeast-3\", \"ap-south-1\", \"ap-south-2\", \"ap-southeast-1\", \"ap-southeast-2\", \"ap-southeast-3\", \"ap-southeast-4\", \"ca-central-1\", \"ca-west-1\", \"cn-north-1\", \"cn-northwest-1\", \"eu-central-1\", \"eu-central-2\", \"eu-north-1\", \"eu-south-1\", \"eu-south-2\", \"eu-west-1\", \"eu-west-2\", \"eu-west-3\", \"il-central-1\", \"me-central-1\", \"me-south-1\", \"sa-east-1\", \"us-east-1\", \"us-east-2\", \"us-gov-east-1\", \"us-gov-west-1\", \"us-west-1\", \"us-west-2\"]; Default: \"\"\n"
                },
                "s3Endpoint": {
                    "type": "string",
                    "description": "Your S3 endpoint url. Read more \u003ca href=\"https://docs.aws.amazon.com/general/latest/gr/s3.html#:~:text=Service%20endpoints-,Amazon%20S3%20endpoints,-When%20you%20use\"\u003ehere\u003c/a\u003e. Default: \"\"\n"
                },
                "s3PathFormat": {
                    "type": "string",
                    "description": "Format string on how data will be organized inside the S3 bucket directory. Read more \u003ca href=\"https://docs.airbyte.com/integrations/destinations/s3#:~:text=The%20full%20path%20of%20the%20output%20data%20with%20the%20default%20S3%20path%20format\"\u003ehere\u003c/a\u003e\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "The corresponding secret to the access key ID. Read more \u003ca href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\"\u003ehere\u003c/a\u003e\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "format",
                "glueDatabase",
                "s3BucketName",
                "s3BucketPath"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "format",
                        "glueDatabase",
                        "glueSerializationLibrary",
                        "s3BucketName",
                        "s3BucketPath",
                        "s3BucketRegion",
                        "s3Endpoint"
                    ]
                }
            }
        },
        "airbyte:index/DestinationS3GlueConfigurationFormat:DestinationS3GlueConfigurationFormat": {
            "properties": {
                "jsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/DestinationS3GlueConfigurationFormatJsonLinesNewlineDelimitedJson:DestinationS3GlueConfigurationFormatJsonLinesNewlineDelimitedJson"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3GlueConfigurationFormatJsonLinesNewlineDelimitedJson:DestinationS3GlueConfigurationFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/DestinationS3GlueConfigurationFormatJsonLinesNewlineDelimitedJsonCompression:DestinationS3GlueConfigurationFormatJsonLinesNewlineDelimitedJsonCompression",
                    "description": "Whether the output files should be compressed. If compression is selected, the output filename will have an extra extension (GZIP: \".jsonl.gz\").\n"
                },
                "flattening": {
                    "type": "string",
                    "description": "Whether the input json data should be normalized (flattened) in the output JSON Lines. Please refer to docs for details. must be one of [\"No flattening\", \"Root level flattening\"]; Default: \"Root level flattening\"\n"
                },
                "formatType": {
                    "type": "string",
                    "description": "must be one of [\"JSONL\"]; Default: \"JSONL\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "flattening",
                        "formatType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationS3GlueConfigurationFormatJsonLinesNewlineDelimitedJsonCompression:DestinationS3GlueConfigurationFormatJsonLinesNewlineDelimitedJsonCompression": {
            "properties": {
                "gzip": {
                    "$ref": "#/types/airbyte:index/DestinationS3GlueConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationS3GlueConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionGzip"
                },
                "noCompression": {
                    "$ref": "#/types/airbyte:index/DestinationS3GlueConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationS3GlueConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3GlueConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationS3GlueConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string",
                    "description": "must be one of [\"GZIP\"]; Default: \"GZIP\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "compressionType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationS3GlueConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationS3GlueConfigurationFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string",
                    "description": "must be one of [\"No Compression\"]; Default: \"No Compression\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "compressionType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationSftpJsonConfiguration:DestinationSftpJsonConfiguration": {
            "properties": {
                "destinationPath": {
                    "type": "string",
                    "description": "Path to the directory where json files will be written.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname of the SFTP server.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password associated with the username.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port of the SFTP server. Default: 22\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username to use to access the SFTP server.\n"
                }
            },
            "type": "object",
            "required": [
                "destinationPath",
                "host",
                "password",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "destinationPath",
                        "host",
                        "password",
                        "port",
                        "username"
                    ]
                }
            }
        },
        "airbyte:index/DestinationSnowflakeConfiguration:DestinationSnowflakeConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeConfigurationCredentials:DestinationSnowflakeConfigurationCredentials"
                },
                "database": {
                    "type": "string",
                    "description": "Enter the name of the \u003ca href=\"https://docs.snowflake.com/en/sql-reference/ddl-database.html#database-schema-share-ddl\"\u003edatabase\u003c/a\u003e you want to sync data into\n"
                },
                "disableTypeDedupe": {
                    "type": "boolean",
                    "description": "Disable Writing Final Tables. WARNING! The data format in _airbyte_data is likely stable but there are no guarantees that other metadata columns will remain the same in future versions. Default: false\n"
                },
                "host": {
                    "type": "string",
                    "description": "Enter your Snowflake account's \u003ca href=\"https://docs.snowflake.com/en/user-guide/admin-account-identifier.html#using-an-account-locator-as-an-identifier\"\u003elocator\u003c/a\u003e (in the format \u003caccount_locator\u003e.\u003cregion\u003e.\u003ccloud\u003e.snowflakecomputing.com)\n"
                },
                "jdbcUrlParams": {
                    "type": "string",
                    "description": "Enter the additional properties to pass to the JDBC URL string when connecting to the database (formatted as key=value pairs separated by the symbol \u0026). Example: key1=value1\u0026key2=value2\u0026key3=value3\n"
                },
                "rawDataSchema": {
                    "type": "string",
                    "description": "The schema to write raw tables into (default: airbyte_internal)\n"
                },
                "retentionPeriodDays": {
                    "type": "integer",
                    "description": "The number of days of Snowflake Time Travel to enable on the tables. See \u003ca href=\"https://docs.snowflake.com/en/user-guide/data-time-travel#data-retention-period\"\u003eSnowflake's documentation\u003c/a\u003e for more information. Setting a nonzero value will incur increased storage costs in your Snowflake instance. Default: 1\n"
                },
                "role": {
                    "type": "string",
                    "description": "Enter the \u003ca href=\"https://docs.snowflake.com/en/user-guide/security-access-control-overview.html#roles\"\u003erole\u003c/a\u003e that you want to use to access Snowflake\n"
                },
                "schema": {
                    "type": "string",
                    "description": "Enter the name of the default \u003ca href=\"https://docs.snowflake.com/en/sql-reference/ddl-database.html#database-schema-share-ddl\"\u003eschema\u003c/a\u003e\n"
                },
                "username": {
                    "type": "string",
                    "description": "Enter the name of the user you want to use to access the database\n"
                },
                "warehouse": {
                    "type": "string",
                    "description": "Enter the name of the \u003ca href=\"https://docs.snowflake.com/en/user-guide/warehouses-overview.html#overview-of-warehouses\"\u003ewarehouse\u003c/a\u003e that you want to sync data into\n"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "role",
                "schema",
                "username",
                "warehouse"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "database",
                        "disableTypeDedupe",
                        "host",
                        "retentionPeriodDays",
                        "role",
                        "schema",
                        "username",
                        "warehouse"
                    ]
                }
            }
        },
        "airbyte:index/DestinationSnowflakeConfigurationCredentials:DestinationSnowflakeConfigurationCredentials": {
            "properties": {
                "keyPairAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeConfigurationCredentialsKeyPairAuthentication:DestinationSnowflakeConfigurationCredentialsKeyPairAuthentication"
                },
                "oAuth20": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeConfigurationCredentialsOAuth20:DestinationSnowflakeConfigurationCredentialsOAuth20"
                },
                "usernameAndPassword": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeConfigurationCredentialsUsernameAndPassword:DestinationSnowflakeConfigurationCredentialsUsernameAndPassword"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationSnowflakeConfigurationCredentialsKeyPairAuthentication:DestinationSnowflakeConfigurationCredentialsKeyPairAuthentication": {
            "properties": {
                "privateKey": {
                    "type": "string",
                    "description": "RSA Private key to use for Snowflake connection. See the \u003ca href=\"https://docs.airbyte.com/integrations/destinations/snowflake\"\u003edocs\u003c/a\u003e for more information on how to obtain this key.\n",
                    "secret": true
                },
                "privateKeyPassword": {
                    "type": "string",
                    "description": "Passphrase for private key\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "privateKey"
            ]
        },
        "airbyte:index/DestinationSnowflakeConfigurationCredentialsOAuth20:DestinationSnowflakeConfigurationCredentialsOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Enter you application's Access Token\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "Enter your application's Client ID\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Enter your application's Client secret\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Enter your application's Refresh Token\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "refreshToken"
            ]
        },
        "airbyte:index/DestinationSnowflakeConfigurationCredentialsUsernameAndPassword:DestinationSnowflakeConfigurationCredentialsUsernameAndPassword": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "Enter the password associated with the username.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "password"
            ]
        },
        "airbyte:index/DestinationSnowflakeCortexConfiguration:DestinationSnowflakeCortexConfiguration": {
            "properties": {
                "embedding": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeCortexConfigurationEmbedding:DestinationSnowflakeCortexConfigurationEmbedding",
                    "description": "Embedding configuration\n"
                },
                "indexing": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeCortexConfigurationIndexing:DestinationSnowflakeCortexConfigurationIndexing",
                    "description": "Snowflake can be used to store vector data and retrieve embeddings.\n"
                },
                "omitRawText": {
                    "type": "boolean",
                    "description": "Do not store the text that gets embedded along with the vector and the metadata in the destination. If set to true, only the vector and the metadata will be stored - in this case raw text for LLM use cases needs to be retrieved from another source. Default: false\n"
                },
                "processing": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeCortexConfigurationProcessing:DestinationSnowflakeCortexConfigurationProcessing"
                }
            },
            "type": "object",
            "required": [
                "embedding",
                "indexing",
                "processing"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "embedding",
                        "indexing",
                        "omitRawText",
                        "processing"
                    ]
                }
            }
        },
        "airbyte:index/DestinationSnowflakeCortexConfigurationEmbedding:DestinationSnowflakeCortexConfigurationEmbedding": {
            "properties": {
                "azureOpenAi": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeCortexConfigurationEmbeddingAzureOpenAi:DestinationSnowflakeCortexConfigurationEmbeddingAzureOpenAi",
                    "description": "Use the Azure-hosted OpenAI API to embed text. This option is using the text-embedding-ada-002 model with 1536 embedding dimensions.\n"
                },
                "cohere": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeCortexConfigurationEmbeddingCohere:DestinationSnowflakeCortexConfigurationEmbeddingCohere",
                    "description": "Use the Cohere API to embed text.\n"
                },
                "fake": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeCortexConfigurationEmbeddingFake:DestinationSnowflakeCortexConfigurationEmbeddingFake",
                    "description": "Use a fake embedding made out of random vectors with 1536 embedding dimensions. This is useful for testing the data pipeline without incurring any costs.\n"
                },
                "openAi": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeCortexConfigurationEmbeddingOpenAi:DestinationSnowflakeCortexConfigurationEmbeddingOpenAi",
                    "description": "Use the OpenAI API to embed text. This option is using the text-embedding-ada-002 model with 1536 embedding dimensions.\n"
                },
                "openAiCompatible": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeCortexConfigurationEmbeddingOpenAiCompatible:DestinationSnowflakeCortexConfigurationEmbeddingOpenAiCompatible",
                    "description": "Use a service that's compatible with the OpenAI API to embed text.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationSnowflakeCortexConfigurationEmbeddingAzureOpenAi:DestinationSnowflakeCortexConfigurationEmbeddingAzureOpenAi": {
            "properties": {
                "apiBase": {
                    "type": "string",
                    "description": "The base URL for your Azure OpenAI resource.  You can find this in the Azure portal under your Azure OpenAI resource\n"
                },
                "deployment": {
                    "type": "string",
                    "description": "The deployment for your Azure OpenAI resource.  You can find this in the Azure portal under your Azure OpenAI resource\n"
                },
                "openaiKey": {
                    "type": "string",
                    "description": "The API key for your Azure OpenAI resource.  You can find this in the Azure portal under your Azure OpenAI resource\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiBase",
                "deployment",
                "openaiKey"
            ]
        },
        "airbyte:index/DestinationSnowflakeCortexConfigurationEmbeddingCohere:DestinationSnowflakeCortexConfigurationEmbeddingCohere": {
            "properties": {
                "cohereKey": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "cohereKey"
            ]
        },
        "airbyte:index/DestinationSnowflakeCortexConfigurationEmbeddingFake:DestinationSnowflakeCortexConfigurationEmbeddingFake": {
            "type": "object"
        },
        "airbyte:index/DestinationSnowflakeCortexConfigurationEmbeddingOpenAi:DestinationSnowflakeCortexConfigurationEmbeddingOpenAi": {
            "properties": {
                "openaiKey": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "openaiKey"
            ]
        },
        "airbyte:index/DestinationSnowflakeCortexConfigurationEmbeddingOpenAiCompatible:DestinationSnowflakeCortexConfigurationEmbeddingOpenAiCompatible": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Default: \"\"\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "The base URL for your OpenAI-compatible service\n"
                },
                "dimensions": {
                    "type": "integer",
                    "description": "The number of dimensions the embedding model is generating\n"
                },
                "modelName": {
                    "type": "string",
                    "description": "The name of the model to use for embedding. Default: \"text-embedding-ada-002\"\n"
                }
            },
            "type": "object",
            "required": [
                "baseUrl",
                "dimensions"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "baseUrl",
                        "dimensions",
                        "modelName"
                    ]
                }
            }
        },
        "airbyte:index/DestinationSnowflakeCortexConfigurationIndexing:DestinationSnowflakeCortexConfigurationIndexing": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeCortexConfigurationIndexingCredentials:DestinationSnowflakeCortexConfigurationIndexingCredentials"
                },
                "database": {
                    "type": "string",
                    "description": "Enter the name of the database that you want to sync data into\n"
                },
                "defaultSchema": {
                    "type": "string",
                    "description": "Enter the name of the default schema\n"
                },
                "host": {
                    "type": "string",
                    "description": "Enter the account name you want to use to access the database. This is usually the identifier before .snowflakecomputing.com\n"
                },
                "role": {
                    "type": "string",
                    "description": "Enter the role that you want to use to access Snowflake\n"
                },
                "username": {
                    "type": "string",
                    "description": "Enter the name of the user you want to use to access the database\n"
                },
                "warehouse": {
                    "type": "string",
                    "description": "Enter the name of the warehouse that you want to sync data into\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "database",
                "defaultSchema",
                "host",
                "role",
                "username",
                "warehouse"
            ]
        },
        "airbyte:index/DestinationSnowflakeCortexConfigurationIndexingCredentials:DestinationSnowflakeCortexConfigurationIndexingCredentials": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "Enter the password you want to use to access the database\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "password"
            ]
        },
        "airbyte:index/DestinationSnowflakeCortexConfigurationProcessing:DestinationSnowflakeCortexConfigurationProcessing": {
            "properties": {
                "chunkOverlap": {
                    "type": "integer",
                    "description": "Size of overlap between chunks in tokens to store in vector store to better capture relevant context. Default: 0\n"
                },
                "chunkSize": {
                    "type": "integer",
                    "description": "Size of chunks in tokens to store in vector store (make sure it is not too big for the context if your LLM)\n"
                },
                "fieldNameMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/DestinationSnowflakeCortexConfigurationProcessingFieldNameMapping:DestinationSnowflakeCortexConfigurationProcessingFieldNameMapping"
                    },
                    "description": "List of fields to rename. Not applicable for nested fields, but can be used to rename fields already flattened via dot notation.\n"
                },
                "metadataFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of fields in the record that should be stored as metadata. The field list is applied to all streams in the same way and non-existing fields are ignored. If none are defined, all fields are considered metadata fields. When specifying text fields, you can access nested fields in the record by using dot notation, e.g. `user.name` will access the `name` field in the `user` object. It's also possible to use wildcards to access all fields in an object, e.g. `users.*.name` will access all `names` fields in all entries of the `users` array. When specifying nested paths, all matching values are flattened into an array set to a field named by the path.\n"
                },
                "textFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of fields in the record that should be used to calculate the embedding. The field list is applied to all streams in the same way and non-existing fields are ignored. If none are defined, all fields are considered text fields. When specifying text fields, you can access nested fields in the record by using dot notation, e.g. `user.name` will access the `name` field in the `user` object. It's also possible to use wildcards to access all fields in an object, e.g. `users.*.name` will access all `names` fields in all entries of the `users` array.\n"
                },
                "textSplitter": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeCortexConfigurationProcessingTextSplitter:DestinationSnowflakeCortexConfigurationProcessingTextSplitter",
                    "description": "Split text fields into chunks based on the specified method.\n"
                }
            },
            "type": "object",
            "required": [
                "chunkSize"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "chunkOverlap",
                        "chunkSize"
                    ]
                }
            }
        },
        "airbyte:index/DestinationSnowflakeCortexConfigurationProcessingFieldNameMapping:DestinationSnowflakeCortexConfigurationProcessingFieldNameMapping": {
            "properties": {
                "fromField": {
                    "type": "string",
                    "description": "The field name in the source\n"
                },
                "toField": {
                    "type": "string",
                    "description": "The field name to use in the destination\n"
                }
            },
            "type": "object",
            "required": [
                "fromField",
                "toField"
            ]
        },
        "airbyte:index/DestinationSnowflakeCortexConfigurationProcessingTextSplitter:DestinationSnowflakeCortexConfigurationProcessingTextSplitter": {
            "properties": {
                "byMarkdownHeader": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeCortexConfigurationProcessingTextSplitterByMarkdownHeader:DestinationSnowflakeCortexConfigurationProcessingTextSplitterByMarkdownHeader",
                    "description": "Split the text by Markdown headers down to the specified header level. If the chunk size fits multiple sections, they will be combined into a single chunk.\n"
                },
                "byProgrammingLanguage": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeCortexConfigurationProcessingTextSplitterByProgrammingLanguage:DestinationSnowflakeCortexConfigurationProcessingTextSplitterByProgrammingLanguage",
                    "description": "Split the text by suitable delimiters based on the programming language. This is useful for splitting code into chunks.\n"
                },
                "bySeparator": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeCortexConfigurationProcessingTextSplitterBySeparator:DestinationSnowflakeCortexConfigurationProcessingTextSplitterBySeparator",
                    "description": "Split the text by the list of separators until the chunk size is reached, using the earlier mentioned separators where possible. This is useful for splitting text fields by paragraphs, sentences, words, etc.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationSnowflakeCortexConfigurationProcessingTextSplitterByMarkdownHeader:DestinationSnowflakeCortexConfigurationProcessingTextSplitterByMarkdownHeader": {
            "properties": {
                "splitLevel": {
                    "type": "integer",
                    "description": "Level of markdown headers to split text fields by. Headings down to the specified level will be used as split points. Default: 1\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "splitLevel"
                    ]
                }
            }
        },
        "airbyte:index/DestinationSnowflakeCortexConfigurationProcessingTextSplitterByProgrammingLanguage:DestinationSnowflakeCortexConfigurationProcessingTextSplitterByProgrammingLanguage": {
            "properties": {
                "language": {
                    "type": "string",
                    "description": "Split code in suitable places based on the programming language. must be one of [\"cpp\", \"go\", \"java\", \"js\", \"php\", \"proto\", \"python\", \"rst\", \"ruby\", \"rust\", \"scala\", \"swift\", \"markdown\", \"latex\", \"html\", \"sol\"]\n"
                }
            },
            "type": "object",
            "required": [
                "language"
            ]
        },
        "airbyte:index/DestinationSnowflakeCortexConfigurationProcessingTextSplitterBySeparator:DestinationSnowflakeCortexConfigurationProcessingTextSplitterBySeparator": {
            "properties": {
                "keepSeparator": {
                    "type": "boolean",
                    "description": "Whether to keep the separator in the resulting chunks. Default: false\n"
                },
                "separators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of separator strings to split text fields by. The separator itself needs to be wrapped in double quotes, e.g. to split by the dot character, use \".\". To split by a newline, use \"\\n\".\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "keepSeparator"
                    ]
                }
            }
        },
        "airbyte:index/DestinationTeradataConfiguration:DestinationTeradataConfiguration": {
            "properties": {
                "host": {
                    "type": "string",
                    "description": "Hostname of the database.\n"
                },
                "jdbcUrlParams": {
                    "type": "string",
                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '\u0026'. (example: key1=value1\u0026key2=value2\u0026key3=value3).\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password associated with the username.\n",
                    "secret": true
                },
                "schema": {
                    "type": "string",
                    "description": "The default schema tables are written to if the source does not specify a namespace. The usual value for this field is \"public\". Default: \"airbyte_td\"\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Encrypt data using SSL. When activating SSL, please select one of the connection modes. Default: false\n"
                },
                "sslMode": {
                    "$ref": "#/types/airbyte:index/DestinationTeradataConfigurationSslMode:DestinationTeradataConfigurationSslMode",
                    "description": "SSL connection modes. \n \u003cb\u003edisable\u003c/b\u003e - Chose this mode to disable encryption of communication between Airbyte and destination database\n \u003cb\u003eallow\u003c/b\u003e - Chose this mode to enable encryption only when required by the destination database\n \u003cb\u003eprefer\u003c/b\u003e - Chose this mode to allow unencrypted connection only if the destination database does not support encryption\n \u003cb\u003erequire\u003c/b\u003e - Chose this mode to always require encryption. If the destination database server does not support encryption, connection will fail\n  \u003cb\u003everify-ca\u003c/b\u003e - Chose this mode to always require encryption and to verify that the destination database server has a valid SSL certificate\n  \u003cb\u003everify-full\u003c/b\u003e - This is the most secure mode. Chose this mode to always require encryption and to verify the identity of the destination database server\n See more information - \u003ca href=\"https://teradata-docs.s3.amazonaws.com/doc/connectivity/jdbc/reference/current/jdbcug_chapter_2.html#URL_SSLMODE\"\u003e in the docs\u003c/a\u003e.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username to use to access the database.\n"
                }
            },
            "type": "object",
            "required": [
                "host",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "host",
                        "schema",
                        "ssl",
                        "username"
                    ]
                }
            }
        },
        "airbyte:index/DestinationTeradataConfigurationSslMode:DestinationTeradataConfigurationSslMode": {
            "properties": {
                "allow": {
                    "$ref": "#/types/airbyte:index/DestinationTeradataConfigurationSslModeAllow:DestinationTeradataConfigurationSslModeAllow",
                    "description": "Allow SSL mode.\n"
                },
                "disable": {
                    "$ref": "#/types/airbyte:index/DestinationTeradataConfigurationSslModeDisable:DestinationTeradataConfigurationSslModeDisable",
                    "description": "Disable SSL.\n"
                },
                "prefer": {
                    "$ref": "#/types/airbyte:index/DestinationTeradataConfigurationSslModePrefer:DestinationTeradataConfigurationSslModePrefer",
                    "description": "Prefer SSL mode.\n"
                },
                "require": {
                    "$ref": "#/types/airbyte:index/DestinationTeradataConfigurationSslModeRequire:DestinationTeradataConfigurationSslModeRequire",
                    "description": "Require SSL mode.\n"
                },
                "verifyCa": {
                    "$ref": "#/types/airbyte:index/DestinationTeradataConfigurationSslModeVerifyCa:DestinationTeradataConfigurationSslModeVerifyCa",
                    "description": "Verify-ca SSL mode.\n"
                },
                "verifyFull": {
                    "$ref": "#/types/airbyte:index/DestinationTeradataConfigurationSslModeVerifyFull:DestinationTeradataConfigurationSslModeVerifyFull",
                    "description": "Verify-full SSL mode.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationTeradataConfigurationSslModeAllow:DestinationTeradataConfigurationSslModeAllow": {
            "type": "object"
        },
        "airbyte:index/DestinationTeradataConfigurationSslModeDisable:DestinationTeradataConfigurationSslModeDisable": {
            "type": "object"
        },
        "airbyte:index/DestinationTeradataConfigurationSslModePrefer:DestinationTeradataConfigurationSslModePrefer": {
            "type": "object"
        },
        "airbyte:index/DestinationTeradataConfigurationSslModeRequire:DestinationTeradataConfigurationSslModeRequire": {
            "type": "object"
        },
        "airbyte:index/DestinationTeradataConfigurationSslModeVerifyCa:DestinationTeradataConfigurationSslModeVerifyCa": {
            "properties": {
                "sslCaCertificate": {
                    "type": "string",
                    "description": "Specifies the file name of a PEM file that contains Certificate Authority (CA) certificates for use with SSLMODE=verify-ca.\n See more information - \u003ca href=\"https://teradata-docs.s3.amazonaws.com/doc/connectivity/jdbc/reference/current/jdbcug_chapter_2.html#URL_SSLCA\"\u003e in the docs\u003c/a\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "sslCaCertificate"
            ]
        },
        "airbyte:index/DestinationTeradataConfigurationSslModeVerifyFull:DestinationTeradataConfigurationSslModeVerifyFull": {
            "properties": {
                "sslCaCertificate": {
                    "type": "string",
                    "description": "Specifies the file name of a PEM file that contains Certificate Authority (CA) certificates for use with SSLMODE=verify-full.\n See more information - \u003ca href=\"https://teradata-docs.s3.amazonaws.com/doc/connectivity/jdbc/reference/current/jdbcug_chapter_2.html#URL_SSLCA\"\u003e in the docs\u003c/a\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "sslCaCertificate"
            ]
        },
        "airbyte:index/DestinationTypesenseConfiguration:DestinationTypesenseConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Typesense API Key\n",
                    "secret": true
                },
                "batchSize": {
                    "type": "integer",
                    "description": "How many documents should be imported together. Default 1000\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname of the Typesense instance without protocol.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path of the Typesense instance. Default is none\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port of the Typesense instance. Ex: 8108, 80, 443. Default is 443\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol of the Typesense instance. Ex: http or https. Default is https\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "host"
            ]
        },
        "airbyte:index/DestinationVectaraConfiguration:DestinationVectaraConfiguration": {
            "properties": {
                "corpusName": {
                    "type": "string",
                    "description": "The Name of Corpus to load data into\n"
                },
                "customerId": {
                    "type": "string",
                    "description": "Your customer id as it is in the authenticaion url\n"
                },
                "metadataFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of fields in the record that should be stored as metadata. The field list is applied to all streams in the same way and non-existing fields are ignored. If none are defined, all fields are considered metadata fields. When specifying text fields, you can access nested fields in the record by using dot notation, e.g. `user.name` will access the `name` field in the `user` object. It's also possible to use wildcards to access all fields in an object, e.g. `users.*.name` will access all `names` fields in all entries of the `users` array. When specifying nested paths, all matching values are flattened into an array set to a field named by the path.\n"
                },
                "oauth2": {
                    "$ref": "#/types/airbyte:index/DestinationVectaraConfigurationOauth2:DestinationVectaraConfigurationOauth2",
                    "description": "OAuth2.0 credentials used to authenticate admin actions (creating/deleting corpora)\n"
                },
                "parallelize": {
                    "type": "boolean",
                    "description": "Parallelize indexing into Vectara with multiple threads. Default: false\n"
                },
                "textFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of fields in the record that should be in the section of the document. The field list is applied to all streams in the same way and non-existing fields are ignored. If none are defined, all fields are considered text fields. When specifying text fields, you can access nested fields in the record by using dot notation, e.g. `user.name` will access the `name` field in the `user` object. It's also possible to use wildcards to access all fields in an object, e.g. `users.*.name` will access all `names` fields in all entries of the `users` array.\n"
                },
                "titleField": {
                    "type": "string",
                    "description": "A field that will be used to populate the `title` of each document. The field list is applied to all streams in the same way and non-existing fields are ignored. If none are defined, all fields are considered text fields. When specifying text fields, you can access nested fields in the record by using dot notation, e.g. `user.name` will access the `name` field in the `user` object. It's also possible to use wildcards to access all fields in an object, e.g. `users.*.name` will access all `names` fields in all entries of the `users` array. Default: \"\"\n"
                }
            },
            "type": "object",
            "required": [
                "corpusName",
                "customerId",
                "oauth2"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "corpusName",
                        "customerId",
                        "oauth2",
                        "parallelize",
                        "titleField"
                    ]
                }
            }
        },
        "airbyte:index/DestinationVectaraConfigurationOauth2:DestinationVectaraConfigurationOauth2": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "OAuth2.0 client id\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "OAuth2.0 client secret\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret"
            ]
        },
        "airbyte:index/DestinationWeaviateConfiguration:DestinationWeaviateConfiguration": {
            "properties": {
                "embedding": {
                    "$ref": "#/types/airbyte:index/DestinationWeaviateConfigurationEmbedding:DestinationWeaviateConfigurationEmbedding",
                    "description": "Embedding configuration\n"
                },
                "indexing": {
                    "$ref": "#/types/airbyte:index/DestinationWeaviateConfigurationIndexing:DestinationWeaviateConfigurationIndexing",
                    "description": "Indexing configuration\n"
                },
                "omitRawText": {
                    "type": "boolean",
                    "description": "Do not store the text that gets embedded along with the vector and the metadata in the destination. If set to true, only the vector and the metadata will be stored - in this case raw text for LLM use cases needs to be retrieved from another source. Default: false\n"
                },
                "processing": {
                    "$ref": "#/types/airbyte:index/DestinationWeaviateConfigurationProcessing:DestinationWeaviateConfigurationProcessing"
                }
            },
            "type": "object",
            "required": [
                "embedding",
                "indexing",
                "processing"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "embedding",
                        "indexing",
                        "omitRawText",
                        "processing"
                    ]
                }
            }
        },
        "airbyte:index/DestinationWeaviateConfigurationEmbedding:DestinationWeaviateConfigurationEmbedding": {
            "properties": {
                "azureOpenAi": {
                    "$ref": "#/types/airbyte:index/DestinationWeaviateConfigurationEmbeddingAzureOpenAi:DestinationWeaviateConfigurationEmbeddingAzureOpenAi",
                    "description": "Use the Azure-hosted OpenAI API to embed text. This option is using the text-embedding-ada-002 model with 1536 embedding dimensions.\n"
                },
                "cohere": {
                    "$ref": "#/types/airbyte:index/DestinationWeaviateConfigurationEmbeddingCohere:DestinationWeaviateConfigurationEmbeddingCohere",
                    "description": "Use the Cohere API to embed text.\n"
                },
                "fake": {
                    "$ref": "#/types/airbyte:index/DestinationWeaviateConfigurationEmbeddingFake:DestinationWeaviateConfigurationEmbeddingFake",
                    "description": "Use a fake embedding made out of random vectors with 1536 embedding dimensions. This is useful for testing the data pipeline without incurring any costs.\n"
                },
                "fromField": {
                    "$ref": "#/types/airbyte:index/DestinationWeaviateConfigurationEmbeddingFromField:DestinationWeaviateConfigurationEmbeddingFromField",
                    "description": "Use a field in the record as the embedding. This is useful if you already have an embedding for your data and want to store it in the vector store.\n"
                },
                "noExternalEmbedding": {
                    "$ref": "#/types/airbyte:index/DestinationWeaviateConfigurationEmbeddingNoExternalEmbedding:DestinationWeaviateConfigurationEmbeddingNoExternalEmbedding",
                    "description": "Do not calculate and pass embeddings to Weaviate. Suitable for clusters with configured vectorizers to calculate embeddings within Weaviate or for classes that should only support regular text search.\n"
                },
                "openAi": {
                    "$ref": "#/types/airbyte:index/DestinationWeaviateConfigurationEmbeddingOpenAi:DestinationWeaviateConfigurationEmbeddingOpenAi",
                    "description": "Use the OpenAI API to embed text. This option is using the text-embedding-ada-002 model with 1536 embedding dimensions.\n"
                },
                "openAiCompatible": {
                    "$ref": "#/types/airbyte:index/DestinationWeaviateConfigurationEmbeddingOpenAiCompatible:DestinationWeaviateConfigurationEmbeddingOpenAiCompatible",
                    "description": "Use a service that's compatible with the OpenAI API to embed text.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationWeaviateConfigurationEmbeddingAzureOpenAi:DestinationWeaviateConfigurationEmbeddingAzureOpenAi": {
            "properties": {
                "apiBase": {
                    "type": "string",
                    "description": "The base URL for your Azure OpenAI resource.  You can find this in the Azure portal under your Azure OpenAI resource\n"
                },
                "deployment": {
                    "type": "string",
                    "description": "The deployment for your Azure OpenAI resource.  You can find this in the Azure portal under your Azure OpenAI resource\n"
                },
                "openaiKey": {
                    "type": "string",
                    "description": "The API key for your Azure OpenAI resource.  You can find this in the Azure portal under your Azure OpenAI resource\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiBase",
                "deployment",
                "openaiKey"
            ]
        },
        "airbyte:index/DestinationWeaviateConfigurationEmbeddingCohere:DestinationWeaviateConfigurationEmbeddingCohere": {
            "properties": {
                "cohereKey": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "cohereKey"
            ]
        },
        "airbyte:index/DestinationWeaviateConfigurationEmbeddingFake:DestinationWeaviateConfigurationEmbeddingFake": {
            "type": "object"
        },
        "airbyte:index/DestinationWeaviateConfigurationEmbeddingFromField:DestinationWeaviateConfigurationEmbeddingFromField": {
            "properties": {
                "dimensions": {
                    "type": "integer",
                    "description": "The number of dimensions the embedding model is generating\n"
                },
                "fieldName": {
                    "type": "string",
                    "description": "Name of the field in the record that contains the embedding\n"
                }
            },
            "type": "object",
            "required": [
                "dimensions",
                "fieldName"
            ]
        },
        "airbyte:index/DestinationWeaviateConfigurationEmbeddingNoExternalEmbedding:DestinationWeaviateConfigurationEmbeddingNoExternalEmbedding": {
            "type": "object"
        },
        "airbyte:index/DestinationWeaviateConfigurationEmbeddingOpenAi:DestinationWeaviateConfigurationEmbeddingOpenAi": {
            "properties": {
                "openaiKey": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "openaiKey"
            ]
        },
        "airbyte:index/DestinationWeaviateConfigurationEmbeddingOpenAiCompatible:DestinationWeaviateConfigurationEmbeddingOpenAiCompatible": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Default: \"\"\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "The base URL for your OpenAI-compatible service\n"
                },
                "dimensions": {
                    "type": "integer",
                    "description": "The number of dimensions the embedding model is generating\n"
                },
                "modelName": {
                    "type": "string",
                    "description": "The name of the model to use for embedding. Default: \"text-embedding-ada-002\"\n"
                }
            },
            "type": "object",
            "required": [
                "baseUrl",
                "dimensions"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "baseUrl",
                        "dimensions",
                        "modelName"
                    ]
                }
            }
        },
        "airbyte:index/DestinationWeaviateConfigurationIndexing:DestinationWeaviateConfigurationIndexing": {
            "properties": {
                "additionalHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/DestinationWeaviateConfigurationIndexingAdditionalHeader:DestinationWeaviateConfigurationIndexingAdditionalHeader"
                    },
                    "description": "Additional HTTP headers to send with every request.\n"
                },
                "auth": {
                    "$ref": "#/types/airbyte:index/DestinationWeaviateConfigurationIndexingAuth:DestinationWeaviateConfigurationIndexingAuth",
                    "description": "Authentication method\n"
                },
                "batchSize": {
                    "type": "integer",
                    "description": "The number of records to send to Weaviate in each batch. Default: 128\n"
                },
                "defaultVectorizer": {
                    "type": "string",
                    "description": "The vectorizer to use if new classes need to be created. must be one of [\"none\", \"text2vec-cohere\", \"text2vec-huggingface\", \"text2vec-openai\", \"text2vec-palm\", \"text2vec-contextionary\", \"text2vec-transformers\", \"text2vec-gpt4all\"]; Default: \"none\"\n"
                },
                "host": {
                    "type": "string",
                    "description": "The public endpoint of the Weaviate cluster.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The tenant ID to use for multi tenancy. Default: \"\"\n"
                },
                "textField": {
                    "type": "string",
                    "description": "The field in the object that contains the embedded text. Default: \"text\"\n"
                }
            },
            "type": "object",
            "required": [
                "auth",
                "host"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "auth",
                        "batchSize",
                        "defaultVectorizer",
                        "host",
                        "tenantId",
                        "textField"
                    ]
                }
            }
        },
        "airbyte:index/DestinationWeaviateConfigurationIndexingAdditionalHeader:DestinationWeaviateConfigurationIndexingAdditionalHeader": {
            "properties": {
                "headerKey": {
                    "type": "string",
                    "secret": true
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "headerKey",
                "value"
            ]
        },
        "airbyte:index/DestinationWeaviateConfigurationIndexingAuth:DestinationWeaviateConfigurationIndexingAuth": {
            "properties": {
                "apiToken": {
                    "$ref": "#/types/airbyte:index/DestinationWeaviateConfigurationIndexingAuthApiToken:DestinationWeaviateConfigurationIndexingAuthApiToken",
                    "description": "Authenticate using an API token (suitable for Weaviate Cloud)\n"
                },
                "noAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationWeaviateConfigurationIndexingAuthNoAuthentication:DestinationWeaviateConfigurationIndexingAuthNoAuthentication",
                    "description": "Do not authenticate (suitable for locally running test clusters, do not use for clusters with public IP addresses)\n"
                },
                "usernamePassword": {
                    "$ref": "#/types/airbyte:index/DestinationWeaviateConfigurationIndexingAuthUsernamePassword:DestinationWeaviateConfigurationIndexingAuthUsernamePassword",
                    "description": "Authenticate using username and password (suitable for self-managed Weaviate clusters)\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationWeaviateConfigurationIndexingAuthApiToken:DestinationWeaviateConfigurationIndexingAuthApiToken": {
            "properties": {
                "token": {
                    "type": "string",
                    "description": "API Token for the Weaviate instance\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "token"
            ]
        },
        "airbyte:index/DestinationWeaviateConfigurationIndexingAuthNoAuthentication:DestinationWeaviateConfigurationIndexingAuthNoAuthentication": {
            "type": "object"
        },
        "airbyte:index/DestinationWeaviateConfigurationIndexingAuthUsernamePassword:DestinationWeaviateConfigurationIndexingAuthUsernamePassword": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "Password for the Weaviate cluster\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "Username for the Weaviate cluster\n"
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "airbyte:index/DestinationWeaviateConfigurationProcessing:DestinationWeaviateConfigurationProcessing": {
            "properties": {
                "chunkOverlap": {
                    "type": "integer",
                    "description": "Size of overlap between chunks in tokens to store in vector store to better capture relevant context. Default: 0\n"
                },
                "chunkSize": {
                    "type": "integer",
                    "description": "Size of chunks in tokens to store in vector store (make sure it is not too big for the context if your LLM)\n"
                },
                "fieldNameMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/DestinationWeaviateConfigurationProcessingFieldNameMapping:DestinationWeaviateConfigurationProcessingFieldNameMapping"
                    },
                    "description": "List of fields to rename. Not applicable for nested fields, but can be used to rename fields already flattened via dot notation.\n"
                },
                "metadataFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of fields in the record that should be stored as metadata. The field list is applied to all streams in the same way and non-existing fields are ignored. If none are defined, all fields are considered metadata fields. When specifying text fields, you can access nested fields in the record by using dot notation, e.g. `user.name` will access the `name` field in the `user` object. It's also possible to use wildcards to access all fields in an object, e.g. `users.*.name` will access all `names` fields in all entries of the `users` array. When specifying nested paths, all matching values are flattened into an array set to a field named by the path.\n"
                },
                "textFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of fields in the record that should be used to calculate the embedding. The field list is applied to all streams in the same way and non-existing fields are ignored. If none are defined, all fields are considered text fields. When specifying text fields, you can access nested fields in the record by using dot notation, e.g. `user.name` will access the `name` field in the `user` object. It's also possible to use wildcards to access all fields in an object, e.g. `users.*.name` will access all `names` fields in all entries of the `users` array.\n"
                },
                "textSplitter": {
                    "$ref": "#/types/airbyte:index/DestinationWeaviateConfigurationProcessingTextSplitter:DestinationWeaviateConfigurationProcessingTextSplitter",
                    "description": "Split text fields into chunks based on the specified method.\n"
                }
            },
            "type": "object",
            "required": [
                "chunkSize"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "chunkOverlap",
                        "chunkSize"
                    ]
                }
            }
        },
        "airbyte:index/DestinationWeaviateConfigurationProcessingFieldNameMapping:DestinationWeaviateConfigurationProcessingFieldNameMapping": {
            "properties": {
                "fromField": {
                    "type": "string",
                    "description": "The field name in the source\n"
                },
                "toField": {
                    "type": "string",
                    "description": "The field name to use in the destination\n"
                }
            },
            "type": "object",
            "required": [
                "fromField",
                "toField"
            ]
        },
        "airbyte:index/DestinationWeaviateConfigurationProcessingTextSplitter:DestinationWeaviateConfigurationProcessingTextSplitter": {
            "properties": {
                "byMarkdownHeader": {
                    "$ref": "#/types/airbyte:index/DestinationWeaviateConfigurationProcessingTextSplitterByMarkdownHeader:DestinationWeaviateConfigurationProcessingTextSplitterByMarkdownHeader",
                    "description": "Split the text by Markdown headers down to the specified header level. If the chunk size fits multiple sections, they will be combined into a single chunk.\n"
                },
                "byProgrammingLanguage": {
                    "$ref": "#/types/airbyte:index/DestinationWeaviateConfigurationProcessingTextSplitterByProgrammingLanguage:DestinationWeaviateConfigurationProcessingTextSplitterByProgrammingLanguage",
                    "description": "Split the text by suitable delimiters based on the programming language. This is useful for splitting code into chunks.\n"
                },
                "bySeparator": {
                    "$ref": "#/types/airbyte:index/DestinationWeaviateConfigurationProcessingTextSplitterBySeparator:DestinationWeaviateConfigurationProcessingTextSplitterBySeparator",
                    "description": "Split the text by the list of separators until the chunk size is reached, using the earlier mentioned separators where possible. This is useful for splitting text fields by paragraphs, sentences, words, etc.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationWeaviateConfigurationProcessingTextSplitterByMarkdownHeader:DestinationWeaviateConfigurationProcessingTextSplitterByMarkdownHeader": {
            "properties": {
                "splitLevel": {
                    "type": "integer",
                    "description": "Level of markdown headers to split text fields by. Headings down to the specified level will be used as split points. Default: 1\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "splitLevel"
                    ]
                }
            }
        },
        "airbyte:index/DestinationWeaviateConfigurationProcessingTextSplitterByProgrammingLanguage:DestinationWeaviateConfigurationProcessingTextSplitterByProgrammingLanguage": {
            "properties": {
                "language": {
                    "type": "string",
                    "description": "Split code in suitable places based on the programming language. must be one of [\"cpp\", \"go\", \"java\", \"js\", \"php\", \"proto\", \"python\", \"rst\", \"ruby\", \"rust\", \"scala\", \"swift\", \"markdown\", \"latex\", \"html\", \"sol\"]\n"
                }
            },
            "type": "object",
            "required": [
                "language"
            ]
        },
        "airbyte:index/DestinationWeaviateConfigurationProcessingTextSplitterBySeparator:DestinationWeaviateConfigurationProcessingTextSplitterBySeparator": {
            "properties": {
                "keepSeparator": {
                    "type": "boolean",
                    "description": "Whether to keep the separator in the resulting chunks. Default: false\n"
                },
                "separators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of separator strings to split text fields by. The separator itself needs to be wrapped in double quotes, e.g. to split by the dot character, use \".\". To split by a newline, use \"\\n\".\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "keepSeparator"
                    ]
                }
            }
        },
        "airbyte:index/DestinationYellowbrickConfiguration:DestinationYellowbrickConfiguration": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "Name of the database.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname of the database.\n"
                },
                "jdbcUrlParams": {
                    "type": "string",
                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '\u0026'. (example: key1=value1\u0026key2=value2\u0026key3=value3).\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password associated with the username.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port of the database. Default: 5432\n"
                },
                "schema": {
                    "type": "string",
                    "description": "The default schema tables are written to if the source does not specify a namespace. The usual value for this field is \"public\". Default: \"public\"\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Encrypt data using SSL. When activating SSL, please select one of the connection modes. Default: false\n"
                },
                "sslMode": {
                    "$ref": "#/types/airbyte:index/DestinationYellowbrickConfigurationSslMode:DestinationYellowbrickConfigurationSslMode",
                    "description": "SSL connection modes. \n \u003cb\u003edisable\u003c/b\u003e - Chose this mode to disable encryption of communication between Airbyte and destination database\n \u003cb\u003eallow\u003c/b\u003e - Chose this mode to enable encryption only when required by the source database\n \u003cb\u003eprefer\u003c/b\u003e - Chose this mode to allow unencrypted connection only if the source database does not support encryption\n \u003cb\u003erequire\u003c/b\u003e - Chose this mode to always require encryption. If the source database server does not support encryption, connection will fail\n  \u003cb\u003everify-ca\u003c/b\u003e - Chose this mode to always require encryption and to verify that the source database server has a valid SSL certificate\n  \u003cb\u003everify-full\u003c/b\u003e - This is the most secure mode. Chose this mode to always require encryption and to verify the identity of the source database server\n See more information - \u003ca href=\"https://jdbc.postgresql.org/documentation/head/ssl-client.html\"\u003e in the docs\u003c/a\u003e.\n"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/DestinationYellowbrickConfigurationTunnelMethod:DestinationYellowbrickConfigurationTunnelMethod",
                    "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username to use to access the database.\n"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "database",
                        "host",
                        "port",
                        "schema",
                        "ssl",
                        "username"
                    ]
                }
            }
        },
        "airbyte:index/DestinationYellowbrickConfigurationSslMode:DestinationYellowbrickConfigurationSslMode": {
            "properties": {
                "allow": {
                    "$ref": "#/types/airbyte:index/DestinationYellowbrickConfigurationSslModeAllow:DestinationYellowbrickConfigurationSslModeAllow",
                    "description": "Allow SSL mode.\n"
                },
                "disable": {
                    "$ref": "#/types/airbyte:index/DestinationYellowbrickConfigurationSslModeDisable:DestinationYellowbrickConfigurationSslModeDisable",
                    "description": "Disable SSL.\n"
                },
                "prefer": {
                    "$ref": "#/types/airbyte:index/DestinationYellowbrickConfigurationSslModePrefer:DestinationYellowbrickConfigurationSslModePrefer",
                    "description": "Prefer SSL mode.\n"
                },
                "require": {
                    "$ref": "#/types/airbyte:index/DestinationYellowbrickConfigurationSslModeRequire:DestinationYellowbrickConfigurationSslModeRequire",
                    "description": "Require SSL mode.\n"
                },
                "verifyCa": {
                    "$ref": "#/types/airbyte:index/DestinationYellowbrickConfigurationSslModeVerifyCa:DestinationYellowbrickConfigurationSslModeVerifyCa",
                    "description": "Verify-ca SSL mode.\n"
                },
                "verifyFull": {
                    "$ref": "#/types/airbyte:index/DestinationYellowbrickConfigurationSslModeVerifyFull:DestinationYellowbrickConfigurationSslModeVerifyFull",
                    "description": "Verify-full SSL mode.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationYellowbrickConfigurationSslModeAllow:DestinationYellowbrickConfigurationSslModeAllow": {
            "type": "object"
        },
        "airbyte:index/DestinationYellowbrickConfigurationSslModeDisable:DestinationYellowbrickConfigurationSslModeDisable": {
            "type": "object"
        },
        "airbyte:index/DestinationYellowbrickConfigurationSslModePrefer:DestinationYellowbrickConfigurationSslModePrefer": {
            "type": "object"
        },
        "airbyte:index/DestinationYellowbrickConfigurationSslModeRequire:DestinationYellowbrickConfigurationSslModeRequire": {
            "type": "object"
        },
        "airbyte:index/DestinationYellowbrickConfigurationSslModeVerifyCa:DestinationYellowbrickConfigurationSslModeVerifyCa": {
            "properties": {
                "caCertificate": {
                    "type": "string",
                    "description": "CA certificate\n"
                },
                "clientKeyPassword": {
                    "type": "string",
                    "description": "Password for keystorage. This field is optional. If you do not add it - the password will be generated automatically.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "caCertificate"
            ]
        },
        "airbyte:index/DestinationYellowbrickConfigurationSslModeVerifyFull:DestinationYellowbrickConfigurationSslModeVerifyFull": {
            "properties": {
                "caCertificate": {
                    "type": "string",
                    "description": "CA certificate\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "Client certificate\n"
                },
                "clientKey": {
                    "type": "string",
                    "description": "Client key\n",
                    "secret": true
                },
                "clientKeyPassword": {
                    "type": "string",
                    "description": "Password for keystorage. This field is optional. If you do not add it - the password will be generated automatically.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey"
            ]
        },
        "airbyte:index/DestinationYellowbrickConfigurationTunnelMethod:DestinationYellowbrickConfigurationTunnelMethod": {
            "properties": {
                "noTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationYellowbrickConfigurationTunnelMethodNoTunnel:DestinationYellowbrickConfigurationTunnelMethodNoTunnel"
                },
                "passwordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationYellowbrickConfigurationTunnelMethodPasswordAuthentication:DestinationYellowbrickConfigurationTunnelMethodPasswordAuthentication"
                },
                "sshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationYellowbrickConfigurationTunnelMethodSshKeyAuthentication:DestinationYellowbrickConfigurationTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationYellowbrickConfigurationTunnelMethodNoTunnel:DestinationYellowbrickConfigurationTunnelMethodNoTunnel": {
            "type": "object"
        },
        "airbyte:index/DestinationYellowbrickConfigurationTunnelMethodPasswordAuthentication:DestinationYellowbrickConfigurationTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host\n"
                },
                "tunnelUserPassword": {
                    "type": "string",
                    "description": "OS-level password for logging into the jump server host\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser",
                        "tunnelUserPassword"
                    ]
                }
            }
        },
        "airbyte:index/DestinationYellowbrickConfigurationTunnelMethodSshKeyAuthentication:DestinationYellowbrickConfigurationTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string",
                    "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )\n",
                    "secret": true
                },
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host.\n"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "sshKey",
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser"
                    ]
                }
            }
        },
        "airbyte:index/SourceAhaConfiguration:SourceAhaConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API Key\n",
                    "secret": true
                },
                "url": {
                    "type": "string",
                    "description": "URL\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "url"
            ]
        },
        "airbyte:index/SourceAircallConfiguration:SourceAircallConfiguration": {
            "properties": {
                "apiId": {
                    "type": "string",
                    "description": "App ID found at settings https://dashboard.aircall.io/integrations/api-keys\n"
                },
                "apiToken": {
                    "type": "string",
                    "description": "App token found at settings (Ref- https://dashboard.aircall.io/integrations/api-keys)\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "Date time filter for incremental filter, Specify which date to extract from.\n"
                }
            },
            "type": "object",
            "required": [
                "apiId",
                "apiToken",
                "startDate"
            ]
        },
        "airbyte:index/SourceAirtableConfiguration:SourceAirtableConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceAirtableConfigurationCredentials:SourceAirtableConfigurationCredentials"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceAirtableConfigurationCredentials:SourceAirtableConfigurationCredentials": {
            "properties": {
                "oAuth20": {
                    "$ref": "#/types/airbyte:index/SourceAirtableConfigurationCredentialsOAuth20:SourceAirtableConfigurationCredentialsOAuth20"
                },
                "personalAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceAirtableConfigurationCredentialsPersonalAccessToken:SourceAirtableConfigurationCredentialsPersonalAccessToken"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceAirtableConfigurationCredentialsOAuth20:SourceAirtableConfigurationCredentialsOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access Token for making authenticated requests.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "The client ID of the Airtable developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret the Airtable developer application.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The key to refresh the expired access token.\n",
                    "secret": true
                },
                "tokenExpiryDate": {
                    "type": "string",
                    "description": "The date-time when the access token should be refreshed.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceAirtableConfigurationCredentialsPersonalAccessToken:SourceAirtableConfigurationCredentialsPersonalAccessToken": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "The Personal Access Token for the Airtable account. See the \u003ca href=\"https://airtable.com/developers/web/guides/personal-access-tokens\"\u003eSupport Guide\u003c/a\u003e for more information on how to obtain this token.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceAmazonAdsConfiguration:SourceAmazonAdsConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The client ID of your Amazon Ads developer application. See the \u003ca href=\"https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens#retrieve-your-client-id-and-client-secret\"\u003edocs\u003c/a\u003e for more information.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret of your Amazon Ads developer application. See the \u003ca href=\"https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens#retrieve-your-client-id-and-client-secret\"\u003edocs\u003c/a\u003e for more information.\n"
                },
                "lookBackWindow": {
                    "type": "integer",
                    "description": "The amount of days to go back in time to get the updated data from Amazon Ads. Default: 3\n"
                },
                "marketplaceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Marketplace IDs you want to fetch data for. Note: If Profile IDs are also selected, profiles will be selected if they match the Profile ID OR the Marketplace ID.\n"
                },
                "profiles": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Profile IDs you want to fetch data for. The Amazon Ads source connector supports only profiles with seller and vendor type, profiles with agency type will be ignored. See \u003ca href=\"https://advertising.amazon.com/API/docs/en-us/concepts/authorization/profiles\"\u003edocs\u003c/a\u003e for more details. Note: If Marketplace IDs are also selected, profiles will be selected if they match the Profile ID OR the Marketplace ID.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Amazon Ads refresh token. See the \u003ca href=\"https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens\"\u003edocs\u003c/a\u003e for more information on how to obtain this token.\n",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "description": "Region to pull data from (EU/NA/FE). See \u003ca href=\"https://advertising.amazon.com/API/docs/en-us/info/api-overview#api-endpoints\"\u003edocs\u003c/a\u003e for more details. must be one of [\"NA\", \"EU\", \"FE\"]; Default: \"NA\"\n"
                },
                "reportRecordTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional configuration which accepts an array of string of record types. Leave blank for default behaviour to pull all report types. Use this config option only if you want to pull specific report type(s). See \u003ca href=\"https://advertising.amazon.com/API/docs/en-us/reporting/v2/report-types\"\u003edocs\u003c/a\u003e for more details\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The Start date for collecting reports, should not be more than 60 days in the past. In YYYY-MM-DD format\n"
                },
                "stateFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Reflects the state of the Display, Product, and Brand Campaign streams as enabled, paused, or archived. If you do not populate this field, it will be ignored completely.\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "clientId",
                        "clientSecret",
                        "lookBackWindow",
                        "refreshToken",
                        "region"
                    ]
                }
            }
        },
        "airbyte:index/SourceAmazonSellerPartnerConfiguration:SourceAmazonSellerPartnerConfiguration": {
            "properties": {
                "accountType": {
                    "type": "string",
                    "description": "Type of the Account you're going to authorize the Airbyte application by. must be one of [\"Seller\", \"Vendor\"]; Default: \"Seller\"\n"
                },
                "awsEnvironment": {
                    "type": "string",
                    "description": "Select the AWS Environment. must be one of [\"PRODUCTION\", \"SANDBOX\"]; Default: \"PRODUCTION\"\n"
                },
                "lwaAppId": {
                    "type": "string",
                    "description": "Your Login with Amazon Client ID.\n"
                },
                "lwaClientSecret": {
                    "type": "string",
                    "description": "Your Login with Amazon Client Secret.\n"
                },
                "periodInDays": {
                    "type": "integer",
                    "description": "For syncs spanning a large date range, this option is used to request data in a smaller fixed window to improve sync reliability. This time window can be configured granularly by day. Default: 90\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The Refresh Token obtained via OAuth flow authorization.\n",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "description": "Select the AWS Region. must be one of [\"AE\", \"AU\", \"BE\", \"BR\", \"CA\", \"DE\", \"EG\", \"ES\", \"FR\", \"GB\", \"IN\", \"IT\", \"JP\", \"MX\", \"NL\", \"PL\", \"SA\", \"SE\", \"SG\", \"TR\", \"UK\", \"US\"]; Default: \"US\"\n"
                },
                "replicationEndDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data after this date will not be replicated.\n"
                },
                "replicationStartDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. If start date is not provided, the date 2 years ago from today will be used.\n"
                },
                "reportOptionsLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceAmazonSellerPartnerConfigurationReportOptionsList:SourceAmazonSellerPartnerConfigurationReportOptionsList"
                    },
                    "description": "Additional information passed to reports. This varies by report type.\n"
                }
            },
            "type": "object",
            "required": [
                "lwaAppId",
                "lwaClientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accountType",
                        "awsEnvironment",
                        "lwaAppId",
                        "lwaClientSecret",
                        "periodInDays",
                        "refreshToken",
                        "region"
                    ]
                }
            }
        },
        "airbyte:index/SourceAmazonSellerPartnerConfigurationReportOptionsList:SourceAmazonSellerPartnerConfigurationReportOptionsList": {
            "properties": {
                "optionsLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceAmazonSellerPartnerConfigurationReportOptionsListOptionsList:SourceAmazonSellerPartnerConfigurationReportOptionsListOptionsList"
                    },
                    "description": "List of options\n"
                },
                "streamName": {
                    "type": "string",
                    "description": "must be one of [\"GET_AFN_INVENTORY_DATA\", \"GET_AFN_INVENTORY_DATA_BY_COUNTRY\", \"GET_AMAZON_FULFILLED_SHIPMENTS_DATA_GENERAL\", \"GET_FBA_ESTIMATED_FBA_FEES_TXT_DATA\", \"GET_FBA_FULFILLMENT_CUSTOMER_RETURNS_DATA\", \"GET_FBA_FULFILLMENT_CUSTOMER_SHIPMENT_PROMOTION_DATA\", \"GET_FBA_FULFILLMENT_CUSTOMER_SHIPMENT_REPLACEMENT_DATA\", \"GET_FBA_FULFILLMENT_REMOVAL_ORDER_DETAIL_DATA\", \"GET_FBA_FULFILLMENT_REMOVAL_SHIPMENT_DETAIL_DATA\", \"GET_FBA_INVENTORY_PLANNING_DATA\", \"GET_FBA_MYI_UNSUPPRESSED_INVENTORY_DATA\", \"GET_FBA_REIMBURSEMENTS_DATA\", \"GET_FBA_SNS_FORECAST_DATA\", \"GET_FBA_SNS_PERFORMANCE_DATA\", \"GET_FBA_STORAGE_FEE_CHARGES_DATA\", \"GET_FLAT_FILE_ACTIONABLE_ORDER_DATA_SHIPPING\", \"GET_FLAT_FILE_ALL_ORDERS_DATA_BY_LAST_UPDATE_GENERAL\", \"GET_FLAT_FILE_ALL_ORDERS_DATA_BY_ORDER_DATE_GENERAL\", \"GET_FLAT_FILE_ARCHIVED_ORDERS_DATA_BY_ORDER_DATE\", \"GET_FLAT_FILE_OPEN_LISTINGS_DATA\", \"GET_FLAT_FILE_RETURNS_DATA_BY_RETURN_DATE\", \"GET_LEDGER_DETAIL_VIEW_DATA\", \"GET_LEDGER_SUMMARY_VIEW_DATA\", \"GET_MERCHANT_CANCELLED_LISTINGS_DATA\", \"GET_MERCHANT_LISTINGS_ALL_DATA\", \"GET_MERCHANT_LISTINGS_DATA\", \"GET_MERCHANT_LISTINGS_DATA_BACK_COMPAT\", \"GET_MERCHANT_LISTINGS_INACTIVE_DATA\", \"GET_MERCHANTS_LISTINGS_FYP_REPORT\", \"GET_ORDER_REPORT_DATA_SHIPPING\", \"GET_RESTOCK_INVENTORY_RECOMMENDATIONS_REPORT\", \"GET_SELLER_FEEDBACK_DATA\", \"GET_STRANDED_INVENTORY_UI_DATA\", \"GET_V2_SETTLEMENT_REPORT_DATA_FLAT_FILE\", \"GET_XML_ALL_ORDERS_DATA_BY_ORDER_DATE_GENERAL\", \"GET_XML_BROWSE_TREE_DATA\"]\n"
                }
            },
            "type": "object",
            "required": [
                "optionsLists",
                "streamName"
            ]
        },
        "airbyte:index/SourceAmazonSellerPartnerConfigurationReportOptionsListOptionsList:SourceAmazonSellerPartnerConfigurationReportOptionsListOptionsList": {
            "properties": {
                "optionName": {
                    "type": "string"
                },
                "optionValue": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "optionName",
                "optionValue"
            ]
        },
        "airbyte:index/SourceAmazonSqsConfiguration:SourceAmazonSqsConfiguration": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "The Access Key ID of the AWS IAM Role to use for pulling messages\n",
                    "secret": true
                },
                "attributesToReturn": {
                    "type": "string",
                    "description": "Comma separated list of Mesage Attribute names to return\n"
                },
                "deleteMessages": {
                    "type": "boolean",
                    "description": "If Enabled, messages will be deleted from the SQS Queue after being read. If Disabled, messages are left in the queue and can be read more than once. WARNING: Enabling this option can result in data loss in cases of failure, use with caution, see documentation for more detail. . Default: false\n"
                },
                "maxBatchSize": {
                    "type": "integer",
                    "description": "Max amount of messages to get in one batch (10 max)\n"
                },
                "maxWaitTime": {
                    "type": "integer",
                    "description": "Max amount of time in seconds to wait for messages in a single poll (20 max)\n"
                },
                "queueUrl": {
                    "type": "string",
                    "description": "URL of the SQS Queue\n"
                },
                "region": {
                    "type": "string",
                    "description": "AWS Region of the SQS Queue. must be one of [\"af-south-1\", \"ap-east-1\", \"ap-northeast-1\", \"ap-northeast-2\", \"ap-northeast-3\", \"ap-south-1\", \"ap-south-2\", \"ap-southeast-1\", \"ap-southeast-2\", \"ap-southeast-3\", \"ap-southeast-4\", \"ca-central-1\", \"ca-west-1\", \"cn-north-1\", \"cn-northwest-1\", \"eu-central-1\", \"eu-central-2\", \"eu-north-1\", \"eu-south-1\", \"eu-south-2\", \"eu-west-1\", \"eu-west-2\", \"eu-west-3\", \"il-central-1\", \"me-central-1\", \"me-south-1\", \"sa-east-1\", \"us-east-1\", \"us-east-2\", \"us-gov-east-1\", \"us-gov-west-1\", \"us-west-1\", \"us-west-2\"]\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The Secret Key of the AWS IAM Role to use for pulling messages\n",
                    "secret": true
                },
                "visibilityTimeout": {
                    "type": "integer",
                    "description": "Modify the Visibility Timeout of the individual message from the Queue's default (seconds).\n"
                }
            },
            "type": "object",
            "required": [
                "queueUrl",
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deleteMessages",
                        "queueUrl",
                        "region"
                    ]
                }
            }
        },
        "airbyte:index/SourceAmplitudeConfiguration:SourceAmplitudeConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Amplitude API Key. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/amplitude#setup-guide\"\u003esetup guide\u003c/a\u003e for more information on how to obtain this key.\n",
                    "secret": true
                },
                "dataRegion": {
                    "type": "string",
                    "description": "Amplitude data region server. must be one of [\"Standard Server\", \"EU Residency Server\"]; Default: \"Standard Server\"\n"
                },
                "requestTimeRange": {
                    "type": "integer",
                    "description": "According to \u003ca href=\"https://www.docs.developers.amplitude.com/analytics/apis/export-api/#considerations\"\u003eConsiderations\u003c/a\u003e too big time range in request can cause a timeout error. In this case, set shorter time interval in hours. Default: 24\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Amplitude Secret Key. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/amplitude#setup-guide\"\u003esetup guide\u003c/a\u003e for more information on how to obtain this key.\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2021-01-25T00:00:00Z. Any data before this date will not be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "secretKey",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "dataRegion",
                        "requestTimeRange",
                        "secretKey",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourceApifyDatasetConfiguration:SourceApifyDatasetConfiguration": {
            "properties": {
                "datasetId": {
                    "type": "string",
                    "description": "ID of the dataset you would like to load to Airbyte. In Apify Console, you can view your datasets in the \u003ca href=\"https://console.apify.com/storage/datasets\"\u003eStorage section under the Datasets tab\u003c/a\u003e after you login. See the \u003ca href=\"https://docs.apify.com/platform/storage/dataset\"\u003eApify Docs\u003c/a\u003e for more information.\n"
                },
                "token": {
                    "type": "string",
                    "description": "Personal API token of your Apify account. In Apify Console, you can find your API token in the \u003ca href=\"https://console.apify.com/account/integrations\"\u003eSettings section under the Integrations tab\u003c/a\u003e after you login. See the \u003ca href=\"https://docs.apify.com/platform/integrations/api#api-token\"\u003eApify Docs\u003c/a\u003e for more information.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "datasetId",
                "token"
            ]
        },
        "airbyte:index/SourceAppfollowConfiguration:SourceAppfollowConfiguration": {
            "properties": {
                "apiSecret": {
                    "type": "string",
                    "description": "API Key provided by Appfollow\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceAsanaConfiguration:SourceAsanaConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceAsanaConfigurationCredentials:SourceAsanaConfigurationCredentials",
                    "description": "Choose how to authenticate to Github\n"
                },
                "organizationExportIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Globally unique identifiers for the organization exports\n"
                },
                "testMode": {
                    "type": "boolean",
                    "description": "This flag is used for testing purposes for certain streams that return a lot of data. This flag is not meant to be enabled for prod.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceAsanaConfigurationCredentials:SourceAsanaConfigurationCredentials": {
            "properties": {
                "authenticateViaAsanaOauth": {
                    "$ref": "#/types/airbyte:index/SourceAsanaConfigurationCredentialsAuthenticateViaAsanaOauth:SourceAsanaConfigurationCredentialsAuthenticateViaAsanaOauth"
                },
                "authenticateWithPersonalAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceAsanaConfigurationCredentialsAuthenticateWithPersonalAccessToken:SourceAsanaConfigurationCredentialsAuthenticateWithPersonalAccessToken"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceAsanaConfigurationCredentialsAuthenticateViaAsanaOauth:SourceAsanaConfigurationCredentialsAuthenticateViaAsanaOauth": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceAsanaConfigurationCredentialsAuthenticateWithPersonalAccessToken:SourceAsanaConfigurationCredentialsAuthenticateWithPersonalAccessToken": {
            "properties": {
                "personalAccessToken": {
                    "type": "string",
                    "description": "Asana Personal Access Token (generate yours \u003ca href=\"https://app.asana.com/0/developer-console\"\u003ehere\u003c/a\u003e).\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "personalAccessToken"
            ]
        },
        "airbyte:index/SourceAuth0Configuration:SourceAuth0Configuration": {
            "properties": {
                "baseUrl": {
                    "type": "string",
                    "description": "The Authentication API is served over HTTPS. All URLs referenced in the documentation have the following base `https://YOUR_DOMAIN`\n"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceAuth0ConfigurationCredentials:SourceAuth0ConfigurationCredentials"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. Default: \"2023-08-05T00:43:59.244Z\"\n"
                }
            },
            "type": "object",
            "required": [
                "baseUrl",
                "credentials"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "baseUrl",
                        "credentials",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourceAuth0ConfigurationCredentials:SourceAuth0ConfigurationCredentials": {
            "properties": {
                "oAuth2AccessToken": {
                    "$ref": "#/types/airbyte:index/SourceAuth0ConfigurationCredentialsOAuth2AccessToken:SourceAuth0ConfigurationCredentialsOAuth2AccessToken"
                },
                "oAuth2ConfidentialApplication": {
                    "$ref": "#/types/airbyte:index/SourceAuth0ConfigurationCredentialsOAuth2ConfidentialApplication:SourceAuth0ConfigurationCredentialsOAuth2ConfidentialApplication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceAuth0ConfigurationCredentialsOAuth2AccessToken:SourceAuth0ConfigurationCredentialsOAuth2AccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Also called \u003ca href=\"https://auth0.com/docs/secure/tokens/access-tokens/get-management-api-access-tokens-for-testing\"\u003eAPI Access Token \u003c/a\u003e The access token used to call the Auth0 Management API Token. It's a JWT that contains specific grant permissions knowns as scopes.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceAuth0ConfigurationCredentialsOAuth2ConfidentialApplication:SourceAuth0ConfigurationCredentialsOAuth2ConfidentialApplication": {
            "properties": {
                "audience": {
                    "type": "string",
                    "description": "The audience for the token, which is your API. You can find this in the Identifier field on your  \u003ca href=\"https://manage.auth0.com/#/apis\"\u003eAPI's settings tab\u003c/a\u003e\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Your application's Client ID. You can find this value on the \u003ca href=\"https://manage.auth0.com/#/applications\"\u003eapplication's settings tab\u003c/a\u003e after you login the admin portal.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Your application's Client Secret. You can find this value on the \u003ca href=\"https://manage.auth0.com/#/applications\"\u003eapplication's settings tab\u003c/a\u003e after you login the admin portal.\n"
                }
            },
            "type": "object",
            "required": [
                "audience",
                "clientId",
                "clientSecret"
            ]
        },
        "airbyte:index/SourceAwsCloudtrailConfiguration:SourceAwsCloudtrailConfiguration": {
            "properties": {
                "awsKeyId": {
                    "type": "string",
                    "description": "AWS CloudTrail Access Key ID. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/aws-cloudtrail\"\u003edocs\u003c/a\u003e for more information on how to obtain this key.\n",
                    "secret": true
                },
                "awsRegionName": {
                    "type": "string",
                    "description": "The default AWS Region to use, for example, us-west-1 or us-west-2. When specifying a Region inline during client initialization, this property is named region_name.\n"
                },
                "awsSecretKey": {
                    "type": "string",
                    "description": "AWS CloudTrail Access Key ID. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/aws-cloudtrail\"\u003edocs\u003c/a\u003e for more information on how to obtain this key.\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "The date you would like to replicate data. Data in AWS CloudTrail is available for last 90 days only. Format: YYYY-MM-DD. Default: \"1970-01-01\"\n"
                }
            },
            "type": "object",
            "required": [
                "awsKeyId",
                "awsRegionName",
                "awsSecretKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "awsKeyId",
                        "awsRegionName",
                        "awsSecretKey",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourceAzureBlobStorageConfiguration:SourceAzureBlobStorageConfiguration": {
            "properties": {
                "azureBlobStorageAccountName": {
                    "type": "string",
                    "description": "The account's name of the Azure Blob Storage.\n"
                },
                "azureBlobStorageContainerName": {
                    "type": "string",
                    "description": "The name of the Azure blob storage container.\n"
                },
                "azureBlobStorageEndpoint": {
                    "type": "string",
                    "description": "This is Azure Blob Storage endpoint domain name. Leave default value (or leave it empty if run container from command line) to use Microsoft native from example.\n"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfigurationCredentials:SourceAzureBlobStorageConfigurationCredentials",
                    "description": "Credentials for connecting to the Azure Blob Storage\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00.000000Z. Any file modified before this date will not be replicated.\n"
                },
                "streams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfigurationStream:SourceAzureBlobStorageConfigurationStream"
                    },
                    "description": "Each instance of this configuration defines a \u003ca href=\"https://docs.airbyte.com/cloud/core-concepts#stream\"\u003estream\u003c/a\u003e. Use this to define which files belong in the stream, their format, and how they should be parsed and validated. When sending data to warehouse destination such as Snowflake or BigQuery, each stream is a separate table.\n"
                }
            },
            "type": "object",
            "required": [
                "azureBlobStorageAccountName",
                "azureBlobStorageContainerName",
                "credentials",
                "streams"
            ]
        },
        "airbyte:index/SourceAzureBlobStorageConfigurationCredentials:SourceAzureBlobStorageConfigurationCredentials": {
            "properties": {
                "authenticateViaOauth2": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfigurationCredentialsAuthenticateViaOauth2:SourceAzureBlobStorageConfigurationCredentialsAuthenticateViaOauth2"
                },
                "authenticateViaStorageAccountKey": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfigurationCredentialsAuthenticateViaStorageAccountKey:SourceAzureBlobStorageConfigurationCredentialsAuthenticateViaStorageAccountKey"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceAzureBlobStorageConfigurationCredentialsAuthenticateViaOauth2:SourceAzureBlobStorageConfigurationCredentialsAuthenticateViaOauth2": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Client ID of your Microsoft developer application\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client Secret of your Microsoft developer application\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Refresh Token of your Microsoft developer application\n",
                    "secret": true
                },
                "tenantId": {
                    "type": "string",
                    "description": "Tenant ID of the Microsoft Azure Application user\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken",
                "tenantId"
            ]
        },
        "airbyte:index/SourceAzureBlobStorageConfigurationCredentialsAuthenticateViaStorageAccountKey:SourceAzureBlobStorageConfigurationCredentialsAuthenticateViaStorageAccountKey": {
            "properties": {
                "azureBlobStorageAccountKey": {
                    "type": "string",
                    "description": "The Azure blob storage account key.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "azureBlobStorageAccountKey"
            ]
        },
        "airbyte:index/SourceAzureBlobStorageConfigurationStream:SourceAzureBlobStorageConfigurationStream": {
            "properties": {
                "daysToSyncIfHistoryIsFull": {
                    "type": "integer",
                    "description": "When the state history of the file store is full, syncs will only read files that were last modified in the provided day range. Default: 3\n"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfigurationStreamFormat:SourceAzureBlobStorageConfigurationStreamFormat",
                    "description": "The configuration options that are used to alter how to read incoming files that deviate from the standard formatting.\n"
                },
                "globs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The pattern used to specify which files should be selected from the file system. For more information on glob pattern matching look \u003ca href=\"https://en.wikipedia.org/wiki/Glob_(programming)\"\u003ehere\u003c/a\u003e.\n"
                },
                "inputSchema": {
                    "type": "string",
                    "description": "The schema that will be used to validate records extracted from the file. This will override the stream schema that is auto-detected from incoming files.\n"
                },
                "legacyPrefix": {
                    "type": "string",
                    "description": "The path prefix configured in v3 versions of the S3 connector. This option is deprecated in favor of a single glob.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the stream.\n"
                },
                "primaryKey": {
                    "type": "string",
                    "description": "The column or columns (for a composite key) that serves as the unique identifier of a record. If empty, the primary key will default to the parser's default primary key.\n",
                    "secret": true
                },
                "schemaless": {
                    "type": "boolean",
                    "description": "When enabled, syncs will not validate or structure records against the stream's schema. Default: false\n"
                },
                "validationPolicy": {
                    "type": "string",
                    "description": "The name of the validation policy that dictates sync behavior when a record does not adhere to the stream schema. must be one of [\"Emit Record\", \"Skip Record\", \"Wait for Discover\"]; Default: \"Emit Record\"\n"
                }
            },
            "type": "object",
            "required": [
                "format",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "daysToSyncIfHistoryIsFull",
                        "format",
                        "name",
                        "schemaless",
                        "validationPolicy"
                    ]
                }
            }
        },
        "airbyte:index/SourceAzureBlobStorageConfigurationStreamFormat:SourceAzureBlobStorageConfigurationStreamFormat": {
            "properties": {
                "avroFormat": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatAvroFormat:SourceAzureBlobStorageConfigurationStreamFormatAvroFormat"
                },
                "csvFormat": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatCsvFormat:SourceAzureBlobStorageConfigurationStreamFormatCsvFormat"
                },
                "documentFileTypeFormatExperimental": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatDocumentFileTypeFormatExperimental:SourceAzureBlobStorageConfigurationStreamFormatDocumentFileTypeFormatExperimental",
                    "description": "Extract text from document formats (.pdf, .docx, .md, .pptx) and emit as one record per file.\n"
                },
                "jsonlFormat": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatJsonlFormat:SourceAzureBlobStorageConfigurationStreamFormatJsonlFormat"
                },
                "parquetFormat": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatParquetFormat:SourceAzureBlobStorageConfigurationStreamFormatParquetFormat"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatAvroFormat:SourceAzureBlobStorageConfigurationStreamFormatAvroFormat": {
            "properties": {
                "doubleAsString": {
                    "type": "boolean",
                    "description": "Whether to convert double fields to strings. This is recommended if you have decimal numbers with a high degree of precision because there can be a loss precision when handling floating point numbers. Default: false\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "doubleAsString"
                    ]
                }
            }
        },
        "airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatCsvFormat:SourceAzureBlobStorageConfigurationStreamFormatCsvFormat": {
            "properties": {
                "delimiter": {
                    "type": "string",
                    "description": "The character delimiting individual cells in the CSV data. This may only be a 1-character string. For tab-delimited data enter '\\t'. Default: \",\"\n"
                },
                "doubleQuote": {
                    "type": "boolean",
                    "description": "Whether two quotes in a quoted CSV value denote a single quote in the data. Default: true\n"
                },
                "encoding": {
                    "type": "string",
                    "description": "The character encoding of the CSV data. Leave blank to default to \u003cstrong\u003eUTF8\u003c/strong\u003e. See \u003ca href=\"https://docs.python.org/3/library/codecs.html#standard-encodings\" target=\"_blank\"\u003elist of python encodings\u003c/a\u003e for allowable options. Default: \"utf8\"\n"
                },
                "escapeChar": {
                    "type": "string",
                    "description": "The character used for escaping special characters. To disallow escaping, leave this field blank.\n"
                },
                "falseValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as false values.\n"
                },
                "headerDefinition": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatCsvFormatHeaderDefinition:SourceAzureBlobStorageConfigurationStreamFormatCsvFormatHeaderDefinition",
                    "description": "How headers will be defined. `User Provided` assumes the CSV does not have a header row and uses the headers provided and `Autogenerated` assumes the CSV does not have a header row and the CDK will generate headers using for `f{i}` where `i` is the index starting from 0. Else, the default behavior is to use the header from the CSV file. If a user wants to autogenerate or provide column names for a CSV having headers, they can skip rows.\n"
                },
                "ignoreErrorsOnFieldsMismatch": {
                    "type": "boolean",
                    "description": "Whether to ignore errors that occur when the number of fields in the CSV does not match the number of columns in the schema. Default: false\n"
                },
                "inferenceType": {
                    "type": "string",
                    "description": "How to infer the types of the columns. If none, inference default to strings. must be one of [\"None\", \"Primitive Types Only\"]; Default: \"None\"\n"
                },
                "nullValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as null values. For example, if the value 'NA' should be interpreted as null, enter 'NA' in this field.\n"
                },
                "quoteChar": {
                    "type": "string",
                    "description": "The character used for quoting CSV values. To disallow quoting, make this field blank. Default: \"\\\"\"\n"
                },
                "skipRowsAfterHeader": {
                    "type": "integer",
                    "description": "The number of rows to skip after the header row. Default: 0\n"
                },
                "skipRowsBeforeHeader": {
                    "type": "integer",
                    "description": "The number of rows to skip before the header row. For example, if the header row is on the 3rd row, enter 2 in this field. Default: 0\n"
                },
                "stringsCanBeNull": {
                    "type": "boolean",
                    "description": "Whether strings can be interpreted as null values. If true, strings that match the null_values set will be interpreted as null. If false, strings that match the null_values set will be interpreted as the string itself. Default: true\n"
                },
                "trueValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as true values.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "delimiter",
                        "doubleQuote",
                        "encoding",
                        "ignoreErrorsOnFieldsMismatch",
                        "inferenceType",
                        "quoteChar",
                        "skipRowsAfterHeader",
                        "skipRowsBeforeHeader",
                        "stringsCanBeNull"
                    ]
                }
            }
        },
        "airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatCsvFormatHeaderDefinition:SourceAzureBlobStorageConfigurationStreamFormatCsvFormatHeaderDefinition": {
            "properties": {
                "autogenerated": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated:SourceAzureBlobStorageConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated"
                },
                "fromCsv": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv:SourceAzureBlobStorageConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv"
                },
                "userProvided": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided:SourceAzureBlobStorageConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated:SourceAzureBlobStorageConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated": {
            "type": "object"
        },
        "airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv:SourceAzureBlobStorageConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv": {
            "type": "object"
        },
        "airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided:SourceAzureBlobStorageConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided": {
            "properties": {
                "columnNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The column names that will be used while emitting the CSV records\n"
                }
            },
            "type": "object",
            "required": [
                "columnNames"
            ]
        },
        "airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatDocumentFileTypeFormatExperimental:SourceAzureBlobStorageConfigurationStreamFormatDocumentFileTypeFormatExperimental": {
            "properties": {
                "processing": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing:SourceAzureBlobStorageConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing",
                    "description": "Processing configuration\n"
                },
                "skipUnprocessableFiles": {
                    "type": "boolean",
                    "description": "If true, skip files that cannot be parsed and pass the error message along as the _ab_source_file_parse_error field. If false, fail the sync. Default: true\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "The strategy used to parse documents. `fast` extracts text directly from the document which doesn't work for all files. `ocr_only` is more reliable, but slower. `hi_res` is the most reliable, but requires an API key and a hosted instance of unstructured and can't be used with local mode. See the unstructured.io documentation for more details: https://unstructured-io.github.io/unstructured/core/partition.html#partition-pdf. must be one of [\"auto\", \"fast\", \"ocr_only\", \"hi_res\"]; Default: \"auto\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "skipUnprocessableFiles",
                        "strategy"
                    ]
                }
            }
        },
        "airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing:SourceAzureBlobStorageConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing": {
            "properties": {
                "local": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal:SourceAzureBlobStorageConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal",
                    "description": "Process files locally, supporting `fast` and `ocr` modes. This is the default option.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal:SourceAzureBlobStorageConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal": {
            "type": "object"
        },
        "airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatJsonlFormat:SourceAzureBlobStorageConfigurationStreamFormatJsonlFormat": {
            "type": "object"
        },
        "airbyte:index/SourceAzureBlobStorageConfigurationStreamFormatParquetFormat:SourceAzureBlobStorageConfigurationStreamFormatParquetFormat": {
            "properties": {
                "decimalAsFloat": {
                    "type": "boolean",
                    "description": "Whether to convert decimal fields to floats. There is a loss of precision when converting decimals to floats, so this is not recommended. Default: false\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "decimalAsFloat"
                    ]
                }
            }
        },
        "airbyte:index/SourceAzureTableConfiguration:SourceAzureTableConfiguration": {
            "properties": {
                "storageAccessKey": {
                    "type": "string",
                    "description": "Azure Table Storage Access Key. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/azure-table\"\u003edocs\u003c/a\u003e for more information on how to obtain this key.\n",
                    "secret": true
                },
                "storageAccountName": {
                    "type": "string",
                    "description": "The name of your storage account.\n"
                },
                "storageEndpointSuffix": {
                    "type": "string",
                    "description": "Azure Table Storage service account URL suffix. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/azure-table\"\u003edocs\u003c/a\u003e for more information on how to obtain endpoint suffix. Default: \"core.windows.net\"\n"
                }
            },
            "type": "object",
            "required": [
                "storageAccessKey",
                "storageAccountName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "storageAccessKey",
                        "storageAccountName",
                        "storageEndpointSuffix"
                    ]
                }
            }
        },
        "airbyte:index/SourceBambooHrConfiguration:SourceBambooHrConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Api key of bamboo hr\n",
                    "secret": true
                },
                "customReportsFields": {
                    "type": "string",
                    "description": "Comma-separated list of fields to include in custom reports. Default: \"\"\n"
                },
                "customReportsIncludeDefaultFields": {
                    "type": "boolean",
                    "description": "If true, the custom reports endpoint will include the default fields defined here: https://documentation.bamboohr.com/docs/list-of-field-names. Default: true\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Sub Domain of bamboo hr\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "subdomain"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "customReportsFields",
                        "customReportsIncludeDefaultFields",
                        "subdomain"
                    ]
                }
            }
        },
        "airbyte:index/SourceBigqueryConfiguration:SourceBigqueryConfiguration": {
            "properties": {
                "credentialsJson": {
                    "type": "string",
                    "description": "The contents of your Service Account Key JSON file. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/bigquery#setup-the-bigquery-source-in-airbyte\"\u003edocs\u003c/a\u003e for more information on how to obtain this key.\n"
                },
                "datasetId": {
                    "type": "string",
                    "description": "The dataset ID to search for tables and views. If you are only loading data from one dataset, setting this option could result in much faster schema discovery.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The GCP project ID for the project containing the target BigQuery dataset.\n"
                }
            },
            "type": "object",
            "required": [
                "credentialsJson",
                "projectId"
            ]
        },
        "airbyte:index/SourceBingAdsConfiguration:SourceBingAdsConfiguration": {
            "properties": {
                "accountNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceBingAdsConfigurationAccountName:SourceBingAdsConfigurationAccountName"
                    },
                    "description": "Predicates that will be used to sync data by specific accounts.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your Microsoft Advertising developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your Microsoft Advertising developer application. Default: \"\"\n"
                },
                "customReports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceBingAdsConfigurationCustomReport:SourceBingAdsConfigurationCustomReport"
                    },
                    "description": "You can add your Custom Bing Ads report by creating one.\n"
                },
                "developerToken": {
                    "type": "string",
                    "description": "Developer token associated with user. See more info \u003ca href=\"https://docs.microsoft.com/en-us/advertising/guides/get-started?view=bingads-13#get-developer-token\"\u003e in the docs\u003c/a\u003e.\n",
                    "secret": true
                },
                "lookbackWindow": {
                    "type": "integer",
                    "description": "Also known as attribution or conversion window. How far into the past to look for records (in days). If your conversion window has an hours/minutes granularity, round it up to the number of days exceeding. Used only for performance report streams in incremental mode without specified Reports Start Date. Default: 0\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Refresh Token to renew the expired Access Token.\n",
                    "secret": true
                },
                "reportsStartDate": {
                    "type": "string",
                    "description": "The start date from which to begin replicating report data. Any data generated before this date will not be replicated in reports. This is a UTC date in YYYY-MM-DD format. If not set, data from previous and current calendar year will be replicated.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The Tenant ID of your Microsoft Advertising developer application. Set this to \"common\" unless you know you need a different value. Default: \"common\"\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "developerToken",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "clientId",
                        "clientSecret",
                        "developerToken",
                        "lookbackWindow",
                        "refreshToken",
                        "tenantId"
                    ]
                }
            }
        },
        "airbyte:index/SourceBingAdsConfigurationAccountName:SourceBingAdsConfigurationAccountName": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Account Name is a string value for comparing with the specified predicate.\n"
                },
                "operator": {
                    "type": "string",
                    "description": "An Operator that will be used to filter accounts. The Contains predicate has features for matching words, matching inflectional forms of words, searching using wildcard characters, and searching using proximity. The Equals is used to return all rows where account name is equal(=) to the string that you provided. must be one of [\"Contains\", \"Equals\"]\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "operator"
            ]
        },
        "airbyte:index/SourceBingAdsConfigurationCustomReport:SourceBingAdsConfigurationCustomReport": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the custom report, this name would be used as stream name\n"
                },
                "reportAggregation": {
                    "type": "string",
                    "description": "A list of available aggregations. Default: \"[Hourly]\"\n"
                },
                "reportColumns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of available report object columns. You can find it in description of reporting object that you want to add to custom report.\n"
                },
                "reportingObject": {
                    "type": "string",
                    "description": "The name of the the object derives from the ReportRequest object. You can find it in Bing Ads Api docs - Reporting API - Reporting Data Objects. must be one of [\"AccountPerformanceReportRequest\", \"AdDynamicTextPerformanceReportRequest\", \"AdExtensionByAdReportRequest\", \"AdExtensionByKeywordReportRequest\", \"AdExtensionDetailReportRequest\", \"AdGroupPerformanceReportRequest\", \"AdPerformanceReportRequest\", \"AgeGenderAudienceReportRequest\", \"AudiencePerformanceReportRequest\", \"CallDetailReportRequest\", \"CampaignPerformanceReportRequest\", \"ConversionPerformanceReportRequest\", \"DestinationUrlPerformanceReportRequest\", \"DSAAutoTargetPerformanceReportRequest\", \"DSACategoryPerformanceReportRequest\", \"DSASearchQueryPerformanceReportRequest\", \"GeographicPerformanceReportRequest\", \"GoalsAndFunnelsReportRequest\", \"HotelDimensionPerformanceReportRequest\", \"HotelGroupPerformanceReportRequest\", \"KeywordPerformanceReportRequest\", \"NegativeKeywordConflictReportRequest\", \"ProductDimensionPerformanceReportRequest\", \"ProductMatchCountReportRequest\", \"ProductNegativeKeywordConflictReportRequest\", \"ProductPartitionPerformanceReportRequest\", \"ProductPartitionUnitPerformanceReportRequest\", \"ProductSearchQueryPerformanceReportRequest\", \"ProfessionalDemographicsAudienceReportRequest\", \"PublisherUsagePerformanceReportRequest\", \"SearchCampaignChangeHistoryReportRequest\", \"SearchQueryPerformanceReportRequest\", \"ShareOfVoiceReportRequest\", \"UserLocationPerformanceReportRequest\"]\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "reportColumns",
                "reportingObject"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "reportAggregation",
                        "reportColumns",
                        "reportingObject"
                    ]
                }
            }
        },
        "airbyte:index/SourceBraintreeConfiguration:SourceBraintreeConfiguration": {
            "properties": {
                "environment": {
                    "type": "string",
                    "description": "Environment specifies where the data will come from. must be one of [\"Development\", \"Sandbox\", \"Qa\", \"Production\"]\n"
                },
                "merchantId": {
                    "type": "string",
                    "description": "The unique identifier for your entire gateway account. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/braintree\"\u003edocs\u003c/a\u003e for more information on how to obtain this ID.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Braintree Private Key. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/braintree\"\u003edocs\u003c/a\u003e for more information on how to obtain this key.\n",
                    "secret": true
                },
                "publicKey": {
                    "type": "string",
                    "description": "Braintree Public Key. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/braintree\"\u003edocs\u003c/a\u003e for more information on how to obtain this key.\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "environment",
                "merchantId",
                "privateKey",
                "publicKey"
            ]
        },
        "airbyte:index/SourceBrazeConfiguration:SourceBrazeConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Braze REST API key\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "Rows after this date will be synced\n"
                },
                "url": {
                    "type": "string",
                    "description": "Braze REST API endpoint\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "startDate",
                "url"
            ]
        },
        "airbyte:index/SourceCartConfiguration:SourceCartConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceCartConfigurationCredentials:SourceCartConfigurationCredentials"
                },
                "startDate": {
                    "type": "string",
                    "description": "The date from which you'd like to replicate the data\n"
                }
            },
            "type": "object",
            "required": [
                "startDate"
            ]
        },
        "airbyte:index/SourceCartConfigurationCredentials:SourceCartConfigurationCredentials": {
            "properties": {
                "centralApiRouter": {
                    "$ref": "#/types/airbyte:index/SourceCartConfigurationCredentialsCentralApiRouter:SourceCartConfigurationCredentialsCentralApiRouter"
                },
                "singleStoreAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceCartConfigurationCredentialsSingleStoreAccessToken:SourceCartConfigurationCredentialsSingleStoreAccessToken"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceCartConfigurationCredentialsCentralApiRouter:SourceCartConfigurationCredentialsCentralApiRouter": {
            "properties": {
                "siteId": {
                    "type": "string",
                    "description": "You can determine a site provisioning site Id by hitting https://site.com/store/sitemonitor.aspx and reading the response param PSID\n"
                },
                "userName": {
                    "type": "string",
                    "description": "Enter your application's User Name\n"
                },
                "userSecret": {
                    "type": "string",
                    "description": "Enter your application's User Secret\n"
                }
            },
            "type": "object",
            "required": [
                "siteId",
                "userName",
                "userSecret"
            ]
        },
        "airbyte:index/SourceCartConfigurationCredentialsSingleStoreAccessToken:SourceCartConfigurationCredentialsSingleStoreAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access Token for making authenticated requests.\n",
                    "secret": true
                },
                "storeName": {
                    "type": "string",
                    "description": "The name of Cart.com Online Store. All API URLs start with https://[mystorename.com]/api/v1/, where [mystorename.com] is the domain name of your store.\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "storeName"
            ]
        },
        "airbyte:index/SourceChargebeeConfiguration:SourceChargebeeConfiguration": {
            "properties": {
                "productCatalog": {
                    "type": "string",
                    "description": "Product Catalog version of your Chargebee site. Instructions on how to find your version you may find \u003ca href=\"https://apidocs.chargebee.com/docs/api?prod_cat_ver=2\"\u003ehere\u003c/a\u003e under `API Version` section. If left blank, the product catalog version will be set to 2.0. must be one of [\"1.0\", \"2.0\"]; Default: \"2.0\"\n"
                },
                "site": {
                    "type": "string",
                    "description": "The site prefix for your Chargebee instance.\n"
                },
                "siteApiKey": {
                    "type": "string",
                    "description": "Chargebee API Key. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/chargebee\"\u003edocs\u003c/a\u003e for more information on how to obtain this key.\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00.000Z. Any data before this date will not be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "site",
                "siteApiKey",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "productCatalog",
                        "site",
                        "siteApiKey",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourceChartmogulConfiguration:SourceChartmogulConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Your Chartmogul API key. See \u003ca href=\"https://help.chartmogul.com/hc/en-us/articles/4407796325906-Creating-and-Managing-API-keys#creating-an-api-key\"\u003e the docs \u003c/a\u003e for info on how to obtain this.\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. When feasible, any data before this date will not be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "startDate"
            ]
        },
        "airbyte:index/SourceClickhouseConfiguration:SourceClickhouseConfiguration": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "The name of the database.\n"
                },
                "host": {
                    "type": "string",
                    "description": "The host endpoint of the Clickhouse cluster.\n"
                },
                "jdbcUrlParams": {
                    "type": "string",
                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '\u0026'. (Eg. key1=value1\u0026key2=value2\u0026key3=value3). For more information read about \u003ca href=\"https://jdbc.postgresql.org/documentation/head/connect.html\"\u003eJDBC URL parameters\u003c/a\u003e.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this username.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "The port of the database. Default: 8123\n"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/SourceClickhouseConfigurationTunnelMethod:SourceClickhouseConfigurationTunnelMethod",
                    "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username which is used to access the database.\n"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "database",
                        "host",
                        "port",
                        "username"
                    ]
                }
            }
        },
        "airbyte:index/SourceClickhouseConfigurationTunnelMethod:SourceClickhouseConfigurationTunnelMethod": {
            "properties": {
                "noTunnel": {
                    "$ref": "#/types/airbyte:index/SourceClickhouseConfigurationTunnelMethodNoTunnel:SourceClickhouseConfigurationTunnelMethodNoTunnel"
                },
                "passwordAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceClickhouseConfigurationTunnelMethodPasswordAuthentication:SourceClickhouseConfigurationTunnelMethodPasswordAuthentication"
                },
                "sshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceClickhouseConfigurationTunnelMethodSshKeyAuthentication:SourceClickhouseConfigurationTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceClickhouseConfigurationTunnelMethodNoTunnel:SourceClickhouseConfigurationTunnelMethodNoTunnel": {
            "type": "object"
        },
        "airbyte:index/SourceClickhouseConfigurationTunnelMethodPasswordAuthentication:SourceClickhouseConfigurationTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host\n"
                },
                "tunnelUserPassword": {
                    "type": "string",
                    "description": "OS-level password for logging into the jump server host\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser",
                        "tunnelUserPassword"
                    ]
                }
            }
        },
        "airbyte:index/SourceClickhouseConfigurationTunnelMethodSshKeyAuthentication:SourceClickhouseConfigurationTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string",
                    "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )\n",
                    "secret": true
                },
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host.\n"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "sshKey",
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser"
                    ]
                }
            }
        },
        "airbyte:index/SourceClickupApiConfiguration:SourceClickupApiConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "Every ClickUp API call required authentication. This field is your personal API token. See \u003ca href=\"https://clickup.com/api/developer-portal/authentication/#personal-token\"\u003ehere\u003c/a\u003e.\n",
                    "secret": true
                },
                "folderId": {
                    "type": "string",
                    "description": "The ID of your folder in your space. Retrieve it from the `/space/{space_id}/folder` of the ClickUp API. See \u003ca href=\"https://clickup.com/api/clickupreference/operation/GetFolders/\"\u003ehere\u003c/a\u003e.\n"
                },
                "includeClosedTasks": {
                    "type": "boolean",
                    "description": "Include or exclude closed tasks. By default, they are excluded. See \u003ca https://clickup.com/api/clickupreference/operation/GetTasks/#!in=query\u0026path=include_closed\u0026t=request\"\u003ehere\u003c/a\u003e. Default: false\n"
                },
                "listId": {
                    "type": "string",
                    "description": "The ID of your list in your folder. Retrieve it from the `/folder/{folder_id}/list` of the ClickUp API. See \u003ca href=\"https://clickup.com/api/clickupreference/operation/GetLists/\"\u003ehere\u003c/a\u003e.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The ID of your space in your workspace. Retrieve it from the `/team/{team_id}/space` of the ClickUp API. See \u003ca href=\"https://clickup.com/api/clickupreference/operation/GetSpaces/\"\u003ehere\u003c/a\u003e.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of your team in ClickUp. Retrieve it from the `/team` of the ClickUp API. See \u003ca href=\"https://clickup.com/api/clickupreference/operation/GetAuthorizedTeams/\"\u003ehere\u003c/a\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "apiToken"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiToken",
                        "includeClosedTasks"
                    ]
                }
            }
        },
        "airbyte:index/SourceClockifyConfiguration:SourceClockifyConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "You can get your api access_key \u003ca href=\"https://app.clockify.me/user/settings\"\u003ehere\u003c/a\u003e This API is Case Sensitive.\n",
                    "secret": true
                },
                "apiUrl": {
                    "type": "string",
                    "description": "The URL for the Clockify API. This should only need to be modified if connecting to an enterprise version of Clockify. Default: \"https://api.clockify.me\"\n"
                },
                "workspaceId": {
                    "type": "string",
                    "description": "WorkSpace Id\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "workspaceId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "apiUrl",
                        "workspaceId"
                    ]
                }
            }
        },
        "airbyte:index/SourceCloseComConfiguration:SourceCloseComConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Close.com API key (usually starts with 'api_'; find yours \u003ca href=\"https://app.close.com/settings/api/\"\u003ehere\u003c/a\u003e).\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "The start date to sync data; all data after this date will be replicated. Leave blank to retrieve all the data available in the account. Format: YYYY-MM-DD. Default: \"2021-01-01\"\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourceCodaConfiguration:SourceCodaConfiguration": {
            "properties": {
                "authToken": {
                    "type": "string",
                    "description": "Bearer token\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "authToken"
            ]
        },
        "airbyte:index/SourceCoinApiConfiguration:SourceCoinApiConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API Key\n",
                    "secret": true
                },
                "endDate": {
                    "type": "string",
                    "description": "The end date in ISO 8601 format. If not supplied, data will be returned\nfrom the start date to the current time, or when the count of result\nelements reaches its limit.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "The environment to use. Either sandbox or production.\n\nmust be one of [\"sandbox\", \"production\"]; Default: \"sandbox\"\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of elements to return. If not supplied, the default\nis 100. For numbers larger than 100, each 100 items is counted as one\nrequest for pricing purposes. Maximum value is 100000.\n\nDefault: 100\n"
                },
                "period": {
                    "type": "string",
                    "description": "The period to use. See the documentation for a list. https://docs.coinapi.io/#list-all-periods-get\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The start date in ISO 8601 format.\n"
                },
                "symbolId": {
                    "type": "string",
                    "description": "The symbol ID to use. See the documentation for a list.\nhttps://docs.coinapi.io/#list-all-symbols-get\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "period",
                "startDate",
                "symbolId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "environment",
                        "limit",
                        "period",
                        "startDate",
                        "symbolId"
                    ]
                }
            }
        },
        "airbyte:index/SourceCoinmarketcapConfiguration:SourceCoinmarketcapConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Your API Key. See \u003ca href=\"https://coinmarketcap.com/api/documentation/v1/#section/Authentication\"\u003ehere\u003c/a\u003e. The token is case sensitive.\n",
                    "secret": true
                },
                "dataType": {
                    "type": "string",
                    "description": "/latest: Latest market ticker quotes and averages for cryptocurrencies and exchanges. /historical: Intervals of historic market data like OHLCV data or data for use in charting libraries. See \u003ca href=\"https://coinmarketcap.com/api/documentation/v1/#section/Endpoint-Overview\"\u003ehere\u003c/a\u003e. must be one of [\"latest\", \"historical\"]\n"
                },
                "symbols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cryptocurrency symbols. (only used for quotes stream)\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "dataType"
            ]
        },
        "airbyte:index/SourceConfigcatConfiguration:SourceConfigcatConfiguration": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "Basic auth password. See \u003ca href=\"https://api.configcat.com/docs/#section/Authentication\"\u003ehere\u003c/a\u003e.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "Basic auth user name. See \u003ca href=\"https://api.configcat.com/docs/#section/Authentication\"\u003ehere\u003c/a\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "airbyte:index/SourceConfluenceConfiguration:SourceConfluenceConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "Please follow the Jira confluence for generating an API token: \u003ca href=\"https://support.atlassian.com/atlassian-account/docs/manage-api-tokens-for-your-atlassian-account/\"\u003egenerating an API token\u003c/a\u003e.\n",
                    "secret": true
                },
                "domainName": {
                    "type": "string",
                    "description": "Your Confluence domain name\n"
                },
                "email": {
                    "type": "string",
                    "description": "Your Confluence login email\n"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "domainName",
                "email"
            ]
        },
        "airbyte:index/SourceConvexConfiguration:SourceConvexConfiguration": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "API access key used to retrieve data from Convex.\n",
                    "secret": true
                },
                "deploymentUrl": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "deploymentUrl"
            ]
        },
        "airbyte:index/SourceDatascopeConfiguration:SourceDatascopeConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API Key\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "Start date for the data to be replicated\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "startDate"
            ]
        },
        "airbyte:index/SourceDelightedConfiguration:SourceDelightedConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "A Delighted API key.\n",
                    "secret": true
                },
                "since": {
                    "type": "string",
                    "description": "The date from which you'd like to replicate the data\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "since"
            ]
        },
        "airbyte:index/SourceDixaConfiguration:SourceDixaConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "Dixa API token\n",
                    "secret": true
                },
                "batchSize": {
                    "type": "integer",
                    "description": "Number of days to batch into one request. Max 31. Default: 31\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The connector pulls records updated from this date onwards.\n"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiToken",
                        "batchSize",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourceDockerhubConfiguration:SourceDockerhubConfiguration": {
            "properties": {
                "dockerUsername": {
                    "type": "string",
                    "description": "Username of DockerHub person or organization (for https://hub.docker.com/v2/repositories/USERNAME/ API call)\n"
                }
            },
            "type": "object",
            "required": [
                "dockerUsername"
            ]
        },
        "airbyte:index/SourceDremioConfiguration:SourceDremioConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API Key that is generated when you authenticate to Dremio API\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "URL of your Dremio instance. Default: \"https://app.dremio.cloud\"\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "baseUrl"
                    ]
                }
            }
        },
        "airbyte:index/SourceDynamodbConfiguration:SourceDynamodbConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceDynamodbConfigurationCredentials:SourceDynamodbConfigurationCredentials",
                    "description": "Credentials for the service\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "the URL of the Dynamodb database. Default: \"\"\n"
                },
                "ignoreMissingReadPermissionsTables": {
                    "type": "boolean",
                    "description": "Ignore tables with missing scan/read permissions. Default: false\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region of the Dynamodb database. must be one of [\"\", \"af-south-1\", \"ap-east-1\", \"ap-northeast-1\", \"ap-northeast-2\", \"ap-northeast-3\", \"ap-south-1\", \"ap-south-2\", \"ap-southeast-1\", \"ap-southeast-2\", \"ap-southeast-3\", \"ap-southeast-4\", \"ca-central-1\", \"ca-west-1\", \"cn-north-1\", \"cn-northwest-1\", \"eu-central-1\", \"eu-central-2\", \"eu-north-1\", \"eu-south-1\", \"eu-south-2\", \"eu-west-1\", \"eu-west-2\", \"eu-west-3\", \"il-central-1\", \"me-central-1\", \"me-south-1\", \"sa-east-1\", \"us-east-1\", \"us-east-2\", \"us-gov-east-1\", \"us-gov-west-1\", \"us-west-1\", \"us-west-2\"]; Default: \"\"\n"
                },
                "reservedAttributeNames": {
                    "type": "string",
                    "description": "Comma separated reserved attribute names present in your tables\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "endpoint",
                        "ignoreMissingReadPermissionsTables",
                        "region"
                    ]
                }
            }
        },
        "airbyte:index/SourceDynamodbConfigurationCredentials:SourceDynamodbConfigurationCredentials": {
            "properties": {
                "authenticateViaAccessKeys": {
                    "$ref": "#/types/airbyte:index/SourceDynamodbConfigurationCredentialsAuthenticateViaAccessKeys:SourceDynamodbConfigurationCredentialsAuthenticateViaAccessKeys"
                },
                "roleBasedAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceDynamodbConfigurationCredentialsRoleBasedAuthentication:SourceDynamodbConfigurationCredentialsRoleBasedAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceDynamodbConfigurationCredentialsAuthenticateViaAccessKeys:SourceDynamodbConfigurationCredentialsAuthenticateViaAccessKeys": {
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "The access key id to access Dynamodb. Airbyte requires read permissions to the database\n",
                    "secret": true
                },
                "additionalProperties": {
                    "type": "string",
                    "description": "Parsed as JSON.\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "The corresponding secret to the access key id.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "secretAccessKey"
            ]
        },
        "airbyte:index/SourceDynamodbConfigurationCredentialsRoleBasedAuthentication:SourceDynamodbConfigurationCredentialsRoleBasedAuthentication": {
            "properties": {
                "additionalProperties": {
                    "type": "string",
                    "description": "Parsed as JSON.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceEmailoctopusConfiguration:SourceEmailoctopusConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "EmailOctopus API Key. See the \u003ca href=\"https://help.emailoctopus.com/article/165-how-to-create-and-delete-api-keys\"\u003edocs\u003c/a\u003e for information on how to generate this key.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceExchangeRatesConfiguration:SourceExchangeRatesConfiguration": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Your API Key. See \u003ca href=\"https://apilayer.com/marketplace/exchangerates_data-api\"\u003ehere\u003c/a\u003e. The key is case sensitive.\n",
                    "secret": true
                },
                "base": {
                    "type": "string",
                    "description": "ISO reference currency. See \u003ca href=\"https://www.ecb.europa.eu/stats/policy_and_exchange_rates/euro_reference_exchange_rates/html/index.en.html\"\u003ehere\u003c/a\u003e. Free plan doesn't support Source Currency Switching, default base currency is EUR\n"
                },
                "ignoreWeekends": {
                    "type": "boolean",
                    "description": "Ignore weekends? (Exchanges don't run on weekends). Default: true\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Start getting data from that date.\n"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessKey",
                        "ignoreWeekends",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourceFacebookMarketingConfiguration:SourceFacebookMarketingConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The value of the generated access token. From your App’s Dashboard, click on \"Marketing API\" then \"Tools\". Select permissions \u003cb\u003eads_management, ads_read, read_insights, business_management\u003c/b\u003e. Then click on \"Get token\". See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/facebook-marketing\"\u003edocs\u003c/a\u003e for more information.\n",
                    "secret": true
                },
                "accountIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The Facebook Ad account ID(s) to pull data from. The Ad account ID number is in the account dropdown menu or in your browser's address bar of your \u003ca href=\"https://adsmanager.facebook.com/adsmanager/\"\u003eMeta Ads Manager\u003c/a\u003e. See the \u003ca href=\"https://www.facebook.com/business/help/1492627900875762\"\u003edocs\u003c/a\u003e for more information.\n"
                },
                "actionBreakdownsAllowEmpty": {
                    "type": "boolean",
                    "description": "Allows action_breakdowns to be an empty list. Default: true\n"
                },
                "adStatuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Select the statuses you want to be loaded in the stream. If no specific statuses are selected, the API's default behavior applies, and some statuses may be filtered out.\n"
                },
                "adsetStatuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Select the statuses you want to be loaded in the stream. If no specific statuses are selected, the API's default behavior applies, and some statuses may be filtered out.\n"
                },
                "campaignStatuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Select the statuses you want to be loaded in the stream. If no specific statuses are selected, the API's default behavior applies, and some statuses may be filtered out.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The Client Id for your OAuth app\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret for your OAuth app\n"
                },
                "customInsights": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceFacebookMarketingConfigurationCustomInsight:SourceFacebookMarketingConfigurationCustomInsight"
                    },
                    "description": "A list which contains ad statistics entries, each entry must have a name and can contains fields, breakdowns or action_breakdowns. Click on \"add\" to fill this field.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The date until which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DDT00:00:00Z. All data generated between the start date and this end date will be replicated. Not setting this option will result in always syncing the latest data.\n"
                },
                "fetchThumbnailImages": {
                    "type": "boolean",
                    "description": "Set to active if you want to fetch the thumbnail_url and store the result in thumbnail_data_url for each Ad Creative. Default: false\n"
                },
                "insightsJobTimeout": {
                    "type": "integer",
                    "description": "Insights Job Timeout establishes the maximum amount of time (in minutes) of waiting for the report job to complete. When timeout is reached the job is considered failed and we are trying to request smaller amount of data by breaking the job to few smaller ones. If you definitely know that 60 minutes is not enough for your report to be processed then you can decrease the timeout value, so we start breaking job to smaller parts faster. Default: 60\n"
                },
                "insightsLookbackWindow": {
                    "type": "integer",
                    "description": "The attribution window. Facebook freezes insight data 28 days after it was generated, which means that all data from the past 28 days may have changed since we last emitted it, so you can retrieve refreshed insights from the past by setting this parameter. If you set a custom lookback window value in Facebook account, please provide the same value here. Default: 28\n"
                },
                "pageSize": {
                    "type": "integer",
                    "description": "Page size used when sending requests to Facebook API to specify number of records per page when response has pagination. Most users do not need to set this field unless they specifically need to tune the connector to address specific issues or use cases. Default: 100\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The date from which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DDT00:00:00Z. If not set then all data will be replicated for usual streams and only last 2 years for insight streams.\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "accountIds"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessToken",
                        "accountIds",
                        "actionBreakdownsAllowEmpty",
                        "fetchThumbnailImages",
                        "insightsJobTimeout",
                        "insightsLookbackWindow",
                        "pageSize"
                    ]
                }
            }
        },
        "airbyte:index/SourceFacebookMarketingConfigurationCustomInsight:SourceFacebookMarketingConfigurationCustomInsight": {
            "properties": {
                "actionBreakdowns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of chosen action_breakdowns for action_breakdowns\n"
                },
                "actionReportTime": {
                    "type": "string",
                    "description": "Determines the report time of action stats. For example, if a person saw the ad on Jan 1st but converted on Jan 2nd, when you query the API with action_report_time=impression, you see a conversion on Jan 1st. When you query the API with action_report_time=conversion, you see a conversion on Jan 2nd. must be one of [\"conversion\", \"impression\", \"mixed\"]; Default: \"mixed\"\n"
                },
                "breakdowns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of chosen breakdowns for breakdowns\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The date until which you'd like to replicate data for this stream, in the format YYYY-MM-DDT00:00:00Z. All data generated between the start date and this end date will be replicated. Not setting this option will result in always syncing the latest data.\n"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of chosen fields for fields parameter\n"
                },
                "insightsJobTimeout": {
                    "type": "integer",
                    "description": "The insights job timeout. Default: 60\n"
                },
                "insightsLookbackWindow": {
                    "type": "integer",
                    "description": "The attribution window. Default: 28\n"
                },
                "level": {
                    "type": "string",
                    "description": "Chosen level for API. must be one of [\"ad\", \"adset\", \"campaign\", \"account\"]; Default: \"ad\"\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name value of insight\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The date from which you'd like to replicate data for this stream, in the format YYYY-MM-DDT00:00:00Z.\n"
                },
                "timeIncrement": {
                    "type": "integer",
                    "description": "Time window in days by which to aggregate statistics. The sync will be chunked into N day intervals, where N is the number of days you specified. For example, if you set this value to 7, then all statistics will be reported as 7-day aggregates by starting from the start_date. If the start and end dates are October 1st and October 30th, then the connector will output 5 records: 01 - 06, 07 - 13, 14 - 20, 21 - 27, and 28 - 30 (3 days only). Default: 1\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionReportTime",
                        "insightsJobTimeout",
                        "insightsLookbackWindow",
                        "level",
                        "name",
                        "timeIncrement"
                    ]
                }
            }
        },
        "airbyte:index/SourceFakerConfiguration:SourceFakerConfiguration": {
            "properties": {
                "alwaysUpdated": {
                    "type": "boolean",
                    "description": "Should the updated_at values for every record be new each sync?  Setting this to false will case the source to stop emitting records after COUNT records have been emitted. Default: true\n"
                },
                "count": {
                    "type": "integer",
                    "description": "How many users should be generated in total. The purchases table will be scaled to match, with 10 purchases created per 10 users. This setting does not apply to the products stream. Default: 1000\n"
                },
                "parallelism": {
                    "type": "integer",
                    "description": "How many parallel workers should we use to generate fake data?  Choose a value equal to the number of CPUs you will allocate to this source. Default: 4\n"
                },
                "recordsPerSlice": {
                    "type": "integer",
                    "description": "How many fake records will be in each page (stream slice), before a state message is emitted?. Default: 1000\n"
                },
                "seed": {
                    "type": "integer",
                    "description": "Manually control the faker random seed to return the same values on subsequent runs (leave -1 for random). Default: -1\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "alwaysUpdated",
                        "count",
                        "parallelism",
                        "recordsPerSlice",
                        "seed"
                    ]
                }
            }
        },
        "airbyte:index/SourceFaunaConfiguration:SourceFaunaConfiguration": {
            "properties": {
                "collection": {
                    "$ref": "#/types/airbyte:index/SourceFaunaConfigurationCollection:SourceFaunaConfigurationCollection",
                    "description": "Settings for the Fauna Collection.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain of Fauna to query. Defaults db.fauna.com. See \u003ca href=https://docs.fauna.com/fauna/current/learn/understanding/region_groups#how-to-use-region-groups\u003ethe docs\u003c/a\u003e. Default: \"db.fauna.com\"\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Endpoint port. Default: 443\n"
                },
                "scheme": {
                    "type": "string",
                    "description": "URL scheme. Default: \"https\"\n"
                },
                "secret": {
                    "type": "string",
                    "description": "Fauna secret, used when authenticating with the database.\n"
                }
            },
            "type": "object",
            "required": [
                "secret"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "domain",
                        "port",
                        "scheme",
                        "secret"
                    ]
                }
            }
        },
        "airbyte:index/SourceFaunaConfigurationCollection:SourceFaunaConfigurationCollection": {
            "properties": {
                "deletions": {
                    "$ref": "#/types/airbyte:index/SourceFaunaConfigurationCollectionDeletions:SourceFaunaConfigurationCollectionDeletions",
                    "description": "\u003cb\u003eThis only applies to incremental syncs.\u003c/b\u003e \u003cbr\u003e\nEnabling deletion mode informs your destination of deleted documents.\u003cbr\u003e\nDisabled - Leave this feature disabled, and ignore deleted documents.\u003cbr\u003e\nEnabled - Enables this feature. When a document is deleted, the connector exports a record with a \"deleted at\" column containing the time that the document was deleted.\n"
                },
                "pageSize": {
                    "type": "integer",
                    "description": "The page size used when reading documents from the database. The larger the page size, the faster the connector processes documents. However, if a page is too large, the connector may fail. \u003cbr\u003e\nChoose your page size based on how large the documents are. \u003cbr\u003e\nSee \u003ca href=\"https://docs.fauna.com/fauna/current/learn/understanding/types#page\"\u003ethe docs\u003c/a\u003e.\nDefault: 64\n"
                }
            },
            "type": "object",
            "required": [
                "deletions"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deletions",
                        "pageSize"
                    ]
                }
            }
        },
        "airbyte:index/SourceFaunaConfigurationCollectionDeletions:SourceFaunaConfigurationCollectionDeletions": {
            "properties": {
                "disabled": {
                    "$ref": "#/types/airbyte:index/SourceFaunaConfigurationCollectionDeletionsDisabled:SourceFaunaConfigurationCollectionDeletionsDisabled"
                },
                "enabled": {
                    "$ref": "#/types/airbyte:index/SourceFaunaConfigurationCollectionDeletionsEnabled:SourceFaunaConfigurationCollectionDeletionsEnabled"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceFaunaConfigurationCollectionDeletionsDisabled:SourceFaunaConfigurationCollectionDeletionsDisabled": {
            "type": "object"
        },
        "airbyte:index/SourceFaunaConfigurationCollectionDeletionsEnabled:SourceFaunaConfigurationCollectionDeletionsEnabled": {
            "properties": {
                "column": {
                    "type": "string",
                    "description": "Name of the \"deleted at\" column. Default: \"deleted_at\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "column"
                    ]
                }
            }
        },
        "airbyte:index/SourceFileConfiguration:SourceFileConfiguration": {
            "properties": {
                "datasetName": {
                    "type": "string",
                    "description": "The Name of the final table to replicate this file into (should include letters, numbers dash and underscores only).\n"
                },
                "format": {
                    "type": "string",
                    "description": "The Format of the file which should be replicated (Warning: some formats may be experimental, please refer to the docs). must be one of [\"csv\", \"json\", \"jsonl\", \"excel\", \"excel_binary\", \"fwf\", \"feather\", \"parquet\", \"yaml\"]; Default: \"csv\"\n"
                },
                "provider": {
                    "$ref": "#/types/airbyte:index/SourceFileConfigurationProvider:SourceFileConfigurationProvider",
                    "description": "The storage Provider or Location of the file(s) which should be replicated.\n"
                },
                "readerOptions": {
                    "type": "string",
                    "description": "This should be a string in JSON format. It depends on the chosen file format to provide additional options and tune its behavior.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL path to access the file which should be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "datasetName",
                "provider",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "datasetName",
                        "format",
                        "provider",
                        "url"
                    ]
                }
            }
        },
        "airbyte:index/SourceFileConfigurationProvider:SourceFileConfigurationProvider": {
            "properties": {
                "azBlobAzureBlobStorage": {
                    "$ref": "#/types/airbyte:index/SourceFileConfigurationProviderAzBlobAzureBlobStorage:SourceFileConfigurationProviderAzBlobAzureBlobStorage"
                },
                "gcsGoogleCloudStorage": {
                    "$ref": "#/types/airbyte:index/SourceFileConfigurationProviderGcsGoogleCloudStorage:SourceFileConfigurationProviderGcsGoogleCloudStorage"
                },
                "httpsPublicWeb": {
                    "$ref": "#/types/airbyte:index/SourceFileConfigurationProviderHttpsPublicWeb:SourceFileConfigurationProviderHttpsPublicWeb"
                },
                "s3AmazonWebServices": {
                    "$ref": "#/types/airbyte:index/SourceFileConfigurationProviderS3AmazonWebServices:SourceFileConfigurationProviderS3AmazonWebServices"
                },
                "scpSecureCopyProtocol": {
                    "$ref": "#/types/airbyte:index/SourceFileConfigurationProviderScpSecureCopyProtocol:SourceFileConfigurationProviderScpSecureCopyProtocol"
                },
                "sftpSecureFileTransferProtocol": {
                    "$ref": "#/types/airbyte:index/SourceFileConfigurationProviderSftpSecureFileTransferProtocol:SourceFileConfigurationProviderSftpSecureFileTransferProtocol"
                },
                "sshSecureShell": {
                    "$ref": "#/types/airbyte:index/SourceFileConfigurationProviderSshSecureShell:SourceFileConfigurationProviderSshSecureShell"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceFileConfigurationProviderAzBlobAzureBlobStorage:SourceFileConfigurationProviderAzBlobAzureBlobStorage": {
            "properties": {
                "sasToken": {
                    "type": "string",
                    "description": "To access Azure Blob Storage, this connector would need credentials with the proper permissions. One option is a SAS (Shared Access Signature) token. If accessing publicly available data, this field is not necessary.\n",
                    "secret": true
                },
                "sharedKey": {
                    "type": "string",
                    "description": "To access Azure Blob Storage, this connector would need credentials with the proper permissions. One option is a storage account shared key (aka account key or access key). If accessing publicly available data, this field is not necessary.\n",
                    "secret": true
                },
                "storageAccount": {
                    "type": "string",
                    "description": "The globally unique name of the storage account that the desired blob sits within. See \u003ca href=\"https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview\" target=\"_blank\"\u003ehere\u003c/a\u003e for more details.\n"
                }
            },
            "type": "object",
            "required": [
                "storageAccount"
            ]
        },
        "airbyte:index/SourceFileConfigurationProviderGcsGoogleCloudStorage:SourceFileConfigurationProviderGcsGoogleCloudStorage": {
            "properties": {
                "serviceAccountJson": {
                    "type": "string",
                    "description": "In order to access private Buckets stored on Google Cloud, this connector would need a service account json credentials with the proper permissions as described \u003ca href=\"https://cloud.google.com/iam/docs/service-accounts\" target=\"_blank\"\u003ehere\u003c/a\u003e. Please generate the credentials.json file and copy/paste its content to this field (expecting JSON formats). If accessing publicly available data, this field is not necessary.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceFileConfigurationProviderHttpsPublicWeb:SourceFileConfigurationProviderHttpsPublicWeb": {
            "properties": {
                "userAgent": {
                    "type": "boolean",
                    "description": "Add User-Agent to request. Default: false\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "userAgent"
                    ]
                }
            }
        },
        "airbyte:index/SourceFileConfigurationProviderS3AmazonWebServices:SourceFileConfigurationProviderS3AmazonWebServices": {
            "properties": {
                "awsAccessKeyId": {
                    "type": "string",
                    "description": "In order to access private Buckets stored on AWS S3, this connector would need credentials with the proper permissions. If accessing publicly available data, this field is not necessary.\n",
                    "secret": true
                },
                "awsSecretAccessKey": {
                    "type": "string",
                    "description": "In order to access private Buckets stored on AWS S3, this connector would need credentials with the proper permissions. If accessing publicly available data, this field is not necessary.\n",
                    "secret": true
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceFileConfigurationProviderScpSecureCopyProtocol:SourceFileConfigurationProviderScpSecureCopyProtocol": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "port": {
                    "type": "string",
                    "description": "Default: \"22\"\n"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "host",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "host",
                        "port",
                        "user"
                    ]
                }
            }
        },
        "airbyte:index/SourceFileConfigurationProviderSftpSecureFileTransferProtocol:SourceFileConfigurationProviderSftpSecureFileTransferProtocol": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "port": {
                    "type": "string",
                    "description": "Default: \"22\"\n"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "host",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "host",
                        "port",
                        "user"
                    ]
                }
            }
        },
        "airbyte:index/SourceFileConfigurationProviderSshSecureShell:SourceFileConfigurationProviderSshSecureShell": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "port": {
                    "type": "string",
                    "description": "Default: \"22\"\n"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "host",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "host",
                        "port",
                        "user"
                    ]
                }
            }
        },
        "airbyte:index/SourceFireboltConfiguration:SourceFireboltConfiguration": {
            "properties": {
                "account": {
                    "type": "string",
                    "description": "Firebolt account to login.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Firebolt service account ID.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Firebolt secret, corresponding to the service account ID.\n"
                },
                "database": {
                    "type": "string",
                    "description": "The database to connect to.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "Engine name to connect to.\n"
                },
                "host": {
                    "type": "string",
                    "description": "The host name of your Firebolt database.\n"
                }
            },
            "type": "object",
            "required": [
                "account",
                "clientId",
                "clientSecret",
                "database",
                "engine"
            ]
        },
        "airbyte:index/SourceFreshcallerConfiguration:SourceFreshcallerConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Freshcaller API Key. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/freshcaller\"\u003edocs\u003c/a\u003e for more information on how to obtain this key.\n",
                    "secret": true
                },
                "domain": {
                    "type": "string",
                    "description": "Used to construct Base URL for the Freshcaller APIs\n"
                },
                "requestsPerMinute": {
                    "type": "integer",
                    "description": "The number of requests per minute that this source allowed to use. There is a rate limit of 50 requests per minute per app per account.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time. Any data created after this date will be replicated.\n"
                },
                "syncLagMinutes": {
                    "type": "integer",
                    "description": "Lag in minutes for each sync, i.e., at time T, data for the time range [prev_sync_time, T-30] will be fetched\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "domain"
            ]
        },
        "airbyte:index/SourceFreshdeskConfiguration:SourceFreshdeskConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Freshdesk API Key. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/freshdesk\"\u003edocs\u003c/a\u003e for more information on how to obtain this key.\n",
                    "secret": true
                },
                "domain": {
                    "type": "string",
                    "description": "Freshdesk domain\n"
                },
                "lookbackWindowInDays": {
                    "type": "integer",
                    "description": "Number of days for lookback window for the stream Satisfaction Ratings. Default: 14\n"
                },
                "requestsPerMinute": {
                    "type": "integer",
                    "description": "The number of requests per minute that this source allowed to use. There is a rate limit of 50 requests per minute per app per account.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time. Any data created after this date will be replicated. If this parameter is not set, all data will be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "domain"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "domain",
                        "lookbackWindowInDays"
                    ]
                }
            }
        },
        "airbyte:index/SourceFreshsalesConfiguration:SourceFreshsalesConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Freshsales API Key. See \u003ca href=\"https://crmsupport.freshworks.com/support/solutions/articles/50000002503-how-to-find-my-api-key-\"\u003ehere\u003c/a\u003e. The key is case sensitive.\n",
                    "secret": true
                },
                "domainName": {
                    "type": "string",
                    "description": "The Name of your Freshsales domain\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "domainName"
            ]
        },
        "airbyte:index/SourceGainsightPxConfiguration:SourceGainsightPxConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "The Aptrinsic API Key which is recieved from the dashboard settings (ref - https://app.aptrinsic.com/settings/api-keys)\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceGcsConfiguration:SourceGcsConfiguration": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "Name of the GCS bucket where the file(s) exist.\n"
                },
                "serviceAccount": {
                    "type": "string",
                    "description": "Enter your Google Cloud \u003ca href=\"https://cloud.google.com/iam/docs/creating-managing-service-account-keys#creating_service_account_keys\"\u003eservice account key\u003c/a\u003e in JSON format\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00.000000Z. Any file modified before this date will not be replicated.\n"
                },
                "streams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceGcsConfigurationStream:SourceGcsConfigurationStream"
                    },
                    "description": "Each instance of this configuration defines a \u003ca href=https://docs.airbyte.com/cloud/core-concepts#stream\u003estream\u003c/a\u003e. Use this to define which files belong in the stream, their format, and how they should be parsed and validated. When sending data to warehouse destination such as Snowflake or BigQuery, each stream is a separate table.\n"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "serviceAccount",
                "streams"
            ]
        },
        "airbyte:index/SourceGcsConfigurationStream:SourceGcsConfigurationStream": {
            "properties": {
                "daysToSyncIfHistoryIsFull": {
                    "type": "integer",
                    "description": "When the state history of the file store is full, syncs will only read files that were last modified in the provided day range. Default: 3\n"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/SourceGcsConfigurationStreamFormat:SourceGcsConfigurationStreamFormat",
                    "description": "The configuration options that are used to alter how to read incoming files that deviate from the standard formatting.\n"
                },
                "globs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The pattern used to specify which files should be selected from the file system. For more information on glob pattern matching look \u003ca href=\"https://en.wikipedia.org/wiki/Glob_(programming)\"\u003ehere\u003c/a\u003e.\n"
                },
                "inputSchema": {
                    "type": "string",
                    "description": "The schema that will be used to validate records extracted from the file. This will override the stream schema that is auto-detected from incoming files.\n"
                },
                "legacyPrefix": {
                    "type": "string",
                    "description": "The path prefix configured in previous versions of the GCS connector. This option is deprecated in favor of a single glob.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the stream.\n"
                },
                "primaryKey": {
                    "type": "string",
                    "description": "The column or columns (for a composite key) that serves as the unique identifier of a record. If empty, the primary key will default to the parser's default primary key.\n",
                    "secret": true
                },
                "schemaless": {
                    "type": "boolean",
                    "description": "When enabled, syncs will not validate or structure records against the stream's schema. Default: false\n"
                },
                "validationPolicy": {
                    "type": "string",
                    "description": "The name of the validation policy that dictates sync behavior when a record does not adhere to the stream schema. must be one of [\"Emit Record\", \"Skip Record\", \"Wait for Discover\"]; Default: \"Emit Record\"\n"
                }
            },
            "type": "object",
            "required": [
                "format",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "daysToSyncIfHistoryIsFull",
                        "format",
                        "name",
                        "schemaless",
                        "validationPolicy"
                    ]
                }
            }
        },
        "airbyte:index/SourceGcsConfigurationStreamFormat:SourceGcsConfigurationStreamFormat": {
            "properties": {
                "csvFormat": {
                    "$ref": "#/types/airbyte:index/SourceGcsConfigurationStreamFormatCsvFormat:SourceGcsConfigurationStreamFormatCsvFormat"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGcsConfigurationStreamFormatCsvFormat:SourceGcsConfigurationStreamFormatCsvFormat": {
            "properties": {
                "delimiter": {
                    "type": "string",
                    "description": "The character delimiting individual cells in the CSV data. This may only be a 1-character string. For tab-delimited data enter '\\t'. Default: \",\"\n"
                },
                "doubleQuote": {
                    "type": "boolean",
                    "description": "Whether two quotes in a quoted CSV value denote a single quote in the data. Default: true\n"
                },
                "encoding": {
                    "type": "string",
                    "description": "The character encoding of the CSV data. Leave blank to default to \u003cstrong\u003eUTF8\u003c/strong\u003e. See \u003ca href=\"https://docs.python.org/3/library/codecs.html#standard-encodings\" target=\"_blank\"\u003elist of python encodings\u003c/a\u003e for allowable options. Default: \"utf8\"\n"
                },
                "escapeChar": {
                    "type": "string",
                    "description": "The character used for escaping special characters. To disallow escaping, leave this field blank.\n"
                },
                "falseValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as false values.\n"
                },
                "headerDefinition": {
                    "$ref": "#/types/airbyte:index/SourceGcsConfigurationStreamFormatCsvFormatHeaderDefinition:SourceGcsConfigurationStreamFormatCsvFormatHeaderDefinition",
                    "description": "How headers will be defined. `User Provided` assumes the CSV does not have a header row and uses the headers provided and `Autogenerated` assumes the CSV does not have a header row and the CDK will generate headers using for `f{i}` where `i` is the index starting from 0. Else, the default behavior is to use the header from the CSV file. If a user wants to autogenerate or provide column names for a CSV having headers, they can skip rows.\n"
                },
                "ignoreErrorsOnFieldsMismatch": {
                    "type": "boolean",
                    "description": "Whether to ignore errors that occur when the number of fields in the CSV does not match the number of columns in the schema. Default: false\n"
                },
                "inferenceType": {
                    "type": "string",
                    "description": "How to infer the types of the columns. If none, inference default to strings. must be one of [\"None\", \"Primitive Types Only\"]; Default: \"None\"\n"
                },
                "nullValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as null values. For example, if the value 'NA' should be interpreted as null, enter 'NA' in this field.\n"
                },
                "quoteChar": {
                    "type": "string",
                    "description": "The character used for quoting CSV values. To disallow quoting, make this field blank. Default: \"\\\"\"\n"
                },
                "skipRowsAfterHeader": {
                    "type": "integer",
                    "description": "The number of rows to skip after the header row. Default: 0\n"
                },
                "skipRowsBeforeHeader": {
                    "type": "integer",
                    "description": "The number of rows to skip before the header row. For example, if the header row is on the 3rd row, enter 2 in this field. Default: 0\n"
                },
                "stringsCanBeNull": {
                    "type": "boolean",
                    "description": "Whether strings can be interpreted as null values. If true, strings that match the null_values set will be interpreted as null. If false, strings that match the null_values set will be interpreted as the string itself. Default: true\n"
                },
                "trueValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as true values.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "delimiter",
                        "doubleQuote",
                        "encoding",
                        "ignoreErrorsOnFieldsMismatch",
                        "inferenceType",
                        "quoteChar",
                        "skipRowsAfterHeader",
                        "skipRowsBeforeHeader",
                        "stringsCanBeNull"
                    ]
                }
            }
        },
        "airbyte:index/SourceGcsConfigurationStreamFormatCsvFormatHeaderDefinition:SourceGcsConfigurationStreamFormatCsvFormatHeaderDefinition": {
            "properties": {
                "autogenerated": {
                    "$ref": "#/types/airbyte:index/SourceGcsConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated:SourceGcsConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated"
                },
                "fromCsv": {
                    "$ref": "#/types/airbyte:index/SourceGcsConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv:SourceGcsConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv"
                },
                "userProvided": {
                    "$ref": "#/types/airbyte:index/SourceGcsConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided:SourceGcsConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGcsConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated:SourceGcsConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated": {
            "type": "object"
        },
        "airbyte:index/SourceGcsConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv:SourceGcsConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv": {
            "type": "object"
        },
        "airbyte:index/SourceGcsConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided:SourceGcsConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided": {
            "properties": {
                "columnNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The column names that will be used while emitting the CSV records\n"
                }
            },
            "type": "object",
            "required": [
                "columnNames"
            ]
        },
        "airbyte:index/SourceGetlagoConfiguration:SourceGetlagoConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Your API Key. See \u003ca href=\"https://doc.getlago.com/docs/api/intro\"\u003ehere\u003c/a\u003e.\n",
                    "secret": true
                },
                "apiUrl": {
                    "type": "string",
                    "description": "Your Lago API URL. Default: \"https://api.getlago.com/api/v1\"\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "apiUrl"
                    ]
                }
            }
        },
        "airbyte:index/SourceGithubConfiguration:SourceGithubConfiguration": {
            "properties": {
                "apiUrl": {
                    "type": "string",
                    "description": "Please enter your basic URL from self-hosted GitHub instance or leave it empty to use GitHub. Default: \"https://api.github.com/\"\n"
                },
                "branch": {
                    "type": "string",
                    "description": "(DEPRCATED) Space-delimited list of GitHub repository branches to pull commits for, e.g. `airbytehq/airbyte/master`. If no branches are specified for a repository, the default branch will be pulled.\n"
                },
                "branches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of GitHub repository branches to pull commits for, e.g. `airbytehq/airbyte/master`. If no branches are specified for a repository, the default branch will be pulled.\n"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceGithubConfigurationCredentials:SourceGithubConfigurationCredentials",
                    "description": "Choose how to authenticate to GitHub\n"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of GitHub organizations/repositories, e.g. `airbytehq/airbyte` for single repository, `airbytehq/*` for get all repositories from organization and `airbytehq/a* for matching multiple repositories by pattern.\n"
                },
                "repository": {
                    "type": "string",
                    "description": "(DEPRCATED) Space-delimited list of GitHub organizations/repositories, e.g. `airbytehq/airbyte` for single repository, `airbytehq/*` for get all repositories from organization and `airbytehq/airbyte airbytehq/another-repo` for multiple repositories.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The date from which you'd like to replicate data from GitHub in the format YYYY-MM-DDT00:00:00Z. If the date is not set, all data will be replicated.  For the streams which support this configuration, only data generated on or after the start date will be replicated. This field doesn't apply to all streams, see the \u003ca href=\"https://docs.airbyte.com/integrations/sources/github\"\u003edocs\u003c/a\u003e for more info\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "repositories"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiUrl",
                        "credentials",
                        "repositories"
                    ]
                }
            }
        },
        "airbyte:index/SourceGithubConfigurationCredentials:SourceGithubConfigurationCredentials": {
            "properties": {
                "oAuth": {
                    "$ref": "#/types/airbyte:index/SourceGithubConfigurationCredentialsOAuth:SourceGithubConfigurationCredentialsOAuth"
                },
                "personalAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceGithubConfigurationCredentialsPersonalAccessToken:SourceGithubConfigurationCredentialsPersonalAccessToken"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGithubConfigurationCredentialsOAuth:SourceGithubConfigurationCredentialsOAuth": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "OAuth access token\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "OAuth Client Id\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "OAuth Client secret\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceGithubConfigurationCredentialsPersonalAccessToken:SourceGithubConfigurationCredentialsPersonalAccessToken": {
            "properties": {
                "personalAccessToken": {
                    "type": "string",
                    "description": "Log into GitHub and then generate a \u003ca href=\"https://github.com/settings/tokens\"\u003epersonal access token\u003c/a\u003e. To load balance your API quota consumption across multiple API tokens, input multiple tokens separated with \",\"\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "personalAccessToken"
            ]
        },
        "airbyte:index/SourceGitlabConfiguration:SourceGitlabConfiguration": {
            "properties": {
                "apiUrl": {
                    "type": "string",
                    "description": "Please enter your basic URL from GitLab instance. Default: \"gitlab.com\"\n"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceGitlabConfigurationCredentials:SourceGitlabConfigurationCredentials"
                },
                "groups": {
                    "type": "string",
                    "description": "[DEPRECATED] Space-delimited list of groups. e.g. airbyte.io.\n"
                },
                "groupsLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of groups. e.g. airbyte.io.\n"
                },
                "projects": {
                    "type": "string",
                    "description": "[DEPRECATED] Space-delimited list of projects. e.g. airbyte.io/documentation meltano/tap-gitlab.\n"
                },
                "projectsLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Space-delimited list of projects. e.g. airbyte.io/documentation meltano/tap-gitlab.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The date from which you'd like to replicate data for GitLab API, in the format YYYY-MM-DDT00:00:00Z. Optional. If not set, all data will be replicated. All data generated after this date will be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiUrl",
                        "credentials"
                    ]
                }
            }
        },
        "airbyte:index/SourceGitlabConfigurationCredentials:SourceGitlabConfigurationCredentials": {
            "properties": {
                "oAuth20": {
                    "$ref": "#/types/airbyte:index/SourceGitlabConfigurationCredentialsOAuth20:SourceGitlabConfigurationCredentialsOAuth20"
                },
                "privateToken": {
                    "$ref": "#/types/airbyte:index/SourceGitlabConfigurationCredentialsPrivateToken:SourceGitlabConfigurationCredentialsPrivateToken"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGitlabConfigurationCredentialsOAuth20:SourceGitlabConfigurationCredentialsOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access Token for making authenticated requests.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "The API ID of the Gitlab developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The API Secret the Gitlab developer application.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The key to refresh the expired access_token.\n",
                    "secret": true
                },
                "tokenExpiryDate": {
                    "type": "string",
                    "description": "The date-time when the access token should be refreshed.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ]
        },
        "airbyte:index/SourceGitlabConfigurationCredentialsPrivateToken:SourceGitlabConfigurationCredentialsPrivateToken": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Log into your Gitlab account and then generate a personal Access Token.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceGlassfrogConfiguration:SourceGlassfrogConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key provided by Glassfrog\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceGnewsConfiguration:SourceGnewsConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API Key\n",
                    "secret": true
                },
                "country": {
                    "type": "string",
                    "description": "This parameter allows you to specify the country where the news articles returned by the API were published, the contents of the articles are not necessarily related to the specified country. You have to set as value the 2 letters code of the country you want to filter. must be one of [\"au\", \"br\", \"ca\", \"cn\", \"eg\", \"fr\", \"de\", \"gr\", \"hk\", \"in\", \"ie\", \"il\", \"it\", \"jp\", \"nl\", \"no\", \"pk\", \"pe\", \"ph\", \"pt\", \"ro\", \"ru\", \"sg\", \"es\", \"se\", \"ch\", \"tw\", \"ua\", \"gb\", \"us\"]\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "This parameter allows you to filter the articles that have a publication date smaller than or equal to the  specified value. The date must respect the following format: YYYY-MM-DD hh:mm:ss (in UTC)\n"
                },
                "ins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This parameter allows you to choose in which attributes the keywords are searched. The attributes that can be set are title, description and content. It is possible to combine several attributes.\n"
                },
                "language": {
                    "type": "string",
                    "description": "must be one of [\"ar\", \"zh\", \"nl\", \"en\", \"fr\", \"de\", \"el\", \"he\", \"hi\", \"it\", \"ja\", \"ml\", \"mr\", \"no\", \"pt\", \"ro\", \"ru\", \"es\", \"sv\", \"ta\", \"te\", \"uk\"]\n"
                },
                "nullables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This parameter allows you to specify the attributes that you allow to return null values. The attributes that  can be set are title, description and content. It is possible to combine several attributes\n"
                },
                "query": {
                    "type": "string",
                    "description": "This parameter allows you to specify your search keywords to find the news articles you are looking for. The keywords will be used to return the most relevant articles. It is possible to use logical operators  with keywords. - Phrase Search Operator: This operator allows you to make an exact search. Keywords surrounded by \n  quotation marks are used to search for articles with the exact same keyword sequence. \n  For example the query: \"Apple iPhone\" will return articles matching at least once this sequence of keywords.\n- Logical AND Operator: This operator allows you to make sure that several keywords are all used in the article\n  search. By default the space character acts as an AND operator, it is possible to replace the space character \n  by AND to obtain the same result. For example the query: Apple Microsoft is equivalent to Apple AND Microsoft\n- Logical OR Operator: This operator allows you to retrieve articles matching the keyword a or the keyword b.\n  It is important to note that this operator has a higher precedence than the AND operator. For example the \n  query: Apple OR Microsoft will return all articles matching the keyword Apple as well as all articles matching \n  the keyword Microsoft\n- Logical NOT Operator: This operator allows you to remove from the results the articles corresponding to the\n  specified keywords. To use it, you need to add NOT in front of each word or phrase surrounded by quotes.\n  For example the query: Apple NOT iPhone will return all articles matching the keyword Apple but not the keyword\n  iPhone\n"
                },
                "sortby": {
                    "type": "string",
                    "description": "This parameter allows you to choose with which type of sorting the articles should be returned. Two values  are possible:\n  - publishedAt = sort by publication date, the articles with the most recent publication date are returned first\n  - relevance = sort by best match to keywords, the articles with the best match are returned first\nmust be one of [\"publishedAt\", \"relevance\"]\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "This parameter allows you to filter the articles that have a publication date greater than or equal to the  specified value. The date must respect the following format: YYYY-MM-DD hh:mm:ss (in UTC)\n"
                },
                "topHeadlinesQuery": {
                    "type": "string",
                    "description": "This parameter allows you to specify your search keywords to find the news articles you are looking for. The keywords will be used to return the most relevant articles. It is possible to use logical operators  with keywords. - Phrase Search Operator: This operator allows you to make an exact search. Keywords surrounded by \n  quotation marks are used to search for articles with the exact same keyword sequence. \n  For example the query: \"Apple iPhone\" will return articles matching at least once this sequence of keywords.\n- Logical AND Operator: This operator allows you to make sure that several keywords are all used in the article\n  search. By default the space character acts as an AND operator, it is possible to replace the space character \n  by AND to obtain the same result. For example the query: Apple Microsoft is equivalent to Apple AND Microsoft\n- Logical OR Operator: This operator allows you to retrieve articles matching the keyword a or the keyword b.\n  It is important to note that this operator has a higher precedence than the AND operator. For example the \n  query: Apple OR Microsoft will return all articles matching the keyword Apple as well as all articles matching \n  the keyword Microsoft\n- Logical NOT Operator: This operator allows you to remove from the results the articles corresponding to the\n  specified keywords. To use it, you need to add NOT in front of each word or phrase surrounded by quotes.\n  For example the query: Apple NOT iPhone will return all articles matching the keyword Apple but not the keyword\n  iPhone\n"
                },
                "topHeadlinesTopic": {
                    "type": "string",
                    "description": "This parameter allows you to change the category for the request. must be one of [\"breaking-news\", \"world\", \"nation\", \"business\", \"technology\", \"entertainment\", \"sports\", \"science\", \"health\"]\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "query"
            ]
        },
        "airbyte:index/SourceGoogleAdsConfiguration:SourceGoogleAdsConfiguration": {
            "properties": {
                "conversionWindowDays": {
                    "type": "integer",
                    "description": "A conversion window is the number of days after an ad interaction (such as an ad click or video view) during which a conversion, such as a purchase, is recorded in Google Ads. For more information, see \u003ca href=\"https://support.google.com/google-ads/answer/3123169?hl=en\"\u003eGoogle's documentation\u003c/a\u003e. Default: 14\n"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAdsConfigurationCredentials:SourceGoogleAdsConfigurationCredentials"
                },
                "customQueriesArrays": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceGoogleAdsConfigurationCustomQueriesArray:SourceGoogleAdsConfigurationCustomQueriesArray"
                    }
                },
                "customerId": {
                    "type": "string",
                    "description": "Comma-separated list of (client) customer IDs. Each customer ID must be specified as a 10-digit number without dashes. For detailed instructions on finding this value, refer to our \u003ca href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\"\u003edocumentation\u003c/a\u003e.\n"
                },
                "customerStatusFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of customer statuses to filter on. For detailed info about what each status mean refer to Google Ads \u003ca href=\"https://developers.google.com/google-ads/api/reference/rpc/v15/CustomerStatusEnum.CustomerStatus\"\u003edocumentation\u003c/a\u003e.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "UTC date in the format YYYY-MM-DD. Any data after this date will not be replicated. (Default value of today is used if not set)\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date in the format YYYY-MM-DD. Any data before this date will not be replicated. (Default value of two years ago is used if not set)\n"
                }
            },
            "type": "object",
            "required": [
                "credentials"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "conversionWindowDays",
                        "credentials"
                    ]
                }
            }
        },
        "airbyte:index/SourceGoogleAdsConfigurationCredentials:SourceGoogleAdsConfigurationCredentials": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The Access Token for making authenticated requests. For detailed instructions on finding this value, refer to our \u003ca href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\"\u003edocumentation\u003c/a\u003e.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your Google Ads developer application. For detailed instructions on finding this value, refer to our \u003ca href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\"\u003edocumentation\u003c/a\u003e.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your Google Ads developer application. For detailed instructions on finding this value, refer to our \u003ca href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\"\u003edocumentation\u003c/a\u003e.\n"
                },
                "developerToken": {
                    "type": "string",
                    "description": "The Developer Token granted by Google to use their APIs. For detailed instructions on finding this value, refer to our \u003ca href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\"\u003edocumentation\u003c/a\u003e.\n",
                    "secret": true
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The token used to obtain a new Access Token. For detailed instructions on finding this value, refer to our \u003ca href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\"\u003edocumentation\u003c/a\u003e.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "developerToken",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceGoogleAdsConfigurationCustomQueriesArray:SourceGoogleAdsConfigurationCustomQueriesArray": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "A custom defined GAQL query for building the report. Avoid including the segments.date field; wherever possible, Airbyte will automatically include it for incremental syncs. For more information, refer to \u003ca href=\"https://developers.google.com/google-ads/api/fields/v11/overview_query_builder\"\u003eGoogle's documentation\u003c/a\u003e.\n"
                },
                "tableName": {
                    "type": "string",
                    "description": "The table name in your destination database for the chosen query.\n"
                }
            },
            "type": "object",
            "required": [
                "query",
                "tableName"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfiguration:SourceGoogleAnalyticsDataApiConfiguration": {
            "properties": {
                "convertConversionsEvent": {
                    "type": "boolean",
                    "description": "Enables conversion of `conversions:*` event metrics from integers to floats. This is beneficial for preventing data rounding when the API returns float values for any `conversions:*` fields. Default: false\n"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentials:SourceGoogleAnalyticsDataApiConfigurationCredentials",
                    "description": "Credentials for the service\n"
                },
                "customReportsArrays": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArray:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArray"
                    },
                    "description": "You can add your Custom Analytics report by creating one.\n"
                },
                "dateRangesStartDate": {
                    "type": "string",
                    "description": "The start date from which to replicate report data in the format YYYY-MM-DD. Data generated before this date will not be included in the report. Not applied to custom Cohort reports.\n"
                },
                "keepEmptyRows": {
                    "type": "boolean",
                    "description": "If false, each row with all metrics equal to 0 will not be returned. If true, these rows will be returned if they are not separately removed by a filter. More information is available in \u003ca href=\"https://developers.google.com/analytics/devguides/reporting/data/v1/rest/v1beta/properties/runReport#request-body\"\u003ethe documentation\u003c/a\u003e. Default: false\n"
                },
                "propertyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of your Property IDs. The Property ID is a unique number assigned to each property in Google Analytics, found in your GA4 property URL. This ID allows the connector to track the specific events associated with your property. Refer to the \u003ca href='https://developers.google.com/analytics/devguides/reporting/data/v1/property-id#what_is_my_property_id'\u003eGoogle Analytics documentation\u003c/a\u003e to locate your property ID.\n"
                },
                "windowInDays": {
                    "type": "integer",
                    "description": "The interval in days for each data request made to the Google Analytics API. A larger value speeds up data sync, but increases the chance of data sampling, which may result in inaccuracies. We recommend a value of 1 to minimize sampling, unless speed is an absolute priority over accuracy. Acceptable values range from 1 to 364. Does not apply to custom Cohort reports. More information is available in \u003ca href=\"https://docs.airbyte.com/integrations/sources/google-analytics-data-api\"\u003ethe documentation\u003c/a\u003e. Default: 1\n"
                }
            },
            "type": "object",
            "required": [
                "propertyIds"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "convertConversionsEvent",
                        "keepEmptyRows",
                        "propertyIds",
                        "windowInDays"
                    ]
                }
            }
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentials:SourceGoogleAnalyticsDataApiConfigurationCredentials": {
            "properties": {
                "authenticateViaGoogleOauth": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentialsAuthenticateViaGoogleOauth:SourceGoogleAnalyticsDataApiConfigurationCredentialsAuthenticateViaGoogleOauth"
                },
                "serviceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentialsServiceAccountKeyAuthentication:SourceGoogleAnalyticsDataApiConfigurationCredentialsServiceAccountKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentialsAuthenticateViaGoogleOauth:SourceGoogleAnalyticsDataApiConfigurationCredentialsAuthenticateViaGoogleOauth": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access Token for making authenticated requests.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your Google Analytics developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your Google Analytics developer application.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The token for obtaining a new access token.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentialsServiceAccountKeyAuthentication:SourceGoogleAnalyticsDataApiConfigurationCredentialsServiceAccountKeyAuthentication": {
            "properties": {
                "credentialsJson": {
                    "type": "string",
                    "description": "The JSON key linked to the service account used for authorization. For steps on obtaining this key, refer to \u003ca href=\"https://docs.airbyte.com/integrations/sources/google-analytics-data-api/#setup-guide\"\u003ethe setup guide\u003c/a\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "credentialsJson"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArray:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArray": {
            "properties": {
                "cohortSpec": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpec:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpec",
                    "description": "Cohort reports creates a time series of user retention for the cohort.\n"
                },
                "dimensionFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilter",
                    "description": "Dimensions filter\n"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of dimensions.\n"
                },
                "metricFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilter",
                    "description": "Metrics filter\n"
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of metrics.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the custom report, this name would be used as stream name.\n"
                }
            },
            "type": "object",
            "required": [
                "dimensions",
                "metrics",
                "name"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpec:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpec": {
            "properties": {
                "disabled": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecDisabled:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecDisabled"
                },
                "enabled": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecEnabled:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecEnabled"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecDisabled:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecDisabled": {
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecEnabled:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecEnabled": {
            "properties": {
                "cohortReportSettings": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecEnabledCohortReportSettings:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecEnabledCohortReportSettings",
                    "description": "Optional settings for a cohort report.\n"
                },
                "cohorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecEnabledCohort:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecEnabledCohort"
                    }
                },
                "cohortsRange": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecEnabledCohortsRange:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecEnabledCohortsRange"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecEnabledCohort:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecEnabledCohort": {
            "properties": {
                "dateRange": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecEnabledCohortDateRange:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecEnabledCohortDateRange"
                },
                "dimension": {
                    "type": "string",
                    "description": "Dimension used by the cohort. Required and only supports `firstSessionDate`. must be one of [\"firstSessionDate\"]\n"
                },
                "name": {
                    "type": "string",
                    "description": "Assigns a name to this cohort. If not set, cohorts are named by their zero based index cohort_0, cohort_1, etc.\n"
                }
            },
            "type": "object",
            "required": [
                "dateRange",
                "dimension"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecEnabledCohortDateRange:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecEnabledCohortDateRange": {
            "properties": {
                "endDate": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "endDate",
                "startDate"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecEnabledCohortReportSettings:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecEnabledCohortReportSettings": {
            "properties": {
                "accumulate": {
                    "type": "boolean",
                    "description": "If true, accumulates the result from first touch day to the end day\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecEnabledCohortsRange:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayCohortSpecEnabledCohortsRange": {
            "properties": {
                "endOffset": {
                    "type": "integer",
                    "description": "Specifies the end date of the extended reporting date range for a cohort report.\n"
                },
                "granularity": {
                    "type": "string",
                    "description": "The granularity used to interpret the startOffset and endOffset for the extended reporting date range for a cohort report. must be one of [\"GRANULARITY_UNSPECIFIED\", \"DAILY\", \"WEEKLY\", \"MONTHLY\"]\n"
                },
                "startOffset": {
                    "type": "integer",
                    "description": "Specifies the start date of the extended reporting date range for a cohort report.\n"
                }
            },
            "type": "object",
            "required": [
                "endOffset",
                "granularity"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilter": {
            "properties": {
                "andGroup": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroup:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroup",
                    "description": "The FilterExpressions in andGroup have an AND relationship.\n"
                },
                "filter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilter",
                    "description": "A primitive filter. In the same FilterExpression, all of the filter's field names need to be either all dimensions.\n"
                },
                "notExpression": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpression:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpression",
                    "description": "The FilterExpression is NOT of notExpression.\n"
                },
                "orGroup": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroup:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroup",
                    "description": "The FilterExpressions in orGroup have an OR relationship.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroup:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroup": {
            "properties": {
                "expressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpression:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpression"
                    }
                }
            },
            "type": "object",
            "required": [
                "expressions"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpression:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpression": {
            "properties": {
                "fieldName": {
                    "type": "string"
                },
                "filter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilter"
                }
            },
            "type": "object",
            "required": [
                "fieldName",
                "filter"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilter": {
            "properties": {
                "betweenFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilter"
                },
                "inListFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterInListFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterInListFilter"
                },
                "numericFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterNumericFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterNumericFilter"
                },
                "stringFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterStringFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterStringFilter"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilter": {
            "properties": {
                "fromValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterFromValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterFromValue"
                },
                "toValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterToValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterToValue"
                }
            },
            "type": "object",
            "required": [
                "fromValue",
                "toValue"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterFromValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterFromValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterFromValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterFromValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterFromValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterFromValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterFromValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterFromValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterFromValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterFromValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterToValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterToValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterToValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterToValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterToValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterToValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterToValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterToValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterToValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterBetweenFilterToValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterInListFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterInListFilter": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "values"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterNumericFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterNumericFilter": {
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterNumericFilterValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterNumericFilterValue"
                }
            },
            "type": "object",
            "required": [
                "operations",
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterNumericFilterValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterNumericFilterValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterNumericFilterValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterNumericFilterValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterNumericFilterValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterNumericFilterValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterNumericFilterValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterNumericFilterValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterNumericFilterValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterNumericFilterValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterStringFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterAndGroupExpressionFilterStringFilter": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "matchTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilter": {
            "properties": {
                "fieldName": {
                    "type": "string"
                },
                "filter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilter"
                }
            },
            "type": "object",
            "required": [
                "fieldName",
                "filter"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilter": {
            "properties": {
                "betweenFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilter"
                },
                "inListFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterInListFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterInListFilter"
                },
                "numericFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterNumericFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterNumericFilter"
                },
                "stringFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterStringFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterStringFilter"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilter": {
            "properties": {
                "fromValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterFromValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterFromValue"
                },
                "toValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterToValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterToValue"
                }
            },
            "type": "object",
            "required": [
                "fromValue",
                "toValue"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterFromValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterFromValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterFromValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterFromValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterFromValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterFromValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterFromValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterFromValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterFromValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterFromValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterToValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterToValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterToValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterToValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterToValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterToValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterToValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterToValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterToValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterBetweenFilterToValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterInListFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterInListFilter": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "values"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterNumericFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterNumericFilter": {
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterNumericFilterValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterNumericFilterValue"
                }
            },
            "type": "object",
            "required": [
                "operations",
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterNumericFilterValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterNumericFilterValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterNumericFilterValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterNumericFilterValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterNumericFilterValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterNumericFilterValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterNumericFilterValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterNumericFilterValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterNumericFilterValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterNumericFilterValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterStringFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterFilterFilterStringFilter": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "matchTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpression:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpression": {
            "properties": {
                "expression": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpression:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpression"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpression:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpression": {
            "properties": {
                "fieldName": {
                    "type": "string"
                },
                "filter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilter"
                }
            },
            "type": "object",
            "required": [
                "fieldName",
                "filter"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilter": {
            "properties": {
                "betweenFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilter"
                },
                "inListFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterInListFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterInListFilter"
                },
                "numericFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterNumericFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterNumericFilter"
                },
                "stringFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterStringFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterStringFilter"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilter": {
            "properties": {
                "fromValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterFromValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterFromValue"
                },
                "toValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterToValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterToValue"
                }
            },
            "type": "object",
            "required": [
                "fromValue",
                "toValue"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterFromValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterFromValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterFromValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterFromValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterFromValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterFromValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterFromValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterFromValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterFromValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterFromValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterToValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterToValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterToValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterToValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterToValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterToValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterToValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterToValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterToValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterBetweenFilterToValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterInListFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterInListFilter": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "values"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterNumericFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterNumericFilter": {
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterNumericFilterValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterNumericFilterValue"
                }
            },
            "type": "object",
            "required": [
                "operations",
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterNumericFilterValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterNumericFilterValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterNumericFilterValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterNumericFilterValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterNumericFilterValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterNumericFilterValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterNumericFilterValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterNumericFilterValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterNumericFilterValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterNumericFilterValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterStringFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterNotExpressionExpressionFilterStringFilter": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "matchTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroup:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroup": {
            "properties": {
                "expressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpression:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpression"
                    }
                }
            },
            "type": "object",
            "required": [
                "expressions"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpression:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpression": {
            "properties": {
                "fieldName": {
                    "type": "string"
                },
                "filter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilter"
                }
            },
            "type": "object",
            "required": [
                "fieldName",
                "filter"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilter": {
            "properties": {
                "betweenFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilter"
                },
                "inListFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterInListFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterInListFilter"
                },
                "numericFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterNumericFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterNumericFilter"
                },
                "stringFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterStringFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterStringFilter"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilter": {
            "properties": {
                "fromValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterFromValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterFromValue"
                },
                "toValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterToValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterToValue"
                }
            },
            "type": "object",
            "required": [
                "fromValue",
                "toValue"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterFromValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterFromValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterFromValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterFromValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterFromValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterFromValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterFromValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterFromValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterFromValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterFromValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterToValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterToValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterToValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterToValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterToValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterToValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterToValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterToValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterToValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterBetweenFilterToValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterInListFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterInListFilter": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "values"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterNumericFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterNumericFilter": {
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterNumericFilterValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterNumericFilterValue"
                }
            },
            "type": "object",
            "required": [
                "operations",
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterNumericFilterValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterNumericFilterValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterNumericFilterValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterNumericFilterValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterNumericFilterValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterNumericFilterValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterNumericFilterValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterNumericFilterValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterNumericFilterValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterNumericFilterValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterStringFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayDimensionFilterOrGroupExpressionFilterStringFilter": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "matchTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilter": {
            "properties": {
                "andGroup": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroup:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroup",
                    "description": "The FilterExpressions in andGroup have an AND relationship.\n"
                },
                "filter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilter",
                    "description": "A primitive filter. In the same FilterExpression, all of the filter's field names need to be either all metrics.\n"
                },
                "notExpression": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpression:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpression",
                    "description": "The FilterExpression is NOT of notExpression.\n"
                },
                "orGroup": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroup:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroup",
                    "description": "The FilterExpressions in orGroup have an OR relationship.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroup:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroup": {
            "properties": {
                "expressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpression:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpression"
                    }
                }
            },
            "type": "object",
            "required": [
                "expressions"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpression:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpression": {
            "properties": {
                "fieldName": {
                    "type": "string"
                },
                "filter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilter"
                }
            },
            "type": "object",
            "required": [
                "fieldName",
                "filter"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilter": {
            "properties": {
                "betweenFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilter"
                },
                "inListFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterInListFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterInListFilter"
                },
                "numericFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterNumericFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterNumericFilter"
                },
                "stringFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterStringFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterStringFilter"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilter": {
            "properties": {
                "fromValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterFromValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterFromValue"
                },
                "toValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterToValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterToValue"
                }
            },
            "type": "object",
            "required": [
                "fromValue",
                "toValue"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterFromValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterFromValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterFromValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterFromValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterFromValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterFromValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterFromValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterFromValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterFromValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterFromValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterToValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterToValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterToValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterToValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterToValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterToValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterToValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterToValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterToValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterBetweenFilterToValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterInListFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterInListFilter": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "values"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterNumericFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterNumericFilter": {
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterNumericFilterValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterNumericFilterValue"
                }
            },
            "type": "object",
            "required": [
                "operations",
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterNumericFilterValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterNumericFilterValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterNumericFilterValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterNumericFilterValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterNumericFilterValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterNumericFilterValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterNumericFilterValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterNumericFilterValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterNumericFilterValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterNumericFilterValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterStringFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterAndGroupExpressionFilterStringFilter": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "matchTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilter": {
            "properties": {
                "fieldName": {
                    "type": "string"
                },
                "filter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilter"
                }
            },
            "type": "object",
            "required": [
                "fieldName",
                "filter"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilter": {
            "properties": {
                "betweenFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilter"
                },
                "inListFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterInListFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterInListFilter"
                },
                "numericFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterNumericFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterNumericFilter"
                },
                "stringFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterStringFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterStringFilter"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilter": {
            "properties": {
                "fromValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterFromValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterFromValue"
                },
                "toValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterToValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterToValue"
                }
            },
            "type": "object",
            "required": [
                "fromValue",
                "toValue"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterFromValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterFromValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterFromValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterFromValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterFromValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterFromValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterFromValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterFromValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterFromValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterFromValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterToValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterToValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterToValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterToValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterToValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterToValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterToValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterToValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterToValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterBetweenFilterToValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterInListFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterInListFilter": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "values"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterNumericFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterNumericFilter": {
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterNumericFilterValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterNumericFilterValue"
                }
            },
            "type": "object",
            "required": [
                "operations",
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterNumericFilterValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterNumericFilterValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterNumericFilterValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterNumericFilterValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterNumericFilterValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterNumericFilterValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterNumericFilterValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterNumericFilterValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterNumericFilterValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterNumericFilterValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterStringFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterFilterFilterStringFilter": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "matchTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpression:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpression": {
            "properties": {
                "expression": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpression:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpression"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpression:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpression": {
            "properties": {
                "fieldName": {
                    "type": "string"
                },
                "filter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilter"
                }
            },
            "type": "object",
            "required": [
                "fieldName",
                "filter"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilter": {
            "properties": {
                "betweenFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilter"
                },
                "inListFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterInListFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterInListFilter"
                },
                "numericFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterNumericFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterNumericFilter"
                },
                "stringFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterStringFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterStringFilter"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilter": {
            "properties": {
                "fromValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterFromValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterFromValue"
                },
                "toValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterToValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterToValue"
                }
            },
            "type": "object",
            "required": [
                "fromValue",
                "toValue"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterFromValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterFromValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterFromValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterFromValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterFromValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterFromValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterFromValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterFromValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterFromValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterFromValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterToValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterToValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterToValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterToValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterToValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterToValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterToValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterToValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterToValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterBetweenFilterToValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterInListFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterInListFilter": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "values"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterNumericFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterNumericFilter": {
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterNumericFilterValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterNumericFilterValue"
                }
            },
            "type": "object",
            "required": [
                "operations",
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterNumericFilterValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterNumericFilterValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterNumericFilterValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterNumericFilterValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterNumericFilterValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterNumericFilterValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterNumericFilterValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterNumericFilterValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterNumericFilterValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterNumericFilterValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterStringFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterNotExpressionExpressionFilterStringFilter": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "matchTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroup:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroup": {
            "properties": {
                "expressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpression:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpression"
                    }
                }
            },
            "type": "object",
            "required": [
                "expressions"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpression:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpression": {
            "properties": {
                "fieldName": {
                    "type": "string"
                },
                "filter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilter"
                }
            },
            "type": "object",
            "required": [
                "fieldName",
                "filter"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilter": {
            "properties": {
                "betweenFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilter"
                },
                "inListFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterInListFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterInListFilter"
                },
                "numericFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterNumericFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterNumericFilter"
                },
                "stringFilter": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterStringFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterStringFilter"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilter": {
            "properties": {
                "fromValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterFromValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterFromValue"
                },
                "toValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterToValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterToValue"
                }
            },
            "type": "object",
            "required": [
                "fromValue",
                "toValue"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterFromValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterFromValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterFromValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterFromValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterFromValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterFromValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterFromValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterFromValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterFromValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterFromValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterToValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterToValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterToValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterToValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterToValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterToValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterToValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterToValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterToValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterBetweenFilterToValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterInListFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterInListFilter": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "values"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterNumericFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterNumericFilter": {
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterNumericFilterValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterNumericFilterValue"
                }
            },
            "type": "object",
            "required": [
                "operations",
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterNumericFilterValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterNumericFilterValue": {
            "properties": {
                "doubleValue": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterNumericFilterValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterNumericFilterValueDoubleValue"
                },
                "int64Value": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterNumericFilterValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterNumericFilterValueInt64Value"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterNumericFilterValueDoubleValue:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterNumericFilterValueDoubleValue": {
            "properties": {
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterNumericFilterValueInt64Value:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterNumericFilterValueInt64Value": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterStringFilter:SourceGoogleAnalyticsDataApiConfigurationCustomReportsArrayMetricFilterOrGroupExpressionFilterStringFilter": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "matchTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsV4ServiceAccountOnlyConfiguration:SourceGoogleAnalyticsV4ServiceAccountOnlyConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsV4ServiceAccountOnlyConfigurationCredentials:SourceGoogleAnalyticsV4ServiceAccountOnlyConfigurationCredentials",
                    "description": "Credentials for the service\n"
                },
                "customReports": {
                    "type": "string",
                    "description": "A JSON array describing the custom reports you want to sync from Google Analytics. See \u003ca href=\"https://docs.airbyte.com/integrations/sources/google-analytics-v4#data-processing-latency\"\u003ethe docs\u003c/a\u003e for more information about the exact format you can use to fill out this field.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The date in the format YYYY-MM-DD. Any data after this date will not be replicated.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The date in the format YYYY-MM-DD. Any data before this date will not be replicated.\n"
                },
                "viewId": {
                    "type": "string",
                    "description": "The ID for the Google Analytics View you want to fetch data from. This can be found from the \u003ca href=\"https://ga-dev-tools.appspot.com/account-explorer/\"\u003eGoogle Analytics Account Explorer\u003c/a\u003e.\n"
                },
                "windowInDays": {
                    "type": "integer",
                    "description": "The time increment used by the connector when requesting data from the Google Analytics API. More information is available in the \u003ca href=\"https://docs.airbyte.com/integrations/sources/google-analytics-v4/#sampling-in-reports\"\u003ethe docs\u003c/a\u003e. The bigger this value is, the faster the sync will be, but the more likely that sampling will be applied to your data, potentially causing inaccuracies in the returned results. We recommend setting this to 1 unless you have a hard requirement to make the sync faster at the expense of accuracy. The minimum allowed value for this field is 1, and the maximum is 364. . Default: 1\n"
                }
            },
            "type": "object",
            "required": [
                "startDate",
                "viewId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "startDate",
                        "viewId",
                        "windowInDays"
                    ]
                }
            }
        },
        "airbyte:index/SourceGoogleAnalyticsV4ServiceAccountOnlyConfigurationCredentials:SourceGoogleAnalyticsV4ServiceAccountOnlyConfigurationCredentials": {
            "properties": {
                "serviceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsV4ServiceAccountOnlyConfigurationCredentialsServiceAccountKeyAuthentication:SourceGoogleAnalyticsV4ServiceAccountOnlyConfigurationCredentialsServiceAccountKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsV4ServiceAccountOnlyConfigurationCredentialsServiceAccountKeyAuthentication:SourceGoogleAnalyticsV4ServiceAccountOnlyConfigurationCredentialsServiceAccountKeyAuthentication": {
            "properties": {
                "credentialsJson": {
                    "type": "string",
                    "description": "The JSON key of the service account to use for authorization\n"
                }
            },
            "type": "object",
            "required": [
                "credentialsJson"
            ]
        },
        "airbyte:index/SourceGoogleDirectoryConfiguration:SourceGoogleDirectoryConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDirectoryConfigurationCredentials:SourceGoogleDirectoryConfigurationCredentials",
                    "description": "Google APIs use the OAuth 2.0 protocol for authentication and authorization. The Source supports \u003ca href=\"https://developers.google.com/identity/protocols/oauth2#webserver\" target=\"_blank\"\u003eWeb server application\u003c/a\u003e and \u003ca href=\"https://developers.google.com/identity/protocols/oauth2#serviceaccount\" target=\"_blank\"\u003eService accounts\u003c/a\u003e scenarios.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleDirectoryConfigurationCredentials:SourceGoogleDirectoryConfigurationCredentials": {
            "properties": {
                "serviceAccountKey": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDirectoryConfigurationCredentialsServiceAccountKey:SourceGoogleDirectoryConfigurationCredentialsServiceAccountKey",
                    "description": "For these scenario user should obtain service account's credentials from the Google API Console and provide delegated email.\n"
                },
                "signInViaGoogleOAuth": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDirectoryConfigurationCredentialsSignInViaGoogleOAuth:SourceGoogleDirectoryConfigurationCredentialsSignInViaGoogleOAuth",
                    "description": "For these scenario user only needs to give permission to read Google Directory data.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleDirectoryConfigurationCredentialsServiceAccountKey:SourceGoogleDirectoryConfigurationCredentialsServiceAccountKey": {
            "properties": {
                "credentialsJson": {
                    "type": "string",
                    "description": "The contents of the JSON service account key. See the \u003ca href=\"https://developers.google.com/admin-sdk/directory/v1/guides/delegation\"\u003edocs\u003c/a\u003e for more information on how to generate this key.\n"
                },
                "email": {
                    "type": "string",
                    "description": "The email of the user, which has permissions to access the Google Workspace Admin APIs.\n"
                }
            },
            "type": "object",
            "required": [
                "credentialsJson",
                "email"
            ]
        },
        "airbyte:index/SourceGoogleDirectoryConfigurationCredentialsSignInViaGoogleOAuth:SourceGoogleDirectoryConfigurationCredentialsSignInViaGoogleOAuth": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of the developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of the developer application.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The Token for obtaining a new access token.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceGoogleDriveConfiguration:SourceGoogleDriveConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDriveConfigurationCredentials:SourceGoogleDriveConfigurationCredentials",
                    "description": "Credentials for connecting to the Google Drive API\n"
                },
                "folderUrl": {
                    "type": "string",
                    "description": "URL for the folder you want to sync. Using individual streams and glob patterns, it's possible to only sync a subset of all files located in the folder.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00.000000Z. Any file modified before this date will not be replicated.\n"
                },
                "streams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceGoogleDriveConfigurationStream:SourceGoogleDriveConfigurationStream"
                    },
                    "description": "Each instance of this configuration defines a \u003ca href=\"https://docs.airbyte.com/cloud/core-concepts#stream\"\u003estream\u003c/a\u003e. Use this to define which files belong in the stream, their format, and how they should be parsed and validated. When sending data to warehouse destination such as Snowflake or BigQuery, each stream is a separate table.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "folderUrl",
                "streams"
            ]
        },
        "airbyte:index/SourceGoogleDriveConfigurationCredentials:SourceGoogleDriveConfigurationCredentials": {
            "properties": {
                "authenticateViaGoogleOAuth": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDriveConfigurationCredentialsAuthenticateViaGoogleOAuth:SourceGoogleDriveConfigurationCredentialsAuthenticateViaGoogleOAuth"
                },
                "serviceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDriveConfigurationCredentialsServiceAccountKeyAuthentication:SourceGoogleDriveConfigurationCredentialsServiceAccountKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleDriveConfigurationCredentialsAuthenticateViaGoogleOAuth:SourceGoogleDriveConfigurationCredentialsAuthenticateViaGoogleOAuth": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Client ID for the Google Drive API\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client Secret for the Google Drive API\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Refresh Token for the Google Drive API\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceGoogleDriveConfigurationCredentialsServiceAccountKeyAuthentication:SourceGoogleDriveConfigurationCredentialsServiceAccountKeyAuthentication": {
            "properties": {
                "serviceAccountInfo": {
                    "type": "string",
                    "description": "The JSON key of the service account to use for authorization. Read more \u003ca href=\"https://cloud.google.com/iam/docs/creating-managing-service-account-keys#creating_service_account_keys\"\u003ehere\u003c/a\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "serviceAccountInfo"
            ]
        },
        "airbyte:index/SourceGoogleDriveConfigurationStream:SourceGoogleDriveConfigurationStream": {
            "properties": {
                "daysToSyncIfHistoryIsFull": {
                    "type": "integer",
                    "description": "When the state history of the file store is full, syncs will only read files that were last modified in the provided day range. Default: 3\n"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDriveConfigurationStreamFormat:SourceGoogleDriveConfigurationStreamFormat",
                    "description": "The configuration options that are used to alter how to read incoming files that deviate from the standard formatting.\n"
                },
                "globs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The pattern used to specify which files should be selected from the file system. For more information on glob pattern matching look \u003ca href=\"https://en.wikipedia.org/wiki/Glob_(programming)\"\u003ehere\u003c/a\u003e.\n"
                },
                "inputSchema": {
                    "type": "string",
                    "description": "The schema that will be used to validate records extracted from the file. This will override the stream schema that is auto-detected from incoming files.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the stream.\n"
                },
                "primaryKey": {
                    "type": "string",
                    "description": "The column or columns (for a composite key) that serves as the unique identifier of a record. If empty, the primary key will default to the parser's default primary key.\n",
                    "secret": true
                },
                "schemaless": {
                    "type": "boolean",
                    "description": "When enabled, syncs will not validate or structure records against the stream's schema. Default: false\n"
                },
                "validationPolicy": {
                    "type": "string",
                    "description": "The name of the validation policy that dictates sync behavior when a record does not adhere to the stream schema. must be one of [\"Emit Record\", \"Skip Record\", \"Wait for Discover\"]; Default: \"Emit Record\"\n"
                }
            },
            "type": "object",
            "required": [
                "format",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "daysToSyncIfHistoryIsFull",
                        "format",
                        "name",
                        "schemaless",
                        "validationPolicy"
                    ]
                }
            }
        },
        "airbyte:index/SourceGoogleDriveConfigurationStreamFormat:SourceGoogleDriveConfigurationStreamFormat": {
            "properties": {
                "avroFormat": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDriveConfigurationStreamFormatAvroFormat:SourceGoogleDriveConfigurationStreamFormatAvroFormat"
                },
                "csvFormat": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDriveConfigurationStreamFormatCsvFormat:SourceGoogleDriveConfigurationStreamFormatCsvFormat"
                },
                "documentFileTypeFormatExperimental": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDriveConfigurationStreamFormatDocumentFileTypeFormatExperimental:SourceGoogleDriveConfigurationStreamFormatDocumentFileTypeFormatExperimental",
                    "description": "Extract text from document formats (.pdf, .docx, .md, .pptx) and emit as one record per file.\n"
                },
                "jsonlFormat": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDriveConfigurationStreamFormatJsonlFormat:SourceGoogleDriveConfigurationStreamFormatJsonlFormat"
                },
                "parquetFormat": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDriveConfigurationStreamFormatParquetFormat:SourceGoogleDriveConfigurationStreamFormatParquetFormat"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleDriveConfigurationStreamFormatAvroFormat:SourceGoogleDriveConfigurationStreamFormatAvroFormat": {
            "properties": {
                "doubleAsString": {
                    "type": "boolean",
                    "description": "Whether to convert double fields to strings. This is recommended if you have decimal numbers with a high degree of precision because there can be a loss precision when handling floating point numbers. Default: false\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "doubleAsString"
                    ]
                }
            }
        },
        "airbyte:index/SourceGoogleDriveConfigurationStreamFormatCsvFormat:SourceGoogleDriveConfigurationStreamFormatCsvFormat": {
            "properties": {
                "delimiter": {
                    "type": "string",
                    "description": "The character delimiting individual cells in the CSV data. This may only be a 1-character string. For tab-delimited data enter '\\t'. Default: \",\"\n"
                },
                "doubleQuote": {
                    "type": "boolean",
                    "description": "Whether two quotes in a quoted CSV value denote a single quote in the data. Default: true\n"
                },
                "encoding": {
                    "type": "string",
                    "description": "The character encoding of the CSV data. Leave blank to default to \u003cstrong\u003eUTF8\u003c/strong\u003e. See \u003ca href=\"https://docs.python.org/3/library/codecs.html#standard-encodings\" target=\"_blank\"\u003elist of python encodings\u003c/a\u003e for allowable options. Default: \"utf8\"\n"
                },
                "escapeChar": {
                    "type": "string",
                    "description": "The character used for escaping special characters. To disallow escaping, leave this field blank.\n"
                },
                "falseValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as false values.\n"
                },
                "headerDefinition": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDriveConfigurationStreamFormatCsvFormatHeaderDefinition:SourceGoogleDriveConfigurationStreamFormatCsvFormatHeaderDefinition",
                    "description": "How headers will be defined. `User Provided` assumes the CSV does not have a header row and uses the headers provided and `Autogenerated` assumes the CSV does not have a header row and the CDK will generate headers using for `f{i}` where `i` is the index starting from 0. Else, the default behavior is to use the header from the CSV file. If a user wants to autogenerate or provide column names for a CSV having headers, they can skip rows.\n"
                },
                "nullValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as null values. For example, if the value 'NA' should be interpreted as null, enter 'NA' in this field.\n"
                },
                "quoteChar": {
                    "type": "string",
                    "description": "The character used for quoting CSV values. To disallow quoting, make this field blank. Default: \"\\\"\"\n"
                },
                "skipRowsAfterHeader": {
                    "type": "integer",
                    "description": "The number of rows to skip after the header row. Default: 0\n"
                },
                "skipRowsBeforeHeader": {
                    "type": "integer",
                    "description": "The number of rows to skip before the header row. For example, if the header row is on the 3rd row, enter 2 in this field. Default: 0\n"
                },
                "stringsCanBeNull": {
                    "type": "boolean",
                    "description": "Whether strings can be interpreted as null values. If true, strings that match the null_values set will be interpreted as null. If false, strings that match the null_values set will be interpreted as the string itself. Default: true\n"
                },
                "trueValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as true values.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "delimiter",
                        "doubleQuote",
                        "encoding",
                        "quoteChar",
                        "skipRowsAfterHeader",
                        "skipRowsBeforeHeader",
                        "stringsCanBeNull"
                    ]
                }
            }
        },
        "airbyte:index/SourceGoogleDriveConfigurationStreamFormatCsvFormatHeaderDefinition:SourceGoogleDriveConfigurationStreamFormatCsvFormatHeaderDefinition": {
            "properties": {
                "autogenerated": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDriveConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated:SourceGoogleDriveConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated"
                },
                "fromCsv": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDriveConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv:SourceGoogleDriveConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv"
                },
                "userProvided": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDriveConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided:SourceGoogleDriveConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleDriveConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated:SourceGoogleDriveConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated": {
            "type": "object"
        },
        "airbyte:index/SourceGoogleDriveConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv:SourceGoogleDriveConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv": {
            "type": "object"
        },
        "airbyte:index/SourceGoogleDriveConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided:SourceGoogleDriveConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided": {
            "properties": {
                "columnNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The column names that will be used while emitting the CSV records\n"
                }
            },
            "type": "object",
            "required": [
                "columnNames"
            ]
        },
        "airbyte:index/SourceGoogleDriveConfigurationStreamFormatDocumentFileTypeFormatExperimental:SourceGoogleDriveConfigurationStreamFormatDocumentFileTypeFormatExperimental": {
            "properties": {
                "processing": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDriveConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing:SourceGoogleDriveConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing",
                    "description": "Processing configuration\n"
                },
                "skipUnprocessableFiles": {
                    "type": "boolean",
                    "description": "If true, skip files that cannot be parsed and pass the error message along as the _ab_source_file_parse_error field. If false, fail the sync. Default: true\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "The strategy used to parse documents. `fast` extracts text directly from the document which doesn't work for all files. `ocr_only` is more reliable, but slower. `hi_res` is the most reliable, but requires an API key and a hosted instance of unstructured and can't be used with local mode. See the unstructured.io documentation for more details: https://unstructured-io.github.io/unstructured/core/partition.html#partition-pdf. must be one of [\"auto\", \"fast\", \"ocr_only\", \"hi_res\"]; Default: \"auto\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "skipUnprocessableFiles",
                        "strategy"
                    ]
                }
            }
        },
        "airbyte:index/SourceGoogleDriveConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing:SourceGoogleDriveConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing": {
            "properties": {
                "local": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDriveConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal:SourceGoogleDriveConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal",
                    "description": "Process files locally, supporting `fast` and `ocr` modes. This is the default option.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleDriveConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal:SourceGoogleDriveConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal": {
            "type": "object"
        },
        "airbyte:index/SourceGoogleDriveConfigurationStreamFormatJsonlFormat:SourceGoogleDriveConfigurationStreamFormatJsonlFormat": {
            "type": "object"
        },
        "airbyte:index/SourceGoogleDriveConfigurationStreamFormatParquetFormat:SourceGoogleDriveConfigurationStreamFormatParquetFormat": {
            "properties": {
                "decimalAsFloat": {
                    "type": "boolean",
                    "description": "Whether to convert decimal fields to floats. There is a loss of precision when converting decimals to floats, so this is not recommended. Default: false\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "decimalAsFloat"
                    ]
                }
            }
        },
        "airbyte:index/SourceGooglePagespeedInsightsConfiguration:SourceGooglePagespeedInsightsConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Google PageSpeed API Key. See \u003ca href=\"https://developers.google.com/speed/docs/insights/v5/get-started#APIKey\"\u003ehere\u003c/a\u003e. The key is optional - however the API is heavily rate limited when using without API Key. Creating and using the API key therefore is recommended. The key is case sensitive.\n",
                    "secret": true
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines which Lighthouse category to run. One or many of: \"accessibility\", \"best-practices\", \"performance\", \"pwa\", \"seo\".\n"
                },
                "strategies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The analyses strategy to use. Either \"desktop\" or \"mobile\".\n"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The URLs to retrieve pagespeed information from. The connector will attempt to sync PageSpeed reports for all the defined URLs. Format: https://(www.)url.domain\n"
                }
            },
            "type": "object",
            "required": [
                "categories",
                "strategies",
                "urls"
            ]
        },
        "airbyte:index/SourceGoogleSearchConsoleConfiguration:SourceGoogleSearchConsoleConfiguration": {
            "properties": {
                "authorization": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorization:SourceGoogleSearchConsoleConfigurationAuthorization"
                },
                "customReports": {
                    "type": "string",
                    "description": "(DEPRCATED) A JSON array describing the custom reports you want to sync from Google Search Console. See our \u003ca href='https://docs.airbyte.com/integrations/sources/google-search-console'\u003edocumentation\u003c/a\u003e for more information on formulating custom reports.\n"
                },
                "customReportsArrays": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceGoogleSearchConsoleConfigurationCustomReportsArray:SourceGoogleSearchConsoleConfigurationCustomReportsArray"
                    },
                    "description": "You can add your Custom Analytics report by creating one.\n"
                },
                "dataState": {
                    "type": "string",
                    "description": "If set to 'final', the returned data will include only finalized, stable data. If set to 'all', fresh data will be included. When using Incremental sync mode, we do not recommend setting this parameter to 'all' as it may cause data loss. More information can be found in our \u003ca href='https://docs.airbyte.com/integrations/source/google-search-console'\u003efull documentation\u003c/a\u003e. must be one of [\"final\", \"all\"]; Default: \"final\"\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "UTC date in the format YYYY-MM-DD. Any data created after this date will not be replicated. Must be greater or equal to the start date field. Leaving this field blank will replicate all data from the start date onward.\n"
                },
                "siteUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The URLs of the website property attached to your GSC account. Learn more about properties \u003ca href=\"https://support.google.com/webmasters/answer/34592?hl=en\"\u003ehere\u003c/a\u003e.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date in the format YYYY-MM-DD. Any data before this date will not be replicated. Default: \"2021-01-01\"\n"
                }
            },
            "type": "object",
            "required": [
                "authorization",
                "siteUrls"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authorization",
                        "dataState",
                        "siteUrls",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorization:SourceGoogleSearchConsoleConfigurationAuthorization": {
            "properties": {
                "oAuth": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorizationOAuth:SourceGoogleSearchConsoleConfigurationAuthorizationOAuth"
                },
                "serviceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorizationServiceAccountKeyAuthentication:SourceGoogleSearchConsoleConfigurationAuthorizationServiceAccountKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorizationOAuth:SourceGoogleSearchConsoleConfigurationAuthorizationOAuth": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access token for making authenticated requests. Read more \u003ca href=\"https://developers.google.com/webmaster-tools/v1/how-tos/authorizing\"\u003ehere\u003c/a\u003e.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "The client ID of your Google Search Console developer application. Read more \u003ca href=\"https://developers.google.com/webmaster-tools/v1/how-tos/authorizing\"\u003ehere\u003c/a\u003e.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret of your Google Search Console developer application. Read more \u003ca href=\"https://developers.google.com/webmaster-tools/v1/how-tos/authorizing\"\u003ehere\u003c/a\u003e.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The token for obtaining a new access token. Read more \u003ca href=\"https://developers.google.com/webmaster-tools/v1/how-tos/authorizing\"\u003ehere\u003c/a\u003e.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorizationServiceAccountKeyAuthentication:SourceGoogleSearchConsoleConfigurationAuthorizationServiceAccountKeyAuthentication": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The email of the user which has permissions to access the Google Workspace Admin APIs.\n"
                },
                "serviceAccountInfo": {
                    "type": "string",
                    "description": "The JSON key of the service account to use for authorization. Read more \u003ca href=\"https://cloud.google.com/iam/docs/creating-managing-service-account-keys\"\u003ehere\u003c/a\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "email",
                "serviceAccountInfo"
            ]
        },
        "airbyte:index/SourceGoogleSearchConsoleConfigurationCustomReportsArray:SourceGoogleSearchConsoleConfigurationCustomReportsArray": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of available dimensions. Please note, that for technical reasons `date` is the default dimension which will be included in your query whether you specify it or not. Primary key will consist of your custom dimensions and the default dimension along with `site_url` and `search_type`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the custom report, this name would be used as stream name\n"
                }
            },
            "type": "object",
            "required": [
                "dimensions",
                "name"
            ]
        },
        "airbyte:index/SourceGoogleSheetsConfiguration:SourceGoogleSheetsConfiguration": {
            "properties": {
                "batchSize": {
                    "type": "integer",
                    "description": "Default value is 200. An integer representing row batch size for each sent request to Google Sheets API. Row batch size means how many rows are processed from the google sheet, for example default value 200 would process rows 1-201, then 201-401 and so on. Based on \u003ca href='https://developers.google.com/sheets/api/limits'\u003eGoogle Sheets API limits documentation\u003c/a\u003e, it is possible to send up to 300 requests per minute, but each individual request has to be processed under 180 seconds, otherwise the request returns a timeout error. In regards to this information, consider network speed and number of columns of the google sheet when deciding a batch_size value. Default value should cover most of the cases, but if a google sheet has over 100,000 records or more, consider increasing batch_size value. Default: 200\n"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSheetsConfigurationCredentials:SourceGoogleSheetsConfigurationCredentials",
                    "description": "Credentials for connecting to the Google Sheets API\n"
                },
                "namesConversion": {
                    "type": "boolean",
                    "description": "Enables the conversion of column names to a standardized, SQL-compliant format. For example, 'My Name' \u003e 'my_name'. Enable this option if your destination is SQL-based. Default: false\n"
                },
                "spreadsheetId": {
                    "type": "string",
                    "description": "Enter the link to the Google spreadsheet you want to sync. To copy the link, click the 'Share' button in the top-right corner of the spreadsheet, then click 'Copy link'.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "spreadsheetId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "batchSize",
                        "credentials",
                        "namesConversion",
                        "spreadsheetId"
                    ]
                }
            }
        },
        "airbyte:index/SourceGoogleSheetsConfigurationCredentials:SourceGoogleSheetsConfigurationCredentials": {
            "properties": {
                "authenticateViaGoogleOAuth": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSheetsConfigurationCredentialsAuthenticateViaGoogleOAuth:SourceGoogleSheetsConfigurationCredentialsAuthenticateViaGoogleOAuth"
                },
                "serviceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSheetsConfigurationCredentialsServiceAccountKeyAuthentication:SourceGoogleSheetsConfigurationCredentialsServiceAccountKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleSheetsConfigurationCredentialsAuthenticateViaGoogleOAuth:SourceGoogleSheetsConfigurationCredentialsAuthenticateViaGoogleOAuth": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Enter your Google application's Client ID. See \u003ca href='https://developers.google.com/identity/protocols/oauth2'\u003eGoogle's documentation\u003c/a\u003e for more information.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Enter your Google application's Client Secret. See \u003ca href='https://developers.google.com/identity/protocols/oauth2'\u003eGoogle's documentation\u003c/a\u003e for more information.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Enter your Google application's refresh token. See \u003ca href='https://developers.google.com/identity/protocols/oauth2'\u003eGoogle's documentation\u003c/a\u003e for more information.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceGoogleSheetsConfigurationCredentialsServiceAccountKeyAuthentication:SourceGoogleSheetsConfigurationCredentialsServiceAccountKeyAuthentication": {
            "properties": {
                "serviceAccountInfo": {
                    "type": "string",
                    "description": "The JSON key of the service account to use for authorization. Read more \u003ca href=\"https://cloud.google.com/iam/docs/creating-managing-service-account-keys#creating_service_account_keys\"\u003ehere\u003c/a\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "serviceAccountInfo"
            ]
        },
        "airbyte:index/SourceGoogleWebfontsConfiguration:SourceGoogleWebfontsConfiguration": {
            "properties": {
                "alt": {
                    "type": "string",
                    "description": "Optional, Available params- json, media, proto\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "API key is required to access google apis, For getting your's goto google console and generate api key for Webfonts\n",
                    "secret": true
                },
                "prettyPrint": {
                    "type": "string",
                    "description": "Optional, boolean type\n"
                },
                "sort": {
                    "type": "string",
                    "description": "Optional, to find how to sort\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceGreenhouseConfiguration:SourceGreenhouseConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Greenhouse API Key. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/greenhouse\"\u003edocs\u003c/a\u003e for more information on how to generate this key.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceGridlyConfiguration:SourceGridlyConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "secret": true
                },
                "gridId": {
                    "type": "string",
                    "description": "ID of a grid, or can be ID of a branch\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "gridId"
            ]
        },
        "airbyte:index/SourceHarvestConfiguration:SourceHarvestConfiguration": {
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Harvest account ID. Required for all Harvest requests in pair with Personal Access Token\n"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceHarvestConfigurationCredentials:SourceHarvestConfigurationCredentials",
                    "description": "Choose how to authenticate to Harvest.\n"
                },
                "replicationEndDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data after this date will not be replicated.\n"
                },
                "replicationStartDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "replicationStartDate"
            ]
        },
        "airbyte:index/SourceHarvestConfigurationCredentials:SourceHarvestConfigurationCredentials": {
            "properties": {
                "authenticateViaHarvestOAuth": {
                    "$ref": "#/types/airbyte:index/SourceHarvestConfigurationCredentialsAuthenticateViaHarvestOAuth:SourceHarvestConfigurationCredentialsAuthenticateViaHarvestOAuth"
                },
                "authenticateWithPersonalAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceHarvestConfigurationCredentialsAuthenticateWithPersonalAccessToken:SourceHarvestConfigurationCredentialsAuthenticateWithPersonalAccessToken"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceHarvestConfigurationCredentialsAuthenticateViaHarvestOAuth:SourceHarvestConfigurationCredentialsAuthenticateViaHarvestOAuth": {
            "properties": {
                "additionalProperties": {
                    "type": "string",
                    "description": "Parsed as JSON.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your Harvest developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your Harvest developer application.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Refresh Token to renew the expired Access Token.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceHarvestConfigurationCredentialsAuthenticateWithPersonalAccessToken:SourceHarvestConfigurationCredentialsAuthenticateWithPersonalAccessToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string",
                    "description": "Parsed as JSON.\n"
                },
                "apiToken": {
                    "type": "string",
                    "description": "Log into Harvest and then create new \u003ca href=\"https://id.getharvest.com/developers\"\u003e personal access token\u003c/a\u003e.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiToken"
            ]
        },
        "airbyte:index/SourceHubplannerConfiguration:SourceHubplannerConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Hubplanner API key. See https://github.com/hubplanner/API#authentication for more details.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceHubspotConfiguration:SourceHubspotConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceHubspotConfigurationCredentials:SourceHubspotConfigurationCredentials",
                    "description": "Choose how to authenticate to HubSpot.\n"
                },
                "enableExperimentalStreams": {
                    "type": "boolean",
                    "description": "If enabled then experimental streams become available for sync. Default: false\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. If not set, \"2006-06-01T00:00:00Z\" (Hubspot creation date) will be used as start date. It's recommended to provide relevant to your data start date value to optimize synchronization.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "credentials",
                        "enableExperimentalStreams"
                    ]
                }
            }
        },
        "airbyte:index/SourceHubspotConfigurationCredentials:SourceHubspotConfigurationCredentials": {
            "properties": {
                "oAuth": {
                    "$ref": "#/types/airbyte:index/SourceHubspotConfigurationCredentialsOAuth:SourceHubspotConfigurationCredentialsOAuth"
                },
                "privateApp": {
                    "$ref": "#/types/airbyte:index/SourceHubspotConfigurationCredentialsPrivateApp:SourceHubspotConfigurationCredentialsPrivateApp"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceHubspotConfigurationCredentialsOAuth:SourceHubspotConfigurationCredentialsOAuth": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your HubSpot developer application. See the \u003ca href=\"https://legacydocs.hubspot.com/docs/methods/oauth2/oauth2-quickstart\"\u003eHubspot docs\u003c/a\u003e if you need help finding this ID.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret for your HubSpot developer application. See the \u003ca href=\"https://legacydocs.hubspot.com/docs/methods/oauth2/oauth2-quickstart\"\u003eHubspot docs\u003c/a\u003e if you need help finding this secret.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Refresh token to renew an expired access token. See the \u003ca href=\"https://legacydocs.hubspot.com/docs/methods/oauth2/oauth2-quickstart\"\u003eHubspot docs\u003c/a\u003e if you need help finding this token.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceHubspotConfigurationCredentialsPrivateApp:SourceHubspotConfigurationCredentialsPrivateApp": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "HubSpot Access token. See the \u003ca href=\"https://developers.hubspot.com/docs/api/private-apps\"\u003eHubspot docs\u003c/a\u003e if you need help finding this token.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceInsightlyConfiguration:SourceInsightlyConfiguration": {
            "properties": {
                "startDate": {
                    "type": "string",
                    "description": "The date from which you'd like to replicate data for Insightly in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated. Note that it will be used only for incremental streams.\n"
                },
                "token": {
                    "type": "string",
                    "description": "Your Insightly API token.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "startDate",
                "token"
            ]
        },
        "airbyte:index/SourceInstagramConfiguration:SourceInstagramConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The value of the access token generated with \u003cb\u003einstagram_basic, instagram_manage_insights, pages_show_list, pages_read_engagement, Instagram Public Content Access\u003c/b\u003e permissions. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/instagram/#step-1-set-up-instagram\"\u003edocs\u003c/a\u003e for more information\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "The Client ID for your Oauth application\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret for your Oauth application\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The date from which you'd like to replicate data for User Insights, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated. If left blank, the start date will be set to 2 years before the present date.\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceInstatusConfiguration:SourceInstatusConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Instatus REST API key\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceIntercomConfiguration:SourceIntercomConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access token for making authenticated requests. See the \u003ca href=\"https://developers.intercom.com/building-apps/docs/authentication-types#how-to-get-your-access-token\"\u003eIntercom docs\u003c/a\u003e for more information.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "Client Id for your Intercom application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client Secret for your Intercom application.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "startDate"
            ]
        },
        "airbyte:index/SourceIp2whoisConfiguration:SourceIp2whoisConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Your API Key. See \u003ca href=\"https://www.ip2whois.com/developers-api\"\u003ehere\u003c/a\u003e.\n",
                    "secret": true
                },
                "domain": {
                    "type": "string",
                    "description": "Domain name. See \u003ca href=\"https://www.ip2whois.com/developers-api\"\u003ehere\u003c/a\u003e.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceIterableConfiguration:SourceIterableConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Iterable API Key. See the \u003ca href=\\\"https://docs.airbyte.com/integrations/sources/iterable\\\"\u003edocs\u003c/a\u003e  for more information on how to obtain this key.\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "The date from which you'd like to replicate data for Iterable, in the format YYYY-MM-DDT00:00:00Z.  All data generated after this date will be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "startDate"
            ]
        },
        "airbyte:index/SourceJiraConfiguration:SourceJiraConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "Jira API Token. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/jira\"\u003edocs\u003c/a\u003e for more information on how to generate this key. API Token is used for Authorization to your account by BasicAuth.\n",
                    "secret": true
                },
                "domain": {
                    "type": "string",
                    "description": "The Domain for your Jira account, e.g. airbyteio.atlassian.net, airbyteio.jira.com, jira.your-domain.com\n"
                },
                "email": {
                    "type": "string",
                    "description": "The user email for your Jira account which you used to generate the API token. This field is used for Authorization to your account by BasicAuth.\n"
                },
                "enableExperimentalStreams": {
                    "type": "boolean",
                    "description": "Allow the use of experimental streams which rely on undocumented Jira API endpoints. See https://docs.airbyte.com/integrations/sources/jira#experimental-tables for more info. Default: false\n"
                },
                "expandIssueChangelog": {
                    "type": "boolean",
                    "description": "(DEPRECATED) Expand the changelog when replicating issues. Default: false\n"
                },
                "expandIssueTransition": {
                    "type": "boolean",
                    "description": "(DEPRECATED) Expand the transitions when replicating issues. Default: false\n"
                },
                "issuesStreamExpandWiths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Select fields to Expand the `Issues` stream when replicating with:\n"
                },
                "lookbackWindowMinutes": {
                    "type": "integer",
                    "description": "When set to N, the connector will always refresh resources created within the past N minutes. By default, updated objects that are not newly created are not incrementally synced. Default: 0\n"
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Jira project keys to replicate data for, or leave it empty if you want to replicate data for all projects.\n"
                },
                "renderFields": {
                    "type": "boolean",
                    "description": "(DEPRECATED) Render issue fields in HTML format in addition to Jira JSON-like format. Default: false\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The date from which you want to replicate data from Jira, use the format YYYY-MM-DDT00:00:00Z. Note that this field only applies to certain streams, and only data generated on or after the start date will be replicated. Or leave it empty if you want to replicate all data. For more information, refer to the \u003ca href=\"https://docs.airbyte.com/integrations/sources/jira/\"\u003edocumentation\u003c/a\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "domain",
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiToken",
                        "domain",
                        "email",
                        "enableExperimentalStreams",
                        "expandIssueChangelog",
                        "expandIssueTransition",
                        "lookbackWindowMinutes",
                        "renderFields"
                    ]
                }
            }
        },
        "airbyte:index/SourceK6CloudConfiguration:SourceK6CloudConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "Your API Token. See \u003ca href=\"https://k6.io/docs/cloud/integrations/token/\"\u003ehere\u003c/a\u003e. The key is case sensitive.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiToken"
            ]
        },
        "airbyte:index/SourceKlarnaConfiguration:SourceKlarnaConfiguration": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "A string which is associated with your Merchant ID and is used to authorize use of Klarna's APIs (https://developers.klarna.com/api/#authentication)\n",
                    "secret": true
                },
                "playground": {
                    "type": "boolean",
                    "description": "Propertie defining if connector is used against playground or production environment. Default: false\n"
                },
                "region": {
                    "type": "string",
                    "description": "Base url region (For playground eu https://docs.klarna.com/klarna-payments/api/payments-api/#tag/API-URLs). Supported 'eu', 'us', 'oc'. must be one of [\"eu\", \"us\", \"oc\"]\n"
                },
                "username": {
                    "type": "string",
                    "description": "Consists of your Merchant ID (eid) - a unique number that identifies your e-store, combined with a random string (https://developers.klarna.com/api/#authentication)\n"
                }
            },
            "type": "object",
            "required": [
                "password",
                "region",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "password",
                        "playground",
                        "region",
                        "username"
                    ]
                }
            }
        },
        "airbyte:index/SourceKlaviyoConfiguration:SourceKlaviyoConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Klaviyo API Key. See our \u003ca href=\"https://docs.airbyte.com/integrations/sources/klaviyo\"\u003edocs\u003c/a\u003e if you need help finding this key.\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. This field is optional - if not provided, all data will be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceKyveConfiguration:SourceKyveConfiguration": {
            "properties": {
                "maxPages": {
                    "type": "integer",
                    "description": "The maximum amount of pages to go trough. Set to 'null' for all pages.\n"
                },
                "pageSize": {
                    "type": "integer",
                    "description": "The pagesize for pagination, smaller numbers are used in integration tests. Default: 100\n"
                },
                "poolIds": {
                    "type": "string",
                    "description": "The IDs of the KYVE storage pool you want to archive. (Comma separated)\n"
                },
                "startIds": {
                    "type": "string",
                    "description": "The start-id defines, from which bundle id the pipeline should start to extract the data. (Comma separated)\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "URL to the KYVE Chain API. Default: \"https://api.kyve.network\"\n"
                }
            },
            "type": "object",
            "required": [
                "poolIds",
                "startIds"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "pageSize",
                        "poolIds",
                        "startIds",
                        "urlBase"
                    ]
                }
            }
        },
        "airbyte:index/SourceLaunchdarklyConfiguration:SourceLaunchdarklyConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Your Access token. See \u003ca href=\"https://apidocs.launchdarkly.com/#section/Overview/Authentication\"\u003ehere\u003c/a\u003e.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceLemlistConfiguration:SourceLemlistConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Lemlist API key,\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceLeverHiringConfiguration:SourceLeverHiringConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceLeverHiringConfigurationCredentials:SourceLeverHiringConfigurationCredentials",
                    "description": "Choose how to authenticate to Lever Hiring.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "The environment in which you'd like to replicate data for Lever. This is used to determine which Lever API endpoint to use. must be one of [\"Production\", \"Sandbox\"]; Default: \"Sandbox\"\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. Note that it will be used only in the following incremental streams: comments, commits, and issues.\n"
                }
            },
            "type": "object",
            "required": [
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "environment",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourceLeverHiringConfigurationCredentials:SourceLeverHiringConfigurationCredentials": {
            "properties": {
                "authenticateViaLeverApiKey": {
                    "$ref": "#/types/airbyte:index/SourceLeverHiringConfigurationCredentialsAuthenticateViaLeverApiKey:SourceLeverHiringConfigurationCredentialsAuthenticateViaLeverApiKey"
                },
                "authenticateViaLeverOAuth": {
                    "$ref": "#/types/airbyte:index/SourceLeverHiringConfigurationCredentialsAuthenticateViaLeverOAuth:SourceLeverHiringConfigurationCredentialsAuthenticateViaLeverOAuth"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceLeverHiringConfigurationCredentialsAuthenticateViaLeverApiKey:SourceLeverHiringConfigurationCredentialsAuthenticateViaLeverApiKey": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "The Api Key of your Lever Hiring account.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceLeverHiringConfigurationCredentialsAuthenticateViaLeverOAuth:SourceLeverHiringConfigurationCredentialsAuthenticateViaLeverOAuth": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your Lever Hiring developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your Lever Hiring developer application.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The token for obtaining new access token.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "refreshToken"
            ]
        },
        "airbyte:index/SourceLinkedinAdsConfiguration:SourceLinkedinAdsConfiguration": {
            "properties": {
                "accountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Specify the account IDs to pull data from, separated by a space. Leave this field empty if you want to pull the data from all accounts accessible by the authenticated user. See the \u003ca href=\"https://www.linkedin.com/help/linkedin/answer/a424270/find-linkedin-ads-account-details?lang=en\"\u003eLinkedIn docs\u003c/a\u003e to locate these IDs.\n"
                },
                "adAnalyticsReports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceLinkedinAdsConfigurationAdAnalyticsReport:SourceLinkedinAdsConfigurationAdAnalyticsReport"
                    }
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinAdsConfigurationCredentials:SourceLinkedinAdsConfigurationCredentials"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date in the format YYYY-MM-DD. Any data before this date will not be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "startDate"
            ]
        },
        "airbyte:index/SourceLinkedinAdsConfigurationAdAnalyticsReport:SourceLinkedinAdsConfigurationAdAnalyticsReport": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name for the custom report.\n"
                },
                "pivotBy": {
                    "type": "string",
                    "description": "Choose a category to pivot your analytics report around. This selection will organize your data based on the chosen attribute, allowing you to analyze trends and performance from different perspectives. must be one of [\"COMPANY\", \"ACCOUNT\", \"SHARE\", \"CAMPAIGN\", \"CREATIVE\", \"CAMPAIGN_GROUP\", \"CONVERSION\", \"CONVERSATION_NODE\", \"CONVERSATION_NODE_OPTION_INDEX\", \"SERVING_LOCATION\", \"CARD_INDEX\", \"MEMBER_COMPANY_SIZE\", \"MEMBER_INDUSTRY\", \"MEMBER_SENIORITY\", \"MEMBER_JOB_TITLE\", \"MEMBER_JOB_FUNCTION\", \"MEMBER_COUNTRY_V2\", \"MEMBER_REGION_V2\", \"MEMBER_COMPANY\", \"PLACEMENT_NAME\", \"IMPRESSION_DEVICE_TYPE\"]\n"
                },
                "timeGranularity": {
                    "type": "string",
                    "description": "Choose how to group the data in your report by time. The options are:\u003cbr\u003e- 'ALL': A single result summarizing the entire time range.\u003cbr\u003e- 'DAILY': Group results by each day.\u003cbr\u003e- 'MONTHLY': Group results by each month.\u003cbr\u003e- 'YEARLY': Group results by each year.\u003cbr\u003eSelecting a time grouping helps you analyze trends and patterns over different time periods. must be one of [\"ALL\", \"DAILY\", \"MONTHLY\", \"YEARLY\"]\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "pivotBy",
                "timeGranularity"
            ]
        },
        "airbyte:index/SourceLinkedinAdsConfigurationCredentials:SourceLinkedinAdsConfigurationCredentials": {
            "properties": {
                "accessToken": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinAdsConfigurationCredentialsAccessToken:SourceLinkedinAdsConfigurationCredentialsAccessToken"
                },
                "oAuth20": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinAdsConfigurationCredentialsOAuth20:SourceLinkedinAdsConfigurationCredentialsOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceLinkedinAdsConfigurationCredentialsAccessToken:SourceLinkedinAdsConfigurationCredentialsAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The access token generated for your developer application. Refer to our \u003ca href='https://docs.airbyte.com/integrations/sources/linkedin-ads#setup-guide'\u003edocumentation\u003c/a\u003e for more information.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceLinkedinAdsConfigurationCredentialsOAuth20:SourceLinkedinAdsConfigurationCredentialsOAuth20": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The client ID of your developer application. Refer to our \u003ca href='https://docs.airbyte.com/integrations/sources/linkedin-ads#setup-guide'\u003edocumentation\u003c/a\u003e for more information.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret of your developer application. Refer to our \u003ca href='https://docs.airbyte.com/integrations/sources/linkedin-ads#setup-guide'\u003edocumentation\u003c/a\u003e for more information.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The key to refresh the expired access token. Refer to our \u003ca href='https://docs.airbyte.com/integrations/sources/linkedin-ads#setup-guide'\u003edocumentation\u003c/a\u003e for more information.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceLinkedinPagesConfiguration:SourceLinkedinPagesConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinPagesConfigurationCredentials:SourceLinkedinPagesConfigurationCredentials"
                },
                "orgId": {
                    "type": "string",
                    "description": "Specify the Organization ID\n"
                }
            },
            "type": "object",
            "required": [
                "orgId"
            ]
        },
        "airbyte:index/SourceLinkedinPagesConfigurationCredentials:SourceLinkedinPagesConfigurationCredentials": {
            "properties": {
                "accessToken": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinPagesConfigurationCredentialsAccessToken:SourceLinkedinPagesConfigurationCredentialsAccessToken"
                },
                "oAuth20": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinPagesConfigurationCredentialsOAuth20:SourceLinkedinPagesConfigurationCredentialsOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceLinkedinPagesConfigurationCredentialsAccessToken:SourceLinkedinPagesConfigurationCredentialsAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The token value generated using the LinkedIn Developers OAuth Token Tools. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/linkedin-pages/\"\u003edocs\u003c/a\u003e to obtain yours.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceLinkedinPagesConfigurationCredentialsOAuth20:SourceLinkedinPagesConfigurationCredentialsOAuth20": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The client ID of the LinkedIn developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret of the LinkedIn developer application.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The token value generated using the LinkedIn Developers OAuth Token Tools. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/linkedin-pages/\"\u003edocs\u003c/a\u003e to obtain yours.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceLinnworksConfiguration:SourceLinnworksConfiguration": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "Linnworks Application ID\n"
                },
                "applicationSecret": {
                    "type": "string",
                    "description": "Linnworks Application Secret\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.\n"
                },
                "token": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "applicationId",
                "applicationSecret",
                "startDate",
                "token"
            ]
        },
        "airbyte:index/SourceLokaliseConfiguration:SourceLokaliseConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Lokalise API Key with read-access. Available at Profile settings \u003e API tokens. See \u003ca href=\"https://docs.lokalise.com/en/articles/1929556-api-tokens\"\u003ehere\u003c/a\u003e.\n",
                    "secret": true
                },
                "projectId": {
                    "type": "string",
                    "description": "Lokalise project ID. Available at Project Settings \u003e General.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "projectId"
            ]
        },
        "airbyte:index/SourceMailchimpConfiguration:SourceMailchimpConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceMailchimpConfigurationCredentials:SourceMailchimpConfigurationCredentials"
                },
                "dataCenter": {
                    "type": "string",
                    "description": "Technical fields used to identify datacenter to send request to\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The date from which you want to start syncing data for Incremental streams. Only records that have been created or modified since this date will be synced. If left blank, all data will by synced.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMailchimpConfigurationCredentials:SourceMailchimpConfigurationCredentials": {
            "properties": {
                "apiKey": {
                    "$ref": "#/types/airbyte:index/SourceMailchimpConfigurationCredentialsApiKey:SourceMailchimpConfigurationCredentialsApiKey"
                },
                "oAuth20": {
                    "$ref": "#/types/airbyte:index/SourceMailchimpConfigurationCredentialsOAuth20:SourceMailchimpConfigurationCredentialsOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMailchimpConfigurationCredentialsApiKey:SourceMailchimpConfigurationCredentialsApiKey": {
            "properties": {
                "apikey": {
                    "type": "string",
                    "description": "Mailchimp API Key. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/mailchimp\"\u003edocs\u003c/a\u003e for information on how to generate this key.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apikey"
            ]
        },
        "airbyte:index/SourceMailchimpConfigurationCredentialsOAuth20:SourceMailchimpConfigurationCredentialsOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "An access token generated using the above client ID and secret.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your OAuth application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your OAuth application.\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceMailgunConfiguration:SourceMailgunConfiguration": {
            "properties": {
                "domainRegion": {
                    "type": "string",
                    "description": "Domain region code. 'EU' or 'US' are possible values. The default is 'US'. Default: \"US\"\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Primary account API key to access your Mailgun data.\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2020-10-01 00:00:00. Any data before this date will not be replicated. If omitted, defaults to 3 days ago.\n"
                }
            },
            "type": "object",
            "required": [
                "privateKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "domainRegion",
                        "privateKey"
                    ]
                }
            }
        },
        "airbyte:index/SourceMailjetSmsConfiguration:SourceMailjetSmsConfiguration": {
            "properties": {
                "endDate": {
                    "type": "integer",
                    "description": "Retrieve SMS messages created before the specified timestamp. Required format - Unix timestamp.\n"
                },
                "startDate": {
                    "type": "integer",
                    "description": "Retrieve SMS messages created after the specified timestamp. Required format - Unix timestamp.\n"
                },
                "token": {
                    "type": "string",
                    "description": "Your access token. See \u003ca href=\"https://dev.mailjet.com/sms/reference/overview/authentication\"\u003ehere\u003c/a\u003e.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "token"
            ]
        },
        "airbyte:index/SourceMarketoConfiguration:SourceMarketoConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your Marketo developer application. See \u003ca href=\"https://docs.airbyte.com/integrations/sources/marketo\"\u003e the docs \u003c/a\u003e for info on how to obtain this.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your Marketo developer application. See \u003ca href=\"https://docs.airbyte.com/integrations/sources/marketo\"\u003e the docs \u003c/a\u003e for info on how to obtain this.\n"
                },
                "domainUrl": {
                    "type": "string",
                    "description": "Your Marketo Base URL. See \u003ca href=\"https://docs.airbyte.com/integrations/sources/marketo\"\u003e the docs \u003c/a\u003e for info on how to obtain this.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "domainUrl",
                "startDate"
            ]
        },
        "airbyte:index/SourceMetabaseConfiguration:SourceMetabaseConfiguration": {
            "properties": {
                "instanceApiUrl": {
                    "type": "string",
                    "description": "URL to your metabase instance API\n"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "sessionToken": {
                    "type": "string",
                    "description": "To generate your session token, you need to run the following command: ``` curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\": \"person@metabase.com\", \"password\": \"fakepassword\"}' \\\n  http://localhost:3000/api/session\n``` Then copy the value of the `id` field returned by a successful call to that API.\nNote that by default, sessions are good for 14 days and needs to be regenerated.\n",
                    "secret": true
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "instanceApiUrl"
            ]
        },
        "airbyte:index/SourceMicrosoftOnedriveConfiguration:SourceMicrosoftOnedriveConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftOnedriveConfigurationCredentials:SourceMicrosoftOnedriveConfigurationCredentials",
                    "description": "Credentials for connecting to the One Drive API\n"
                },
                "driveName": {
                    "type": "string",
                    "description": "Name of the Microsoft OneDrive drive where the file(s) exist. Default: \"OneDrive\"\n"
                },
                "folderPath": {
                    "type": "string",
                    "description": "Path to a specific folder within the drives to search for files. Leave empty to search all folders of the drives. This does not apply to shared items. Default: \".\"\n"
                },
                "searchScope": {
                    "type": "string",
                    "description": "Specifies the location(s) to search for files. Valid options are 'ACCESSIBLE_DRIVES' to search in the selected OneDrive drive, 'SHARED_ITEMS' for shared items the user has access to, and 'ALL' to search both. must be one of [\"ACCESSIBLE_DRIVES\", \"SHARED_ITEMS\", \"ALL\"]; Default: \"ALL\"\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00.000000Z. Any file modified before this date will not be replicated.\n"
                },
                "streams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceMicrosoftOnedriveConfigurationStream:SourceMicrosoftOnedriveConfigurationStream"
                    },
                    "description": "Each instance of this configuration defines a \u003ca href=\"https://docs.airbyte.com/cloud/core-concepts#stream\"\u003estream\u003c/a\u003e. Use this to define which files belong in the stream, their format, and how they should be parsed and validated. When sending data to warehouse destination such as Snowflake or BigQuery, each stream is a separate table.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "streams"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "credentials",
                        "driveName",
                        "folderPath",
                        "searchScope",
                        "streams"
                    ]
                }
            }
        },
        "airbyte:index/SourceMicrosoftOnedriveConfigurationCredentials:SourceMicrosoftOnedriveConfigurationCredentials": {
            "properties": {
                "authenticateViaMicrosoftOAuth": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftOnedriveConfigurationCredentialsAuthenticateViaMicrosoftOAuth:SourceMicrosoftOnedriveConfigurationCredentialsAuthenticateViaMicrosoftOAuth",
                    "description": "OAuthCredentials class to hold authentication details for Microsoft OAuth authentication.\nThis class uses pydantic for data validation and settings management.\n"
                },
                "serviceKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftOnedriveConfigurationCredentialsServiceKeyAuthentication:SourceMicrosoftOnedriveConfigurationCredentialsServiceKeyAuthentication",
                    "description": "ServiceCredentials class for service key authentication.\nThis class is structured similarly to OAuthCredentials but for a different authentication method.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMicrosoftOnedriveConfigurationCredentialsAuthenticateViaMicrosoftOAuth:SourceMicrosoftOnedriveConfigurationCredentialsAuthenticateViaMicrosoftOAuth": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Client ID of your Microsoft developer application\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client Secret of your Microsoft developer application\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Refresh Token of your Microsoft developer application\n",
                    "secret": true
                },
                "tenantId": {
                    "type": "string",
                    "description": "Tenant ID of the Microsoft OneDrive user\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken",
                "tenantId"
            ]
        },
        "airbyte:index/SourceMicrosoftOnedriveConfigurationCredentialsServiceKeyAuthentication:SourceMicrosoftOnedriveConfigurationCredentialsServiceKeyAuthentication": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Client ID of your Microsoft developer application\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client Secret of your Microsoft developer application\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "Tenant ID of the Microsoft OneDrive user\n"
                },
                "userPrincipalName": {
                    "type": "string",
                    "description": "Special characters such as a period, comma, space, and the at sign (@) are converted to underscores (_). More details: https://learn.microsoft.com/en-us/sharepoint/list-onedrive-urls\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "tenantId",
                "userPrincipalName"
            ]
        },
        "airbyte:index/SourceMicrosoftOnedriveConfigurationStream:SourceMicrosoftOnedriveConfigurationStream": {
            "properties": {
                "daysToSyncIfHistoryIsFull": {
                    "type": "integer",
                    "description": "When the state history of the file store is full, syncs will only read files that were last modified in the provided day range. Default: 3\n"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormat:SourceMicrosoftOnedriveConfigurationStreamFormat",
                    "description": "The configuration options that are used to alter how to read incoming files that deviate from the standard formatting.\n"
                },
                "globs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The pattern used to specify which files should be selected from the file system. For more information on glob pattern matching look \u003ca href=\"https://en.wikipedia.org/wiki/Glob_(programming)\"\u003ehere\u003c/a\u003e.\n"
                },
                "inputSchema": {
                    "type": "string",
                    "description": "The schema that will be used to validate records extracted from the file. This will override the stream schema that is auto-detected from incoming files.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the stream.\n"
                },
                "primaryKey": {
                    "type": "string",
                    "description": "The column or columns (for a composite key) that serves as the unique identifier of a record. If empty, the primary key will default to the parser's default primary key.\n",
                    "secret": true
                },
                "schemaless": {
                    "type": "boolean",
                    "description": "When enabled, syncs will not validate or structure records against the stream's schema. Default: false\n"
                },
                "validationPolicy": {
                    "type": "string",
                    "description": "The name of the validation policy that dictates sync behavior when a record does not adhere to the stream schema. must be one of [\"Emit Record\", \"Skip Record\", \"Wait for Discover\"]; Default: \"Emit Record\"\n"
                }
            },
            "type": "object",
            "required": [
                "format",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "daysToSyncIfHistoryIsFull",
                        "format",
                        "name",
                        "schemaless",
                        "validationPolicy"
                    ]
                }
            }
        },
        "airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormat:SourceMicrosoftOnedriveConfigurationStreamFormat": {
            "properties": {
                "avroFormat": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatAvroFormat:SourceMicrosoftOnedriveConfigurationStreamFormatAvroFormat"
                },
                "csvFormat": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatCsvFormat:SourceMicrosoftOnedriveConfigurationStreamFormatCsvFormat"
                },
                "documentFileTypeFormatExperimental": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatDocumentFileTypeFormatExperimental:SourceMicrosoftOnedriveConfigurationStreamFormatDocumentFileTypeFormatExperimental",
                    "description": "Extract text from document formats (.pdf, .docx, .md, .pptx) and emit as one record per file.\n"
                },
                "jsonlFormat": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatJsonlFormat:SourceMicrosoftOnedriveConfigurationStreamFormatJsonlFormat"
                },
                "parquetFormat": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatParquetFormat:SourceMicrosoftOnedriveConfigurationStreamFormatParquetFormat"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatAvroFormat:SourceMicrosoftOnedriveConfigurationStreamFormatAvroFormat": {
            "properties": {
                "doubleAsString": {
                    "type": "boolean",
                    "description": "Whether to convert double fields to strings. This is recommended if you have decimal numbers with a high degree of precision because there can be a loss precision when handling floating point numbers. Default: false\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "doubleAsString"
                    ]
                }
            }
        },
        "airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatCsvFormat:SourceMicrosoftOnedriveConfigurationStreamFormatCsvFormat": {
            "properties": {
                "delimiter": {
                    "type": "string",
                    "description": "The character delimiting individual cells in the CSV data. This may only be a 1-character string. For tab-delimited data enter '\\t'. Default: \",\"\n"
                },
                "doubleQuote": {
                    "type": "boolean",
                    "description": "Whether two quotes in a quoted CSV value denote a single quote in the data. Default: true\n"
                },
                "encoding": {
                    "type": "string",
                    "description": "The character encoding of the CSV data. Leave blank to default to \u003cstrong\u003eUTF8\u003c/strong\u003e. See \u003ca href=\"https://docs.python.org/3/library/codecs.html#standard-encodings\" target=\"_blank\"\u003elist of python encodings\u003c/a\u003e for allowable options. Default: \"utf8\"\n"
                },
                "escapeChar": {
                    "type": "string",
                    "description": "The character used for escaping special characters. To disallow escaping, leave this field blank.\n"
                },
                "falseValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as false values.\n"
                },
                "headerDefinition": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatCsvFormatHeaderDefinition:SourceMicrosoftOnedriveConfigurationStreamFormatCsvFormatHeaderDefinition",
                    "description": "How headers will be defined. `User Provided` assumes the CSV does not have a header row and uses the headers provided and `Autogenerated` assumes the CSV does not have a header row and the CDK will generate headers using for `f{i}` where `i` is the index starting from 0. Else, the default behavior is to use the header from the CSV file. If a user wants to autogenerate or provide column names for a CSV having headers, they can skip rows.\n"
                },
                "nullValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as null values. For example, if the value 'NA' should be interpreted as null, enter 'NA' in this field.\n"
                },
                "quoteChar": {
                    "type": "string",
                    "description": "The character used for quoting CSV values. To disallow quoting, make this field blank. Default: \"\\\"\"\n"
                },
                "skipRowsAfterHeader": {
                    "type": "integer",
                    "description": "The number of rows to skip after the header row. Default: 0\n"
                },
                "skipRowsBeforeHeader": {
                    "type": "integer",
                    "description": "The number of rows to skip before the header row. For example, if the header row is on the 3rd row, enter 2 in this field. Default: 0\n"
                },
                "stringsCanBeNull": {
                    "type": "boolean",
                    "description": "Whether strings can be interpreted as null values. If true, strings that match the null_values set will be interpreted as null. If false, strings that match the null_values set will be interpreted as the string itself. Default: true\n"
                },
                "trueValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as true values.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "delimiter",
                        "doubleQuote",
                        "encoding",
                        "quoteChar",
                        "skipRowsAfterHeader",
                        "skipRowsBeforeHeader",
                        "stringsCanBeNull"
                    ]
                }
            }
        },
        "airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatCsvFormatHeaderDefinition:SourceMicrosoftOnedriveConfigurationStreamFormatCsvFormatHeaderDefinition": {
            "properties": {
                "autogenerated": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated:SourceMicrosoftOnedriveConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated"
                },
                "fromCsv": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv:SourceMicrosoftOnedriveConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv"
                },
                "userProvided": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided:SourceMicrosoftOnedriveConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated:SourceMicrosoftOnedriveConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated": {
            "type": "object"
        },
        "airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv:SourceMicrosoftOnedriveConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv": {
            "type": "object"
        },
        "airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided:SourceMicrosoftOnedriveConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided": {
            "properties": {
                "columnNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The column names that will be used while emitting the CSV records\n"
                }
            },
            "type": "object",
            "required": [
                "columnNames"
            ]
        },
        "airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatDocumentFileTypeFormatExperimental:SourceMicrosoftOnedriveConfigurationStreamFormatDocumentFileTypeFormatExperimental": {
            "properties": {
                "processing": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing:SourceMicrosoftOnedriveConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing",
                    "description": "Processing configuration\n"
                },
                "skipUnprocessableFiles": {
                    "type": "boolean",
                    "description": "If true, skip files that cannot be parsed and pass the error message along as the _ab_source_file_parse_error field. If false, fail the sync. Default: true\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "The strategy used to parse documents. `fast` extracts text directly from the document which doesn't work for all files. `ocr_only` is more reliable, but slower. `hi_res` is the most reliable, but requires an API key and a hosted instance of unstructured and can't be used with local mode. See the unstructured.io documentation for more details: https://unstructured-io.github.io/unstructured/core/partition.html#partition-pdf. must be one of [\"auto\", \"fast\", \"ocr_only\", \"hi_res\"]; Default: \"auto\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "skipUnprocessableFiles",
                        "strategy"
                    ]
                }
            }
        },
        "airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing:SourceMicrosoftOnedriveConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing": {
            "properties": {
                "local": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal:SourceMicrosoftOnedriveConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal",
                    "description": "Process files locally, supporting `fast` and `ocr` modes. This is the default option.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal:SourceMicrosoftOnedriveConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal": {
            "type": "object"
        },
        "airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatJsonlFormat:SourceMicrosoftOnedriveConfigurationStreamFormatJsonlFormat": {
            "type": "object"
        },
        "airbyte:index/SourceMicrosoftOnedriveConfigurationStreamFormatParquetFormat:SourceMicrosoftOnedriveConfigurationStreamFormatParquetFormat": {
            "properties": {
                "decimalAsFloat": {
                    "type": "boolean",
                    "description": "Whether to convert decimal fields to floats. There is a loss of precision when converting decimals to floats, so this is not recommended. Default: false\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "decimalAsFloat"
                    ]
                }
            }
        },
        "airbyte:index/SourceMicrosoftSharepointConfiguration:SourceMicrosoftSharepointConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftSharepointConfigurationCredentials:SourceMicrosoftSharepointConfigurationCredentials",
                    "description": "Credentials for connecting to the One Drive API\n"
                },
                "folderPath": {
                    "type": "string",
                    "description": "Path to a specific folder within the drives to search for files. Leave empty to search all folders of the drives. This does not apply to shared items. Default: \".\"\n"
                },
                "searchScope": {
                    "type": "string",
                    "description": "Specifies the location(s) to search for files. Valid options are 'ACCESSIBLE_DRIVES' for all SharePoint drives the user can access, 'SHARED_ITEMS' for shared items the user has access to, and 'ALL' to search both. must be one of [\"ACCESSIBLE_DRIVES\", \"SHARED_ITEMS\", \"ALL\"]; Default: \"ALL\"\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00.000000Z. Any file modified before this date will not be replicated.\n"
                },
                "streams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceMicrosoftSharepointConfigurationStream:SourceMicrosoftSharepointConfigurationStream"
                    },
                    "description": "Each instance of this configuration defines a \u003ca href=\"https://docs.airbyte.com/cloud/core-concepts#stream\"\u003estream\u003c/a\u003e. Use this to define which files belong in the stream, their format, and how they should be parsed and validated. When sending data to warehouse destination such as Snowflake or BigQuery, each stream is a separate table.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "streams"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "credentials",
                        "folderPath",
                        "searchScope",
                        "streams"
                    ]
                }
            }
        },
        "airbyte:index/SourceMicrosoftSharepointConfigurationCredentials:SourceMicrosoftSharepointConfigurationCredentials": {
            "properties": {
                "authenticateViaMicrosoftOAuth": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftSharepointConfigurationCredentialsAuthenticateViaMicrosoftOAuth:SourceMicrosoftSharepointConfigurationCredentialsAuthenticateViaMicrosoftOAuth",
                    "description": "OAuthCredentials class to hold authentication details for Microsoft OAuth authentication.\nThis class uses pydantic for data validation and settings management.\n"
                },
                "serviceKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftSharepointConfigurationCredentialsServiceKeyAuthentication:SourceMicrosoftSharepointConfigurationCredentialsServiceKeyAuthentication",
                    "description": "ServiceCredentials class for service key authentication.\nThis class is structured similarly to OAuthCredentials but for a different authentication method.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMicrosoftSharepointConfigurationCredentialsAuthenticateViaMicrosoftOAuth:SourceMicrosoftSharepointConfigurationCredentialsAuthenticateViaMicrosoftOAuth": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Client ID of your Microsoft developer application\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client Secret of your Microsoft developer application\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Refresh Token of your Microsoft developer application\n",
                    "secret": true
                },
                "tenantId": {
                    "type": "string",
                    "description": "Tenant ID of the Microsoft SharePoint user\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "tenantId"
            ]
        },
        "airbyte:index/SourceMicrosoftSharepointConfigurationCredentialsServiceKeyAuthentication:SourceMicrosoftSharepointConfigurationCredentialsServiceKeyAuthentication": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Client ID of your Microsoft developer application\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client Secret of your Microsoft developer application\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "Tenant ID of the Microsoft SharePoint user\n"
                },
                "userPrincipalName": {
                    "type": "string",
                    "description": "Special characters such as a period, comma, space, and the at sign (@) are converted to underscores (_). More details: https://learn.microsoft.com/en-us/sharepoint/list-onedrive-urls\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "tenantId",
                "userPrincipalName"
            ]
        },
        "airbyte:index/SourceMicrosoftSharepointConfigurationStream:SourceMicrosoftSharepointConfigurationStream": {
            "properties": {
                "daysToSyncIfHistoryIsFull": {
                    "type": "integer",
                    "description": "When the state history of the file store is full, syncs will only read files that were last modified in the provided day range. Default: 3\n"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormat:SourceMicrosoftSharepointConfigurationStreamFormat",
                    "description": "The configuration options that are used to alter how to read incoming files that deviate from the standard formatting.\n"
                },
                "globs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The pattern used to specify which files should be selected from the file system. For more information on glob pattern matching look \u003ca href=\"https://en.wikipedia.org/wiki/Glob_(programming)\"\u003ehere\u003c/a\u003e.\n"
                },
                "inputSchema": {
                    "type": "string",
                    "description": "The schema that will be used to validate records extracted from the file. This will override the stream schema that is auto-detected from incoming files.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the stream.\n"
                },
                "primaryKey": {
                    "type": "string",
                    "description": "The column or columns (for a composite key) that serves as the unique identifier of a record. If empty, the primary key will default to the parser's default primary key.\n",
                    "secret": true
                },
                "schemaless": {
                    "type": "boolean",
                    "description": "When enabled, syncs will not validate or structure records against the stream's schema. Default: false\n"
                },
                "validationPolicy": {
                    "type": "string",
                    "description": "The name of the validation policy that dictates sync behavior when a record does not adhere to the stream schema. must be one of [\"Emit Record\", \"Skip Record\", \"Wait for Discover\"]; Default: \"Emit Record\"\n"
                }
            },
            "type": "object",
            "required": [
                "format",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "daysToSyncIfHistoryIsFull",
                        "format",
                        "name",
                        "schemaless",
                        "validationPolicy"
                    ]
                }
            }
        },
        "airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormat:SourceMicrosoftSharepointConfigurationStreamFormat": {
            "properties": {
                "avroFormat": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatAvroFormat:SourceMicrosoftSharepointConfigurationStreamFormatAvroFormat"
                },
                "csvFormat": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatCsvFormat:SourceMicrosoftSharepointConfigurationStreamFormatCsvFormat"
                },
                "documentFileTypeFormatExperimental": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatDocumentFileTypeFormatExperimental:SourceMicrosoftSharepointConfigurationStreamFormatDocumentFileTypeFormatExperimental",
                    "description": "Extract text from document formats (.pdf, .docx, .md, .pptx) and emit as one record per file.\n"
                },
                "jsonlFormat": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatJsonlFormat:SourceMicrosoftSharepointConfigurationStreamFormatJsonlFormat"
                },
                "parquetFormat": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatParquetFormat:SourceMicrosoftSharepointConfigurationStreamFormatParquetFormat"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatAvroFormat:SourceMicrosoftSharepointConfigurationStreamFormatAvroFormat": {
            "properties": {
                "doubleAsString": {
                    "type": "boolean",
                    "description": "Whether to convert double fields to strings. This is recommended if you have decimal numbers with a high degree of precision because there can be a loss precision when handling floating point numbers. Default: false\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "doubleAsString"
                    ]
                }
            }
        },
        "airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatCsvFormat:SourceMicrosoftSharepointConfigurationStreamFormatCsvFormat": {
            "properties": {
                "delimiter": {
                    "type": "string",
                    "description": "The character delimiting individual cells in the CSV data. This may only be a 1-character string. For tab-delimited data enter '\\t'. Default: \",\"\n"
                },
                "doubleQuote": {
                    "type": "boolean",
                    "description": "Whether two quotes in a quoted CSV value denote a single quote in the data. Default: true\n"
                },
                "encoding": {
                    "type": "string",
                    "description": "The character encoding of the CSV data. Leave blank to default to \u003cstrong\u003eUTF8\u003c/strong\u003e. See \u003ca href=\"https://docs.python.org/3/library/codecs.html#standard-encodings\" target=\"_blank\"\u003elist of python encodings\u003c/a\u003e for allowable options. Default: \"utf8\"\n"
                },
                "escapeChar": {
                    "type": "string",
                    "description": "The character used for escaping special characters. To disallow escaping, leave this field blank.\n"
                },
                "falseValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as false values.\n"
                },
                "headerDefinition": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatHeaderDefinition:SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatHeaderDefinition",
                    "description": "How headers will be defined. `User Provided` assumes the CSV does not have a header row and uses the headers provided and `Autogenerated` assumes the CSV does not have a header row and the CDK will generate headers using for `f{i}` where `i` is the index starting from 0. Else, the default behavior is to use the header from the CSV file. If a user wants to autogenerate or provide column names for a CSV having headers, they can skip rows.\n"
                },
                "ignoreErrorsOnFieldsMismatch": {
                    "type": "boolean",
                    "description": "Whether to ignore errors that occur when the number of fields in the CSV does not match the number of columns in the schema. Default: false\n"
                },
                "nullValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as null values. For example, if the value 'NA' should be interpreted as null, enter 'NA' in this field.\n"
                },
                "quoteChar": {
                    "type": "string",
                    "description": "The character used for quoting CSV values. To disallow quoting, make this field blank. Default: \"\\\"\"\n"
                },
                "skipRowsAfterHeader": {
                    "type": "integer",
                    "description": "The number of rows to skip after the header row. Default: 0\n"
                },
                "skipRowsBeforeHeader": {
                    "type": "integer",
                    "description": "The number of rows to skip before the header row. For example, if the header row is on the 3rd row, enter 2 in this field. Default: 0\n"
                },
                "stringsCanBeNull": {
                    "type": "boolean",
                    "description": "Whether strings can be interpreted as null values. If true, strings that match the null_values set will be interpreted as null. If false, strings that match the null_values set will be interpreted as the string itself. Default: true\n"
                },
                "trueValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as true values.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "delimiter",
                        "doubleQuote",
                        "encoding",
                        "ignoreErrorsOnFieldsMismatch",
                        "quoteChar",
                        "skipRowsAfterHeader",
                        "skipRowsBeforeHeader",
                        "stringsCanBeNull"
                    ]
                }
            }
        },
        "airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatHeaderDefinition:SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatHeaderDefinition": {
            "properties": {
                "autogenerated": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated:SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated"
                },
                "fromCsv": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv:SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv"
                },
                "userProvided": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided:SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated:SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated": {
            "type": "object"
        },
        "airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv:SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv": {
            "type": "object"
        },
        "airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided:SourceMicrosoftSharepointConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided": {
            "properties": {
                "columnNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The column names that will be used while emitting the CSV records\n"
                }
            },
            "type": "object",
            "required": [
                "columnNames"
            ]
        },
        "airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatDocumentFileTypeFormatExperimental:SourceMicrosoftSharepointConfigurationStreamFormatDocumentFileTypeFormatExperimental": {
            "properties": {
                "processing": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing:SourceMicrosoftSharepointConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing",
                    "description": "Processing configuration\n"
                },
                "skipUnprocessableFiles": {
                    "type": "boolean",
                    "description": "If true, skip files that cannot be parsed and pass the error message along as the _ab_source_file_parse_error field. If false, fail the sync. Default: true\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "The strategy used to parse documents. `fast` extracts text directly from the document which doesn't work for all files. `ocr_only` is more reliable, but slower. `hi_res` is the most reliable, but requires an API key and a hosted instance of unstructured and can't be used with local mode. See the unstructured.io documentation for more details: https://unstructured-io.github.io/unstructured/core/partition.html#partition-pdf. must be one of [\"auto\", \"fast\", \"ocr_only\", \"hi_res\"]; Default: \"auto\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "skipUnprocessableFiles",
                        "strategy"
                    ]
                }
            }
        },
        "airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing:SourceMicrosoftSharepointConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing": {
            "properties": {
                "local": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal:SourceMicrosoftSharepointConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal",
                    "description": "Process files locally, supporting `fast` and `ocr` modes. This is the default option.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal:SourceMicrosoftSharepointConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal": {
            "type": "object"
        },
        "airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatJsonlFormat:SourceMicrosoftSharepointConfigurationStreamFormatJsonlFormat": {
            "type": "object"
        },
        "airbyte:index/SourceMicrosoftSharepointConfigurationStreamFormatParquetFormat:SourceMicrosoftSharepointConfigurationStreamFormatParquetFormat": {
            "properties": {
                "decimalAsFloat": {
                    "type": "boolean",
                    "description": "Whether to convert decimal fields to floats. There is a loss of precision when converting decimals to floats, so this is not recommended. Default: false\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "decimalAsFloat"
                    ]
                }
            }
        },
        "airbyte:index/SourceMicrosoftTeamsConfiguration:SourceMicrosoftTeamsConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftTeamsConfigurationCredentials:SourceMicrosoftTeamsConfigurationCredentials",
                    "description": "Choose how to authenticate to Microsoft\n"
                },
                "period": {
                    "type": "string",
                    "description": "Specifies the length of time over which the Team Device Report stream is aggregated. The supported values are: D7, D30, D90, and D180.\n"
                }
            },
            "type": "object",
            "required": [
                "period"
            ]
        },
        "airbyte:index/SourceMicrosoftTeamsConfigurationCredentials:SourceMicrosoftTeamsConfigurationCredentials": {
            "properties": {
                "authenticateViaMicrosoft": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftTeamsConfigurationCredentialsAuthenticateViaMicrosoft:SourceMicrosoftTeamsConfigurationCredentialsAuthenticateViaMicrosoft"
                },
                "authenticateViaMicrosoftOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftTeamsConfigurationCredentialsAuthenticateViaMicrosoftOAuth20:SourceMicrosoftTeamsConfigurationCredentialsAuthenticateViaMicrosoftOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMicrosoftTeamsConfigurationCredentialsAuthenticateViaMicrosoft:SourceMicrosoftTeamsConfigurationCredentialsAuthenticateViaMicrosoft": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your Microsoft Teams developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your Microsoft Teams developer application.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "A globally unique identifier (GUID) that is different than your organization name or domain. Follow these steps to obtain: open one of the Teams where you belong inside the Teams Application \u003e Click on the … next to the Team title \u003e Click on Get link to team \u003e Copy the link to the team and grab the tenant ID form the URL\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "tenantId"
            ]
        },
        "airbyte:index/SourceMicrosoftTeamsConfigurationCredentialsAuthenticateViaMicrosoftOAuth20:SourceMicrosoftTeamsConfigurationCredentialsAuthenticateViaMicrosoftOAuth20": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your Microsoft Teams developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your Microsoft Teams developer application.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "A Refresh Token to renew the expired Access Token.\n",
                    "secret": true
                },
                "tenantId": {
                    "type": "string",
                    "description": "A globally unique identifier (GUID) that is different than your organization name or domain. Follow these steps to obtain: open one of the Teams where you belong inside the Teams Application \u003e Click on the … next to the Team title \u003e Click on Get link to team \u003e Copy the link to the team and grab the tenant ID form the URL\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken",
                "tenantId"
            ]
        },
        "airbyte:index/SourceMixpanelConfiguration:SourceMixpanelConfiguration": {
            "properties": {
                "attributionWindow": {
                    "type": "integer",
                    "description": "A period of time for attributing results to ads and the lookback period after those actions occur during which ad results are counted. Default attribution window is 5 days. (This value should be non-negative integer). Default: 5\n"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceMixpanelConfigurationCredentials:SourceMixpanelConfigurationCredentials",
                    "description": "Choose how to authenticate to Mixpanel\n"
                },
                "dateWindowSize": {
                    "type": "integer",
                    "description": "Defines window size in days, that used to slice through data. You can reduce it, if amount of data in each window is too big for your environment. (This value should be positive integer). Default: 30\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The date in the format YYYY-MM-DD. Any data after this date will not be replicated. Left empty to always sync to most recent date\n"
                },
                "projectTimezone": {
                    "type": "string",
                    "description": "Time zone in which integer date times are stored. The project timezone may be found in the project settings in the \u003ca href=\"https://help.mixpanel.com/hc/en-us/articles/115004547203-Manage-Timezones-for-Projects-in-Mixpanel\"\u003eMixpanel console\u003c/a\u003e. Default: \"US/Pacific\"\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region of mixpanel domain instance either US or EU. must be one of [\"US\", \"EU\"]; Default: \"US\"\n"
                },
                "selectPropertiesByDefault": {
                    "type": "boolean",
                    "description": "Setting this config parameter to TRUE ensures that new properties on events and engage records are captured. Otherwise new properties will be ignored. Default: true\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The date in the format YYYY-MM-DD. Any data before this date will not be replicated. If this option is not set, the connector will replicate data from up to one year ago by default.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "attributionWindow",
                        "credentials",
                        "dateWindowSize",
                        "projectTimezone",
                        "region",
                        "selectPropertiesByDefault"
                    ]
                }
            }
        },
        "airbyte:index/SourceMixpanelConfigurationCredentials:SourceMixpanelConfigurationCredentials": {
            "properties": {
                "projectSecret": {
                    "$ref": "#/types/airbyte:index/SourceMixpanelConfigurationCredentialsProjectSecret:SourceMixpanelConfigurationCredentialsProjectSecret"
                },
                "serviceAccount": {
                    "$ref": "#/types/airbyte:index/SourceMixpanelConfigurationCredentialsServiceAccount:SourceMixpanelConfigurationCredentialsServiceAccount"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMixpanelConfigurationCredentialsProjectSecret:SourceMixpanelConfigurationCredentialsProjectSecret": {
            "properties": {
                "apiSecret": {
                    "type": "string",
                    "description": "Mixpanel project secret. See the \u003ca href=\"https://developer.mixpanel.com/reference/project-secret#managing-a-projects-secret\"\u003edocs\u003c/a\u003e for more information on how to obtain this.\n"
                }
            },
            "type": "object",
            "required": [
                "apiSecret"
            ]
        },
        "airbyte:index/SourceMixpanelConfigurationCredentialsServiceAccount:SourceMixpanelConfigurationCredentialsServiceAccount": {
            "properties": {
                "projectId": {
                    "type": "integer",
                    "description": "Your project ID number. See the \u003ca href=\"https://help.mixpanel.com/hc/en-us/articles/115004490503-Project-Settings#project-id\"\u003edocs\u003c/a\u003e for more information on how to obtain this.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "Mixpanel Service Account Secret. See the \u003ca href=\"https://developer.mixpanel.com/reference/service-accounts\"\u003edocs\u003c/a\u003e for more information on how to obtain this.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Mixpanel Service Account Username. See the \u003ca href=\"https://developer.mixpanel.com/reference/service-accounts\"\u003edocs\u003c/a\u003e for more information on how to obtain this.\n"
                }
            },
            "type": "object",
            "required": [
                "projectId",
                "secret",
                "username"
            ]
        },
        "airbyte:index/SourceMondayConfiguration:SourceMondayConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceMondayConfigurationCredentials:SourceMondayConfigurationCredentials"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMondayConfigurationCredentials:SourceMondayConfigurationCredentials": {
            "properties": {
                "apiToken": {
                    "$ref": "#/types/airbyte:index/SourceMondayConfigurationCredentialsApiToken:SourceMondayConfigurationCredentialsApiToken"
                },
                "oAuth20": {
                    "$ref": "#/types/airbyte:index/SourceMondayConfigurationCredentialsOAuth20:SourceMondayConfigurationCredentialsOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMondayConfigurationCredentialsApiToken:SourceMondayConfigurationCredentialsApiToken": {
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "API Token for making authenticated requests.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiToken"
            ]
        },
        "airbyte:index/SourceMondayConfigurationCredentialsOAuth20:SourceMondayConfigurationCredentialsOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access Token for making authenticated requests.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your OAuth application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your OAuth application.\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Slug/subdomain of the account, or the first part of the URL that comes before .monday.com. Default: \"\"\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessToken",
                        "clientId",
                        "clientSecret",
                        "subdomain"
                    ]
                }
            }
        },
        "airbyte:index/SourceMongodbInternalPocConfiguration:SourceMongodbInternalPocConfiguration": {
            "properties": {
                "authSource": {
                    "type": "string",
                    "description": "The authentication source where the user information is stored. Default: \"admin\"\n"
                },
                "connectionString": {
                    "type": "string",
                    "description": "The connection string of the database that you want to replicate..\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this username.\n",
                    "secret": true
                },
                "replicaSet": {
                    "type": "string",
                    "description": "The name of the replica set to be replicated.\n"
                },
                "user": {
                    "type": "string",
                    "description": "The username which is used to access the database.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authSource"
                    ]
                }
            }
        },
        "airbyte:index/SourceMongodbV2Configuration:SourceMongodbV2Configuration": {
            "properties": {
                "databaseConfig": {
                    "$ref": "#/types/airbyte:index/SourceMongodbV2ConfigurationDatabaseConfig:SourceMongodbV2ConfigurationDatabaseConfig",
                    "description": "Configures the MongoDB cluster type.\n"
                },
                "discoverSampleSize": {
                    "type": "integer",
                    "description": "The maximum number of documents to sample when attempting to discover the unique fields for a collection. Default: 10000\n"
                },
                "initialWaitingSeconds": {
                    "type": "integer",
                    "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 300 seconds. Valid range: 120 seconds to 1200 seconds. Default: 300\n"
                },
                "invalidCdcCursorPositionBehavior": {
                    "type": "string",
                    "description": "Determines whether Airbyte should fail or re-sync data in case of an stale/invalid cursor value into the WAL. If 'Fail sync' is chosen, a user will have to manually reset the connection before being able to continue syncing data. If 'Re-sync data' is chosen, Airbyte will automatically trigger a refresh but could lead to higher cloud costs and data loss. must be one of [\"Fail sync\", \"Re-sync data\"]; Default: \"Fail sync\"\n"
                },
                "queueSize": {
                    "type": "integer",
                    "description": "The size of the internal queue. This may interfere with memory consumption and efficiency of the connector, please be careful. Default: 10000\n"
                },
                "updateCaptureMode": {
                    "type": "string",
                    "description": "Determines how Airbyte looks up the value of an updated document. If 'Lookup' is chosen, the current value of the document will be read. If 'Post Image' is chosen, then the version of the document immediately after an update will be read. WARNING : Severe data loss will occur if this option is chosen and the appropriate settings are not set on your Mongo instance : https://www.mongodb.com/docs/manual/changeStreams/#change-streams-with-document-pre-and-post-images. must be one of [\"Lookup\", \"Post Image\"]; Default: \"Lookup\"\n"
                }
            },
            "type": "object",
            "required": [
                "databaseConfig"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "databaseConfig",
                        "discoverSampleSize",
                        "initialWaitingSeconds",
                        "invalidCdcCursorPositionBehavior",
                        "queueSize",
                        "updateCaptureMode"
                    ]
                }
            }
        },
        "airbyte:index/SourceMongodbV2ConfigurationDatabaseConfig:SourceMongodbV2ConfigurationDatabaseConfig": {
            "properties": {
                "mongoDbAtlasReplicaSet": {
                    "$ref": "#/types/airbyte:index/SourceMongodbV2ConfigurationDatabaseConfigMongoDbAtlasReplicaSet:SourceMongodbV2ConfigurationDatabaseConfigMongoDbAtlasReplicaSet",
                    "description": "MongoDB Atlas-hosted cluster configured as a replica set\n"
                },
                "selfManagedReplicaSet": {
                    "$ref": "#/types/airbyte:index/SourceMongodbV2ConfigurationDatabaseConfigSelfManagedReplicaSet:SourceMongodbV2ConfigurationDatabaseConfigSelfManagedReplicaSet",
                    "description": "MongoDB self-hosted cluster configured as a replica set\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMongodbV2ConfigurationDatabaseConfigMongoDbAtlasReplicaSet:SourceMongodbV2ConfigurationDatabaseConfigMongoDbAtlasReplicaSet": {
            "properties": {
                "additionalProperties": {
                    "type": "string",
                    "description": "Parsed as JSON.\n"
                },
                "authSource": {
                    "type": "string",
                    "description": "The authentication source where the user information is stored.  See https://www.mongodb.com/docs/manual/reference/connection-string/#mongodb-urioption-urioption.authSource for more details. Default: \"admin\"\n"
                },
                "connectionString": {
                    "type": "string",
                    "description": "The connection string of the cluster that you want to replicate.\n"
                },
                "database": {
                    "type": "string",
                    "description": "The name of the MongoDB database that contains the collection(s) to replicate.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this username.\n",
                    "secret": true
                },
                "schemaEnforced": {
                    "type": "boolean",
                    "description": "When enabled, syncs will validate and structure records against the stream's schema. Default: true\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username which is used to access the database.\n"
                }
            },
            "type": "object",
            "required": [
                "connectionString",
                "database",
                "password",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authSource",
                        "connectionString",
                        "database",
                        "password",
                        "schemaEnforced",
                        "username"
                    ]
                }
            }
        },
        "airbyte:index/SourceMongodbV2ConfigurationDatabaseConfigSelfManagedReplicaSet:SourceMongodbV2ConfigurationDatabaseConfigSelfManagedReplicaSet": {
            "properties": {
                "additionalProperties": {
                    "type": "string",
                    "description": "Parsed as JSON.\n"
                },
                "authSource": {
                    "type": "string",
                    "description": "The authentication source where the user information is stored. Default: \"admin\"\n"
                },
                "connectionString": {
                    "type": "string",
                    "description": "The connection string of the cluster that you want to replicate.  https://www.mongodb.com/docs/manual/reference/connection-string/#find-your-self-hosted-deployment-s-connection-string for more information.\n"
                },
                "database": {
                    "type": "string",
                    "description": "The name of the MongoDB database that contains the collection(s) to replicate.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this username.\n",
                    "secret": true
                },
                "schemaEnforced": {
                    "type": "boolean",
                    "description": "When enabled, syncs will validate and structure records against the stream's schema. Default: true\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username which is used to access the database.\n"
                }
            },
            "type": "object",
            "required": [
                "connectionString",
                "database"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authSource",
                        "connectionString",
                        "database",
                        "schemaEnforced"
                    ]
                }
            }
        },
        "airbyte:index/SourceMssqlConfiguration:SourceMssqlConfiguration": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "The name of the database.\n"
                },
                "host": {
                    "type": "string",
                    "description": "The hostname of the database.\n"
                },
                "jdbcUrlParams": {
                    "type": "string",
                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '\u0026'. (example: key1=value1\u0026key2=value2\u0026key3=value3).\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with the username.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "The port of the database.\n"
                },
                "replicationMethod": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationReplicationMethod:SourceMssqlConfigurationReplicationMethod",
                    "description": "Configures how data is extracted from the database.\n"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of schemas to sync from. Defaults to user. Case sensitive.\n"
                },
                "sslMethod": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationSslMethod:SourceMssqlConfigurationSslMethod",
                    "description": "The encryption method which is used when communicating with the database.\n"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationTunnelMethod:SourceMssqlConfigurationTunnelMethod",
                    "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username which is used to access the database.\n"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "password",
                "port",
                "username"
            ]
        },
        "airbyte:index/SourceMssqlConfigurationReplicationMethod:SourceMssqlConfigurationReplicationMethod": {
            "properties": {
                "readChangesUsingChangeDataCaptureCdc": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationReplicationMethodReadChangesUsingChangeDataCaptureCdc:SourceMssqlConfigurationReplicationMethodReadChangesUsingChangeDataCaptureCdc",
                    "description": "\u003ci\u003eRecommended\u003c/i\u003e - Incrementally reads new inserts, updates, and deletes using the SQL Server's \u003ca href=\"https://docs.airbyte.com/integrations/sources/mssql/#change-data-capture-cdc\"\u003echange data capture feature\u003c/a\u003e. This must be enabled on your database.\n"
                },
                "scanChangesWithUserDefinedCursor": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationReplicationMethodScanChangesWithUserDefinedCursor:SourceMssqlConfigurationReplicationMethodScanChangesWithUserDefinedCursor",
                    "description": "Incrementally detects new inserts and updates using the \u003ca href=\"https://docs.airbyte.com/understanding-airbyte/connections/incremental-append/#user-defined-cursor\"\u003ecursor column\u003c/a\u003e chosen when configuring a connection (e.g. created_at, updated_at).\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMssqlConfigurationReplicationMethodReadChangesUsingChangeDataCaptureCdc:SourceMssqlConfigurationReplicationMethodReadChangesUsingChangeDataCaptureCdc": {
            "properties": {
                "initialWaitingSeconds": {
                    "type": "integer",
                    "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 300 seconds. Valid range: 120 seconds to 3600 seconds. Read about \u003ca href=\"https://docs.airbyte.com/integrations/sources/mysql/#change-data-capture-cdc\"\u003einitial waiting time\u003c/a\u003e. Default: 300\n"
                },
                "invalidCdcCursorPositionBehavior": {
                    "type": "string",
                    "description": "Determines whether Airbyte should fail or re-sync data in case of an stale/invalid cursor value into the WAL. If 'Fail sync' is chosen, a user will have to manually reset the connection before being able to continue syncing data. If 'Re-sync data' is chosen, Airbyte will automatically trigger a refresh but could lead to higher cloud costs and data loss. must be one of [\"Fail sync\", \"Re-sync data\"]; Default: \"Fail sync\"\n"
                },
                "queueSize": {
                    "type": "integer",
                    "description": "The size of the internal queue. This may interfere with memory consumption and efficiency of the connector, please be careful. Default: 10000\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "initialWaitingSeconds",
                        "invalidCdcCursorPositionBehavior",
                        "queueSize"
                    ]
                }
            }
        },
        "airbyte:index/SourceMssqlConfigurationReplicationMethodScanChangesWithUserDefinedCursor:SourceMssqlConfigurationReplicationMethodScanChangesWithUserDefinedCursor": {
            "type": "object"
        },
        "airbyte:index/SourceMssqlConfigurationSslMethod:SourceMssqlConfigurationSslMethod": {
            "properties": {
                "encryptedTrustServerCertificate": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationSslMethodEncryptedTrustServerCertificate:SourceMssqlConfigurationSslMethodEncryptedTrustServerCertificate",
                    "description": "Use the certificate provided by the server without verification. (For testing purposes only!)\n"
                },
                "encryptedVerifyCertificate": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationSslMethodEncryptedVerifyCertificate:SourceMssqlConfigurationSslMethodEncryptedVerifyCertificate",
                    "description": "Verify and use the certificate provided by the server.\n"
                },
                "unencrypted": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationSslMethodUnencrypted:SourceMssqlConfigurationSslMethodUnencrypted",
                    "description": "Data transfer will not be encrypted.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMssqlConfigurationSslMethodEncryptedTrustServerCertificate:SourceMssqlConfigurationSslMethodEncryptedTrustServerCertificate": {
            "type": "object"
        },
        "airbyte:index/SourceMssqlConfigurationSslMethodEncryptedVerifyCertificate:SourceMssqlConfigurationSslMethodEncryptedVerifyCertificate": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "certificate of the server, or of the CA that signed the server certificate\n"
                },
                "hostNameInCertificate": {
                    "type": "string",
                    "description": "Specifies the host name of the server. The value of this property must match the subject property of the certificate.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMssqlConfigurationSslMethodUnencrypted:SourceMssqlConfigurationSslMethodUnencrypted": {
            "type": "object"
        },
        "airbyte:index/SourceMssqlConfigurationTunnelMethod:SourceMssqlConfigurationTunnelMethod": {
            "properties": {
                "noTunnel": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationTunnelMethodNoTunnel:SourceMssqlConfigurationTunnelMethodNoTunnel"
                },
                "passwordAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationTunnelMethodPasswordAuthentication:SourceMssqlConfigurationTunnelMethodPasswordAuthentication"
                },
                "sshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationTunnelMethodSshKeyAuthentication:SourceMssqlConfigurationTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMssqlConfigurationTunnelMethodNoTunnel:SourceMssqlConfigurationTunnelMethodNoTunnel": {
            "type": "object"
        },
        "airbyte:index/SourceMssqlConfigurationTunnelMethodPasswordAuthentication:SourceMssqlConfigurationTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host\n"
                },
                "tunnelUserPassword": {
                    "type": "string",
                    "description": "OS-level password for logging into the jump server host\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser",
                        "tunnelUserPassword"
                    ]
                }
            }
        },
        "airbyte:index/SourceMssqlConfigurationTunnelMethodSshKeyAuthentication:SourceMssqlConfigurationTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string",
                    "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )\n",
                    "secret": true
                },
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host.\n"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "sshKey",
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser"
                    ]
                }
            }
        },
        "airbyte:index/SourceMyHoursConfiguration:SourceMyHoursConfiguration": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Your My Hours username\n"
                },
                "logsBatchSize": {
                    "type": "integer",
                    "description": "Pagination size used for retrieving logs in days. Default: 30\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated to the username\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "Start date for collecting time logs\n"
                }
            },
            "type": "object",
            "required": [
                "email",
                "password",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "email",
                        "logsBatchSize",
                        "password",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourceMysqlConfiguration:SourceMysqlConfiguration": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "The database name.\n"
                },
                "host": {
                    "type": "string",
                    "description": "The host name of the database.\n"
                },
                "jdbcUrlParams": {
                    "type": "string",
                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '\u0026'. (example: key1=value1\u0026key2=value2\u0026key3=value3). For more information read about \u003ca href=\"https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-jdbc-url-format.html\"\u003eJDBC URL parameters\u003c/a\u003e.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with the username.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "The port to connect to. Default: 3306\n"
                },
                "replicationMethod": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationReplicationMethod:SourceMysqlConfigurationReplicationMethod",
                    "description": "Configures how data is extracted from the database.\n"
                },
                "sslMode": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationSslMode:SourceMysqlConfigurationSslMode",
                    "description": "SSL connection modes. Read more \u003ca href=\"https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-using-ssl.html\"\u003e in the docs\u003c/a\u003e.\n"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationTunnelMethod:SourceMysqlConfigurationTunnelMethod",
                    "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username which is used to access the database.\n"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "replicationMethod",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "database",
                        "host",
                        "port",
                        "replicationMethod",
                        "username"
                    ]
                }
            }
        },
        "airbyte:index/SourceMysqlConfigurationReplicationMethod:SourceMysqlConfigurationReplicationMethod": {
            "properties": {
                "readChangesUsingBinaryLogCdc": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationReplicationMethodReadChangesUsingBinaryLogCdc:SourceMysqlConfigurationReplicationMethodReadChangesUsingBinaryLogCdc",
                    "description": "\u003ci\u003eRecommended\u003c/i\u003e - Incrementally reads new inserts, updates, and deletes using the MySQL \u003ca href=\"https://docs.airbyte.com/integrations/sources/mysql/#change-data-capture-cdc\"\u003ebinary log\u003c/a\u003e. This must be enabled on your database.\n"
                },
                "scanChangesWithUserDefinedCursor": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationReplicationMethodScanChangesWithUserDefinedCursor:SourceMysqlConfigurationReplicationMethodScanChangesWithUserDefinedCursor",
                    "description": "Incrementally detects new inserts and updates using the \u003ca href=\"https://docs.airbyte.com/understanding-airbyte/connections/incremental-append/#user-defined-cursor\"\u003ecursor column\u003c/a\u003e chosen when configuring a connection (e.g. created_at, updated_at).\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMysqlConfigurationReplicationMethodReadChangesUsingBinaryLogCdc:SourceMysqlConfigurationReplicationMethodReadChangesUsingBinaryLogCdc": {
            "properties": {
                "initialWaitingSeconds": {
                    "type": "integer",
                    "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 300 seconds. Valid range: 120 seconds to 1200 seconds. Read about \u003ca href=\"https://docs.airbyte.com/integrations/sources/mysql/#change-data-capture-cdc\"\u003einitial waiting time\u003c/a\u003e. Default: 300\n"
                },
                "invalidCdcCursorPositionBehavior": {
                    "type": "string",
                    "description": "Determines whether Airbyte should fail or re-sync data in case of an stale/invalid cursor value into the WAL. If 'Fail sync' is chosen, a user will have to manually reset the connection before being able to continue syncing data. If 'Re-sync data' is chosen, Airbyte will automatically trigger a refresh but could lead to higher cloud costs and data loss. must be one of [\"Fail sync\", \"Re-sync data\"]; Default: \"Fail sync\"\n"
                },
                "serverTimeZone": {
                    "type": "string",
                    "description": "Enter the configured MySQL server timezone. This should only be done if the configured timezone in your MySQL instance does not conform to IANNA standard.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "initialWaitingSeconds",
                        "invalidCdcCursorPositionBehavior"
                    ]
                }
            }
        },
        "airbyte:index/SourceMysqlConfigurationReplicationMethodScanChangesWithUserDefinedCursor:SourceMysqlConfigurationReplicationMethodScanChangesWithUserDefinedCursor": {
            "type": "object"
        },
        "airbyte:index/SourceMysqlConfigurationSslMode:SourceMysqlConfigurationSslMode": {
            "properties": {
                "preferred": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationSslModePreferred:SourceMysqlConfigurationSslModePreferred",
                    "description": "Automatically attempt SSL connection. If the MySQL server does not support SSL, continue with a regular connection.\n"
                },
                "required": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationSslModeRequired:SourceMysqlConfigurationSslModeRequired",
                    "description": "Always connect with SSL. If the MySQL server doesn’t support SSL, the connection will not be established. Certificate Authority (CA) and Hostname are not verified.\n"
                },
                "verifyCa": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationSslModeVerifyCa:SourceMysqlConfigurationSslModeVerifyCa",
                    "description": "Always connect with SSL. Verifies CA, but allows connection even if Hostname does not match.\n"
                },
                "verifyIdentity": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationSslModeVerifyIdentity:SourceMysqlConfigurationSslModeVerifyIdentity",
                    "description": "Always connect with SSL. Verify both CA and Hostname.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMysqlConfigurationSslModePreferred:SourceMysqlConfigurationSslModePreferred": {
            "type": "object"
        },
        "airbyte:index/SourceMysqlConfigurationSslModeRequired:SourceMysqlConfigurationSslModeRequired": {
            "type": "object"
        },
        "airbyte:index/SourceMysqlConfigurationSslModeVerifyCa:SourceMysqlConfigurationSslModeVerifyCa": {
            "properties": {
                "caCertificate": {
                    "type": "string",
                    "description": "CA certificate\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "Client certificate (this is not a required field, but if you want to use it, you will need to add the \u003cb\u003eClient key\u003c/b\u003e as well)\n"
                },
                "clientKey": {
                    "type": "string",
                    "description": "Client key (this is not a required field, but if you want to use it, you will need to add the \u003cb\u003eClient certificate\u003c/b\u003e as well)\n",
                    "secret": true
                },
                "clientKeyPassword": {
                    "type": "string",
                    "description": "Password for keystorage. This field is optional. If you do not add it - the password will be generated automatically.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "caCertificate"
            ]
        },
        "airbyte:index/SourceMysqlConfigurationSslModeVerifyIdentity:SourceMysqlConfigurationSslModeVerifyIdentity": {
            "properties": {
                "caCertificate": {
                    "type": "string",
                    "description": "CA certificate\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "Client certificate (this is not a required field, but if you want to use it, you will need to add the \u003cb\u003eClient key\u003c/b\u003e as well)\n"
                },
                "clientKey": {
                    "type": "string",
                    "description": "Client key (this is not a required field, but if you want to use it, you will need to add the \u003cb\u003eClient certificate\u003c/b\u003e as well)\n",
                    "secret": true
                },
                "clientKeyPassword": {
                    "type": "string",
                    "description": "Password for keystorage. This field is optional. If you do not add it - the password will be generated automatically.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "caCertificate"
            ]
        },
        "airbyte:index/SourceMysqlConfigurationTunnelMethod:SourceMysqlConfigurationTunnelMethod": {
            "properties": {
                "noTunnel": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationTunnelMethodNoTunnel:SourceMysqlConfigurationTunnelMethodNoTunnel"
                },
                "passwordAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationTunnelMethodPasswordAuthentication:SourceMysqlConfigurationTunnelMethodPasswordAuthentication"
                },
                "sshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationTunnelMethodSshKeyAuthentication:SourceMysqlConfigurationTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMysqlConfigurationTunnelMethodNoTunnel:SourceMysqlConfigurationTunnelMethodNoTunnel": {
            "type": "object"
        },
        "airbyte:index/SourceMysqlConfigurationTunnelMethodPasswordAuthentication:SourceMysqlConfigurationTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host\n"
                },
                "tunnelUserPassword": {
                    "type": "string",
                    "description": "OS-level password for logging into the jump server host\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser",
                        "tunnelUserPassword"
                    ]
                }
            }
        },
        "airbyte:index/SourceMysqlConfigurationTunnelMethodSshKeyAuthentication:SourceMysqlConfigurationTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string",
                    "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )\n",
                    "secret": true
                },
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host.\n"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "sshKey",
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser"
                    ]
                }
            }
        },
        "airbyte:index/SourceNetsuiteConfiguration:SourceNetsuiteConfiguration": {
            "properties": {
                "consumerKey": {
                    "type": "string",
                    "description": "Consumer key associated with your integration\n",
                    "secret": true
                },
                "consumerSecret": {
                    "type": "string",
                    "description": "Consumer secret associated with your integration\n"
                },
                "objectTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The API names of the Netsuite objects you want to sync. Setting this speeds up the connection setup process by limiting the number of schemas that need to be retrieved from Netsuite.\n"
                },
                "realm": {
                    "type": "string",
                    "description": "Netsuite realm e.g. 2344535, as for `production` or 2344535_SB1, as for the `sandbox`\n"
                },
                "startDatetime": {
                    "type": "string",
                    "description": "Starting point for your data replication, in format of \"YYYY-MM-DDTHH:mm:ssZ\"\n"
                },
                "tokenKey": {
                    "type": "string",
                    "description": "Access token key\n",
                    "secret": true
                },
                "tokenSecret": {
                    "type": "string",
                    "description": "Access token secret\n",
                    "secret": true
                },
                "windowInDays": {
                    "type": "integer",
                    "description": "The amount of days used to query the data with date chunks. Set smaller value, if you have lots of data. Default: 30\n"
                }
            },
            "type": "object",
            "required": [
                "consumerKey",
                "consumerSecret",
                "realm",
                "startDatetime",
                "tokenKey",
                "tokenSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "consumerKey",
                        "consumerSecret",
                        "realm",
                        "startDatetime",
                        "tokenKey",
                        "tokenSecret",
                        "windowInDays"
                    ]
                }
            }
        },
        "airbyte:index/SourceNotionConfiguration:SourceNotionConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceNotionConfigurationCredentials:SourceNotionConfigurationCredentials",
                    "description": "Choose either OAuth (recommended for Airbyte Cloud) or Access Token. See our \u003ca href='https://docs.airbyte.com/integrations/sources/notion#setup-guide'\u003edocs\u003c/a\u003e for more information.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format YYYY-MM-DDTHH:MM:SS.000Z. During incremental sync, any data generated before this date will not be replicated. If left blank, the start date will be set to 2 years before the present date.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceNotionConfigurationCredentials:SourceNotionConfigurationCredentials": {
            "properties": {
                "accessToken": {
                    "$ref": "#/types/airbyte:index/SourceNotionConfigurationCredentialsAccessToken:SourceNotionConfigurationCredentialsAccessToken"
                },
                "oAuth20": {
                    "$ref": "#/types/airbyte:index/SourceNotionConfigurationCredentialsOAuth20:SourceNotionConfigurationCredentialsOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceNotionConfigurationCredentialsAccessToken:SourceNotionConfigurationCredentialsAccessToken": {
            "properties": {
                "token": {
                    "type": "string",
                    "description": "The Access Token for your private Notion integration. See the \u003ca href='https://docs.airbyte.com/integrations/sources/notion#step-1-create-an-integration-in-notion'\u003edocs\u003c/a\u003e for more information on how to obtain this token.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "token"
            ]
        },
        "airbyte:index/SourceNotionConfigurationCredentialsOAuth20:SourceNotionConfigurationCredentialsOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The Access Token received by completing the OAuth flow for your Notion integration. See our \u003ca href='https://docs.airbyte.com/integrations/sources/notion#step-2-set-permissions-and-acquire-authorization-credentials'\u003edocs\u003c/a\u003e for more information.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your Notion integration. See our \u003ca href='https://docs.airbyte.com/integrations/sources/notion#step-2-set-permissions-and-acquire-authorization-credentials'\u003edocs\u003c/a\u003e for more information.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your Notion integration. See our \u003ca href='https://docs.airbyte.com/integrations/sources/notion#step-2-set-permissions-and-acquire-authorization-credentials'\u003edocs\u003c/a\u003e for more information.\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret"
            ]
        },
        "airbyte:index/SourceNytimesConfiguration:SourceNytimesConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API Key\n",
                    "secret": true
                },
                "endDate": {
                    "type": "string",
                    "description": "End date to stop the article retrieval (format YYYY-MM)\n"
                },
                "period": {
                    "type": "integer",
                    "description": "Period of time (in days). must be one of [\"1\", \"7\", \"30\"]\n"
                },
                "shareType": {
                    "type": "string",
                    "description": "Share Type. must be one of [\"facebook\"]\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Start date to begin the article retrieval (format YYYY-MM)\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "period",
                "startDate"
            ]
        },
        "airbyte:index/SourceOktaConfiguration:SourceOktaConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceOktaConfigurationCredentials:SourceOktaConfigurationCredentials"
                },
                "domain": {
                    "type": "string",
                    "description": "The Okta domain. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/okta\"\u003edocs\u003c/a\u003e for instructions on how to find it.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format YYYY-MM-DDTHH:MM:SSZ. Any data before this date will not be replicated.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceOktaConfigurationCredentials:SourceOktaConfigurationCredentials": {
            "properties": {
                "apiToken": {
                    "$ref": "#/types/airbyte:index/SourceOktaConfigurationCredentialsApiToken:SourceOktaConfigurationCredentialsApiToken"
                },
                "oAuth20": {
                    "$ref": "#/types/airbyte:index/SourceOktaConfigurationCredentialsOAuth20:SourceOktaConfigurationCredentialsOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceOktaConfigurationCredentialsApiToken:SourceOktaConfigurationCredentialsApiToken": {
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "An Okta token. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/okta\"\u003edocs\u003c/a\u003e for instructions on how to generate it.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiToken"
            ]
        },
        "airbyte:index/SourceOktaConfigurationCredentialsOAuth20:SourceOktaConfigurationCredentialsOAuth20": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your OAuth application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your OAuth application.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Refresh Token to obtain new Access Token, when it's expired.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceOmnisendConfiguration:SourceOmnisendConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API Key\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceOnesignalConfiguration:SourceOnesignalConfiguration": {
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceOnesignalConfigurationApplication:SourceOnesignalConfigurationApplication"
                    },
                    "description": "Applications keys, see the \u003ca href=\"https://documentation.onesignal.com/docs/accounts-and-keys\"\u003edocs\u003c/a\u003e for more information on how to obtain this data\n"
                },
                "outcomeNames": {
                    "type": "string",
                    "description": "Comma-separated list of names and the value (sum/count) for the returned outcome data. See the \u003ca href=\"https://documentation.onesignal.com/reference/view-outcomes\"\u003edocs\u003c/a\u003e for more details\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The date from which you'd like to replicate data for OneSignal API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.\n"
                },
                "userAuthKey": {
                    "type": "string",
                    "description": "OneSignal User Auth Key, see the \u003ca href=\"https://documentation.onesignal.com/docs/accounts-and-keys#user-auth-key\"\u003edocs\u003c/a\u003e for more information on how to obtain this key.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "applications",
                "outcomeNames",
                "startDate",
                "userAuthKey"
            ]
        },
        "airbyte:index/SourceOnesignalConfigurationApplication:SourceOnesignalConfigurationApplication": {
            "properties": {
                "appApiKey": {
                    "type": "string",
                    "secret": true
                },
                "appId": {
                    "type": "string"
                },
                "appName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "appApiKey",
                "appId"
            ]
        },
        "airbyte:index/SourceOracleConfiguration:SourceOracleConfiguration": {
            "properties": {
                "connectionData": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationConnectionData:SourceOracleConfigurationConnectionData",
                    "description": "Connect data that will be used for DB connection\n"
                },
                "encryption": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationEncryption:SourceOracleConfigurationEncryption",
                    "description": "The encryption method with is used when communicating with the database.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname of the database.\n"
                },
                "jdbcUrlParams": {
                    "type": "string",
                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '\u0026'. (example: key1=value1\u0026key2=value2\u0026key3=value3).\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with the username.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port of the database.\nOracle Corporations recommends the following port numbers:\n1521 - Default listening port for client connections to the listener. \n2484 - Recommended and officially registered listening port for client connections to the listener using TCP/IP with SSL\nDefault: 1521\n"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of schemas to sync from. Defaults to user. Case sensitive.\n"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationTunnelMethod:SourceOracleConfigurationTunnelMethod",
                    "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username which is used to access the database.\n"
                }
            },
            "type": "object",
            "required": [
                "encryption",
                "host",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "encryption",
                        "host",
                        "port",
                        "username"
                    ]
                }
            }
        },
        "airbyte:index/SourceOracleConfigurationConnectionData:SourceOracleConfigurationConnectionData": {
            "properties": {
                "serviceName": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationConnectionDataServiceName:SourceOracleConfigurationConnectionDataServiceName",
                    "description": "Use service name\n"
                },
                "systemIdsid": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationConnectionDataSystemIdsid:SourceOracleConfigurationConnectionDataSystemIdsid",
                    "description": "Use SID (Oracle System Identifier)\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceOracleConfigurationConnectionDataServiceName:SourceOracleConfigurationConnectionDataServiceName": {
            "properties": {
                "serviceName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ]
        },
        "airbyte:index/SourceOracleConfigurationConnectionDataSystemIdsid:SourceOracleConfigurationConnectionDataSystemIdsid": {
            "properties": {
                "sid": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sid"
            ]
        },
        "airbyte:index/SourceOracleConfigurationEncryption:SourceOracleConfigurationEncryption": {
            "properties": {
                "nativeNetworkEncryptionNne": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationEncryptionNativeNetworkEncryptionNne:SourceOracleConfigurationEncryptionNativeNetworkEncryptionNne",
                    "description": "The native network encryption gives you the ability to encrypt database connections, without the configuration overhead of TCP/IP and SSL/TLS and without the need to open and listen on different ports.\n"
                },
                "tlsEncryptedVerifyCertificate": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationEncryptionTlsEncryptedVerifyCertificate:SourceOracleConfigurationEncryptionTlsEncryptedVerifyCertificate",
                    "description": "Verify and use the certificate provided by the server.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceOracleConfigurationEncryptionNativeNetworkEncryptionNne:SourceOracleConfigurationEncryptionNativeNetworkEncryptionNne": {
            "properties": {
                "encryptionAlgorithm": {
                    "type": "string",
                    "description": "This parameter defines what encryption algorithm is used. must be one of [\"AES256\", \"RC4_56\", \"3DES168\"]; Default: \"AES256\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "encryptionAlgorithm"
                    ]
                }
            }
        },
        "airbyte:index/SourceOracleConfigurationEncryptionTlsEncryptedVerifyCertificate:SourceOracleConfigurationEncryptionTlsEncryptedVerifyCertificate": {
            "properties": {
                "sslCertificate": {
                    "type": "string",
                    "description": "Privacy Enhanced Mail (PEM) files are concatenated certificate containers frequently used in certificate installations.\n"
                }
            },
            "type": "object",
            "required": [
                "sslCertificate"
            ]
        },
        "airbyte:index/SourceOracleConfigurationTunnelMethod:SourceOracleConfigurationTunnelMethod": {
            "properties": {
                "noTunnel": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationTunnelMethodNoTunnel:SourceOracleConfigurationTunnelMethodNoTunnel"
                },
                "passwordAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationTunnelMethodPasswordAuthentication:SourceOracleConfigurationTunnelMethodPasswordAuthentication"
                },
                "sshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationTunnelMethodSshKeyAuthentication:SourceOracleConfigurationTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceOracleConfigurationTunnelMethodNoTunnel:SourceOracleConfigurationTunnelMethodNoTunnel": {
            "type": "object"
        },
        "airbyte:index/SourceOracleConfigurationTunnelMethodPasswordAuthentication:SourceOracleConfigurationTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host\n"
                },
                "tunnelUserPassword": {
                    "type": "string",
                    "description": "OS-level password for logging into the jump server host\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser",
                        "tunnelUserPassword"
                    ]
                }
            }
        },
        "airbyte:index/SourceOracleConfigurationTunnelMethodSshKeyAuthentication:SourceOracleConfigurationTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string",
                    "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )\n",
                    "secret": true
                },
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host.\n"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "sshKey",
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser"
                    ]
                }
            }
        },
        "airbyte:index/SourceOrbConfiguration:SourceOrbConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Orb API Key, issued from the Orb admin console.\n",
                    "secret": true
                },
                "endDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2022-03-01T00:00:00Z. Any data with created_at after this data will not be synced. For Subscription Usage, this becomes the `timeframe_start` API parameter.\n"
                },
                "lookbackWindowDays": {
                    "type": "integer",
                    "description": "When set to N, the connector will always refresh resources created within the past N days. By default, updated objects that are not newly created are not incrementally synced. Default: 0\n"
                },
                "numericEventPropertiesKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Property key names to extract from all events, in order to enrich ledger entries corresponding to an event deduction.\n",
                    "secret": true
                },
                "planId": {
                    "type": "string",
                    "description": "Orb Plan ID to filter subscriptions that should have usage fetched.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2022-03-01T00:00:00Z. Any data with created_at before this data will not be synced. For Subscription Usage, this becomes the `timeframe_start` API parameter.\n"
                },
                "stringEventPropertiesKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Property key names to extract from all events, in order to enrich ledger entries corresponding to an event deduction.\n",
                    "secret": true
                },
                "subscriptionUsageGroupingKey": {
                    "type": "string",
                    "description": "Property key name to group subscription usage by.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "lookbackWindowDays",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourceOrbitConfiguration:SourceOrbitConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "Authorizes you to work with Orbit workspaces associated with the token.\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "Date in the format 2022-06-26. Only load members whose last activities are after this date.\n"
                },
                "workspace": {
                    "type": "string",
                    "description": "The unique name of the workspace that your API token is associated with.\n"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "workspace"
            ]
        },
        "airbyte:index/SourceOutbrainAmplifyConfiguration:SourceOutbrainAmplifyConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceOutbrainAmplifyConfigurationCredentials:SourceOutbrainAmplifyConfigurationCredentials",
                    "description": "Credentials for making authenticated requests requires either username/password or access_token.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "Date in the format YYYY-MM-DD.\n"
                },
                "geoLocationBreakdown": {
                    "type": "string",
                    "description": "The granularity used for geo location data in reports. must be one of [\"country\", \"region\", \"subregion\"]\n"
                },
                "reportGranularity": {
                    "type": "string",
                    "description": "The granularity used for periodic data in reports. See \u003ca href=\"https://amplifyv01.docs.apiary.io/#reference/performance-reporting/periodic/retrieve-performance-statistics-for-all-marketer-campaigns-by-periodic-breakdown\"\u003ethe docs\u003c/a\u003e. must be one of [\"daily\", \"weekly\", \"monthly\"]\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Date in the format YYYY-MM-DD eg. 2017-01-25. Any data before this date will not be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "startDate"
            ]
        },
        "airbyte:index/SourceOutbrainAmplifyConfigurationCredentials:SourceOutbrainAmplifyConfigurationCredentials": {
            "properties": {
                "accessToken": {
                    "$ref": "#/types/airbyte:index/SourceOutbrainAmplifyConfigurationCredentialsAccessToken:SourceOutbrainAmplifyConfigurationCredentialsAccessToken"
                },
                "usernamePassword": {
                    "$ref": "#/types/airbyte:index/SourceOutbrainAmplifyConfigurationCredentialsUsernamePassword:SourceOutbrainAmplifyConfigurationCredentialsUsernamePassword"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceOutbrainAmplifyConfigurationCredentialsAccessToken:SourceOutbrainAmplifyConfigurationCredentialsAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access Token for making authenticated requests.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceOutbrainAmplifyConfigurationCredentialsUsernamePassword:SourceOutbrainAmplifyConfigurationCredentialsUsernamePassword": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "Add Password for authentication.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "Add Username for authentication.\n"
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "airbyte:index/SourceOutreachConfiguration:SourceOutreachConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your Outreach developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your Outreach developer application.\n"
                },
                "redirectUri": {
                    "type": "string",
                    "description": "A Redirect URI is the location where the authorization server sends the user once the app has been successfully authorized and granted an authorization code or access token.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The token for obtaining the new access token.\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "The date from which you'd like to replicate data for Outreach API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "redirectUri",
                "refreshToken",
                "startDate"
            ]
        },
        "airbyte:index/SourcePaypalTransactionConfiguration:SourcePaypalTransactionConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your Paypal developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your Paypal developer application.\n"
                },
                "disputeStartDate": {
                    "type": "string",
                    "description": "Start Date parameter for the list dispute endpoint in \u003ca href=\\\"https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\\\"\u003eISO format\u003c/a\u003e. This Start Date must be in range within 180 days before present time, and requires ONLY 3 miliseconds(mandatory). If you don't use this option, it defaults to a start date set 180 days in the past.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "End Date for data extraction in \u003ca href=\\\"https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\\\"\u003eISO format\u003c/a\u003e. This can be help you select specific range of time, mainly for test purposes  or data integrity tests. When this is not used, now_utc() is used by the streams. This does not apply to Disputes and Product streams.\n"
                },
                "isSandbox": {
                    "type": "boolean",
                    "description": "Determines whether to use the sandbox or production environment. Default: false\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The key to refresh the expired access token.\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "Start Date for data extraction in \u003ca href=\\\"https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\\\"\u003eISO format\u003c/a\u003e. Date must be in range from 3 years till 12 hrs before present time.\n"
                },
                "timeWindow": {
                    "type": "integer",
                    "description": "The number of days per request. Must be a number between 1 and 31. Default: 7\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "clientId",
                        "clientSecret",
                        "isSandbox",
                        "startDate",
                        "timeWindow"
                    ]
                }
            }
        },
        "airbyte:index/SourcePaystackConfiguration:SourcePaystackConfiguration": {
            "properties": {
                "lookbackWindowDays": {
                    "type": "integer",
                    "description": "When set, the connector will always reload data from the past N days, where N is the value set here. This is useful if your data is updated after creation. Default: 0\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The Paystack API key (usually starts with 'sk_live_'; find yours \u003ca href=\"https://dashboard.paystack.com/#/settings/developer\"\u003ehere\u003c/a\u003e).\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "secretKey",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "lookbackWindowDays",
                        "secretKey",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourcePendoConfiguration:SourcePendoConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourcePersistiqConfiguration:SourcePersistiqConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "PersistIq API Key. See the \u003ca href=\"https://apidocs.persistiq.com/#authentication\"\u003edocs\u003c/a\u003e for more information on where to find that key.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourcePexelsApiConfiguration:SourcePexelsApiConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key is required to access pexels api, For getting your's goto https://www.pexels.com/api/documentation and create account for free.\n",
                    "secret": true
                },
                "color": {
                    "type": "string",
                    "description": "Optional, Desired photo color. Supported colors red, orange, yellow, green, turquoise, blue, violet, pink, brown, black, gray, white or any hexidecimal color code.\n"
                },
                "locale": {
                    "type": "string",
                    "description": "Optional, The locale of the search you are performing. The current supported locales are 'en-US' 'pt-BR' 'es-ES' 'ca-ES' 'de-DE' 'it-IT' 'fr-FR' 'sv-SE' 'id-ID' 'pl-PL' 'ja-JP' 'zh-TW' 'zh-CN' 'ko-KR' 'th-TH' 'nl-NL' 'hu-HU' 'vi-VN' 'cs-CZ' 'da-DK' 'fi-FI' 'uk-UA' 'el-GR' 'ro-RO' 'nb-NO' 'sk-SK' 'tr-TR' 'ru-RU'.\n"
                },
                "orientation": {
                    "type": "string",
                    "description": "Optional, Desired photo orientation. The current supported orientations are landscape, portrait or square\n"
                },
                "query": {
                    "type": "string",
                    "description": "Optional, the search query, Example Ocean, Tigers, Pears, etc.\n"
                },
                "size": {
                    "type": "string",
                    "description": "Optional, Minimum photo size. The current supported sizes are large(24MP), medium(12MP) or small(4MP).\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "query"
            ]
        },
        "airbyte:index/SourcePinterestConfiguration:SourcePinterestConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourcePinterestConfigurationCredentials:SourcePinterestConfigurationCredentials"
                },
                "customReports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourcePinterestConfigurationCustomReport:SourcePinterestConfigurationCustomReport"
                    },
                    "description": "A list which contains ad statistics entries, each entry must have a name and can contains fields, breakdowns or action_breakdowns. Click on \"add\" to fill this field.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "A date in the format YYYY-MM-DD. If you have not set a date, it would be defaulted to latest allowed date by api (89 days from today).\n"
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "For the ads, ad_groups, and campaigns streams, specifying a status will filter out records that do not match the specified ones. If a status is not specified, the source will default to records with a status of either ACTIVE or PAUSED.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourcePinterestConfigurationCredentials:SourcePinterestConfigurationCredentials": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your OAuth application\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your OAuth application.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Refresh Token to obtain new Access Token, when it's expired.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourcePinterestConfigurationCustomReport:SourcePinterestConfigurationCustomReport": {
            "properties": {
                "attributionTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of types of attribution for the conversion report\n"
                },
                "clickWindowDays": {
                    "type": "integer",
                    "description": "Number of days to use as the conversion attribution window for a pin click action. must be one of [\"0\", \"1\", \"7\", \"14\", \"30\", \"60\"]; Default: 30\n"
                },
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of chosen columns\n"
                },
                "conversionReportTime": {
                    "type": "string",
                    "description": "The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.. must be one of [\"TIME_OF_AD_ACTION\", \"TIME_OF_CONVERSION\"]; Default: \"TIME_OF_AD_ACTION\"\n"
                },
                "engagementWindowDays": {
                    "type": "integer",
                    "description": "Number of days to use as the conversion attribution window for an engagement action. must be one of [\"0\", \"1\", \"7\", \"14\", \"30\", \"60\"]; Default: [30]\n"
                },
                "granularity": {
                    "type": "string",
                    "description": "Chosen granularity for API. must be one of [\"TOTAL\", \"DAY\", \"HOUR\", \"WEEK\", \"MONTH\"]; Default: \"TOTAL\"\n"
                },
                "level": {
                    "type": "string",
                    "description": "Chosen level for API. must be one of [\"ADVERTISER\", \"ADVERTISER_TARGETING\", \"CAMPAIGN\", \"CAMPAIGN_TARGETING\", \"AD_GROUP\", \"AD_GROUP_TARGETING\", \"PIN_PROMOTION\", \"PIN_PROMOTION_TARGETING\", \"KEYWORD\", \"PRODUCT_GROUP\", \"PRODUCT_GROUP_TARGETING\", \"PRODUCT_ITEM\"]; Default: \"ADVERTISER\"\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name value of report\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "A date in the format YYYY-MM-DD. If you have not set a date, it would be defaulted to latest allowed date by report api (913 days from today).\n"
                },
                "viewWindowDays": {
                    "type": "integer",
                    "description": "Number of days to use as the conversion attribution window for a view action. must be one of [\"0\", \"1\", \"7\", \"14\", \"30\", \"60\"]; Default: [30]\n"
                }
            },
            "type": "object",
            "required": [
                "columns",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "clickWindowDays",
                        "columns",
                        "conversionReportTime",
                        "engagementWindowDays",
                        "granularity",
                        "level",
                        "name",
                        "viewWindowDays"
                    ]
                }
            }
        },
        "airbyte:index/SourcePipedriveConfiguration:SourcePipedriveConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "The Pipedrive API Token.\n",
                    "secret": true
                },
                "replicationStartDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. When specified and not None, then stream will behave as incremental\n"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "replicationStartDate"
            ]
        },
        "airbyte:index/SourcePocketConfiguration:SourcePocketConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The user's Pocket access token.\n",
                    "secret": true
                },
                "consumerKey": {
                    "type": "string",
                    "description": "Your application's Consumer Key.\n",
                    "secret": true
                },
                "contentType": {
                    "type": "string",
                    "description": "Select the content type of the items to retrieve. must be one of [\"article\", \"video\", \"image\"]\n"
                },
                "detailType": {
                    "type": "string",
                    "description": "Select the granularity of the information about each item. must be one of [\"simple\", \"complete\"]\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Only return items from a particular `domain`.\n"
                },
                "favorite": {
                    "type": "boolean",
                    "description": "Retrieve only favorited items. Default: false\n"
                },
                "search": {
                    "type": "string",
                    "description": "Only return items whose title or url contain the `search` string.\n"
                },
                "since": {
                    "type": "string",
                    "description": "Only return items modified since the given timestamp.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "Sort retrieved items by the given criteria. must be one of [\"newest\", \"oldest\", \"title\", \"site\"]\n"
                },
                "state": {
                    "type": "string",
                    "description": "Select the state of the items to retrieve. must be one of [\"unread\", \"archive\", \"all\"]\n"
                },
                "tag": {
                    "type": "string",
                    "description": "Return only items tagged with this tag name. Use _untagged_ for retrieving only untagged items.\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "consumerKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessToken",
                        "consumerKey",
                        "favorite"
                    ]
                }
            }
        },
        "airbyte:index/SourcePokeapiConfiguration:SourcePokeapiConfiguration": {
            "properties": {
                "pokemonName": {
                    "type": "string",
                    "description": "Pokemon requested from the API. must be one of [\"bulbasaur\", \"ivysaur\", \"venusaur\", \"charmander\", \"charmeleon\", \"charizard\", \"squirtle\", \"wartortle\", \"blastoise\", \"caterpie\", \"metapod\", \"butterfree\", \"weedle\", \"kakuna\", \"beedrill\", \"pidgey\", \"pidgeotto\", \"pidgeot\", \"rattata\", \"raticate\", \"spearow\", \"fearow\", \"ekans\", \"arbok\", \"pikachu\", \"raichu\", \"sandshrew\", \"sandslash\", \"nidoranf\", \"nidorina\", \"nidoqueen\", \"nidoranm\", \"nidorino\", \"nidoking\", \"clefairy\", \"clefable\", \"vulpix\", \"ninetales\", \"jigglypuff\", \"wigglytuff\", \"zubat\", \"golbat\", \"oddish\", \"gloom\", \"vileplume\", \"paras\", \"parasect\", \"venonat\", \"venomoth\", \"diglett\", \"dugtrio\", \"meowth\", \"persian\", \"psyduck\", \"golduck\", \"mankey\", \"primeape\", \"growlithe\", \"arcanine\", \"poliwag\", \"poliwhirl\", \"poliwrath\", \"abra\", \"kadabra\", \"alakazam\", \"machop\", \"machoke\", \"machamp\", \"bellsprout\", \"weepinbell\", \"victreebel\", \"tentacool\", \"tentacruel\", \"geodude\", \"graveler\", \"golem\", \"ponyta\", \"rapidash\", \"slowpoke\", \"slowbro\", \"magnemite\", \"magneton\", \"farfetchd\", \"doduo\", \"dodrio\", \"seel\", \"dewgong\", \"grimer\", \"muk\", \"shellder\", \"cloyster\", \"gastly\", \"haunter\", \"gengar\", \"onix\", \"drowzee\", \"hypno\", \"krabby\", \"kingler\", \"voltorb\", \"electrode\", \"exeggcute\", \"exeggutor\", \"cubone\", \"marowak\", \"hitmonlee\", \"hitmonchan\", \"lickitung\", \"koffing\", \"weezing\", \"rhyhorn\", \"rhydon\", \"chansey\", \"tangela\", \"kangaskhan\", \"horsea\", \"seadra\", \"goldeen\", \"seaking\", \"staryu\", \"starmie\", \"mrmime\", \"scyther\", \"jynx\", \"electabuzz\", \"magmar\", \"pinsir\", \"tauros\", \"magikarp\", \"gyarados\", \"lapras\", \"ditto\", \"eevee\", \"vaporeon\", \"jolteon\", \"flareon\", \"porygon\", \"omanyte\", \"omastar\", \"kabuto\", \"kabutops\", \"aerodactyl\", \"snorlax\", \"articuno\", \"zapdos\", \"moltres\", \"dratini\", \"dragonair\", \"dragonite\", \"mewtwo\", \"mew\", \"chikorita\", \"bayleef\", \"meganium\", \"cyndaquil\", \"quilava\", \"typhlosion\", \"totodile\", \"croconaw\", \"feraligatr\", \"sentret\", \"furret\", \"hoothoot\", \"noctowl\", \"ledyba\", \"ledian\", \"spinarak\", \"ariados\", \"crobat\", \"chinchou\", \"lanturn\", \"pichu\", \"cleffa\", \"igglybuff\", \"togepi\", \"togetic\", \"natu\", \"xatu\", \"mareep\", \"flaaffy\", \"ampharos\", \"bellossom\", \"marill\", \"azumarill\", \"sudowoodo\", \"politoed\", \"hoppip\", \"skiploom\", \"jumpluff\", \"aipom\", \"sunkern\", \"sunflora\", \"yanma\", \"wooper\", \"quagsire\", \"espeon\", \"umbreon\", \"murkrow\", \"slowking\", \"misdreavus\", \"unown\", \"wobbuffet\", \"girafarig\", \"pineco\", \"forretress\", \"dunsparce\", \"gligar\", \"steelix\", \"snubbull\", \"granbull\", \"qwilfish\", \"scizor\", \"shuckle\", \"heracross\", \"sneasel\", \"teddiursa\", \"ursaring\", \"slugma\", \"magcargo\", \"swinub\", \"piloswine\", \"corsola\", \"remoraid\", \"octillery\", \"delibird\", \"mantine\", \"skarmory\", \"houndour\", \"houndoom\", \"kingdra\", \"phanpy\", \"donphan\", \"porygon2\", \"stantler\", \"smeargle\", \"tyrogue\", \"hitmontop\", \"smoochum\", \"elekid\", \"magby\", \"miltank\", \"blissey\", \"raikou\", \"entei\", \"suicune\", \"larvitar\", \"pupitar\", \"tyranitar\", \"lugia\", \"ho-oh\", \"celebi\", \"treecko\", \"grovyle\", \"sceptile\", \"torchic\", \"combusken\", \"blaziken\", \"mudkip\", \"marshtomp\", \"swampert\", \"poochyena\", \"mightyena\", \"zigzagoon\", \"linoone\", \"wurmple\", \"silcoon\", \"beautifly\", \"cascoon\", \"dustox\", \"lotad\", \"lombre\", \"ludicolo\", \"seedot\", \"nuzleaf\", \"shiftry\", \"taillow\", \"swellow\", \"wingull\", \"pelipper\", \"ralts\", \"kirlia\", \"gardevoir\", \"surskit\", \"masquerain\", \"shroomish\", \"breloom\", \"slakoth\", \"vigoroth\", \"slaking\", \"nincada\", \"ninjask\", \"shedinja\", \"whismur\", \"loudred\", \"exploud\", \"makuhita\", \"hariyama\", \"azurill\", \"nosepass\", \"skitty\", \"delcatty\", \"sableye\", \"mawile\", \"aron\", \"lairon\", \"aggron\", \"meditite\", \"medicham\", \"electrike\", \"manectric\", \"plusle\", \"minun\", \"volbeat\", \"illumise\", \"roselia\", \"gulpin\", \"swalot\", \"carvanha\", \"sharpedo\", \"wailmer\", \"wailord\", \"numel\", \"camerupt\", \"torkoal\", \"spoink\", \"grumpig\", \"spinda\", \"trapinch\", \"vibrava\", \"flygon\", \"cacnea\", \"cacturne\", \"swablu\", \"altaria\", \"zangoose\", \"seviper\", \"lunatone\", \"solrock\", \"barboach\", \"whiscash\", \"corphish\", \"crawdaunt\", \"baltoy\", \"claydol\", \"lileep\", \"cradily\", \"anorith\", \"armaldo\", \"feebas\", \"milotic\", \"castform\", \"kecleon\", \"shuppet\", \"banette\", \"duskull\", \"dusclops\", \"tropius\", \"chimecho\", \"absol\", \"wynaut\", \"snorunt\", \"glalie\", \"spheal\", \"sealeo\", \"walrein\", \"clamperl\", \"huntail\", \"gorebyss\", \"relicanth\", \"luvdisc\", \"bagon\", \"shelgon\", \"salamence\", \"beldum\", \"metang\", \"metagross\", \"regirock\", \"regice\", \"registeel\", \"latias\", \"latios\", \"kyogre\", \"groudon\", \"rayquaza\", \"jirachi\", \"deoxys\", \"turtwig\", \"grotle\", \"torterra\", \"chimchar\", \"monferno\", \"infernape\", \"piplup\", \"prinplup\", \"empoleon\", \"starly\", \"staravia\", \"staraptor\", \"bidoof\", \"bibarel\", \"kricketot\", \"kricketune\", \"shinx\", \"luxio\", \"luxray\", \"budew\", \"roserade\", \"cranidos\", \"rampardos\", \"shieldon\", \"bastiodon\", \"burmy\", \"wormadam\", \"mothim\", \"combee\", \"vespiquen\", \"pachirisu\", \"buizel\", \"floatzel\", \"cherubi\", \"cherrim\", \"shellos\", \"gastrodon\", \"ambipom\", \"drifloon\", \"drifblim\", \"buneary\", \"lopunny\", \"mismagius\", \"honchkrow\", \"glameow\", \"purugly\", \"chingling\", \"stunky\", \"skuntank\", \"bronzor\", \"bronzong\", \"bonsly\", \"mimejr\", \"happiny\", \"chatot\", \"spiritomb\", \"gible\", \"gabite\", \"garchomp\", \"munchlax\", \"riolu\", \"lucario\", \"hippopotas\", \"hippowdon\", \"skorupi\", \"drapion\", \"croagunk\", \"toxicroak\", \"carnivine\", \"finneon\", \"lumineon\", \"mantyke\", \"snover\", \"abomasnow\", \"weavile\", \"magnezone\", \"lickilicky\", \"rhyperior\", \"tangrowth\", \"electivire\", \"magmortar\", \"togekiss\", \"yanmega\", \"leafeon\", \"glaceon\", \"gliscor\", \"mamoswine\", \"porygon-z\", \"gallade\", \"probopass\", \"dusknoir\", \"froslass\", \"rotom\", \"uxie\", \"mesprit\", \"azelf\", \"dialga\", \"palkia\", \"heatran\", \"regigigas\", \"giratina\", \"cresselia\", \"phione\", \"manaphy\", \"darkrai\", \"shaymin\", \"arceus\", \"victini\", \"snivy\", \"servine\", \"serperior\", \"tepig\", \"pignite\", \"emboar\", \"oshawott\", \"dewott\", \"samurott\", \"patrat\", \"watchog\", \"lillipup\", \"herdier\", \"stoutland\", \"purrloin\", \"liepard\", \"pansage\", \"simisage\", \"pansear\", \"simisear\", \"panpour\", \"simipour\", \"munna\", \"musharna\", \"pidove\", \"tranquill\", \"unfezant\", \"blitzle\", \"zebstrika\", \"roggenrola\", \"boldore\", \"gigalith\", \"woobat\", \"swoobat\", \"drilbur\", \"excadrill\", \"audino\", \"timburr\", \"gurdurr\", \"conkeldurr\", \"tympole\", \"palpitoad\", \"seismitoad\", \"throh\", \"sawk\", \"sewaddle\", \"swadloon\", \"leavanny\", \"venipede\", \"whirlipede\", \"scolipede\", \"cottonee\", \"whimsicott\", \"petilil\", \"lilligant\", \"basculin\", \"sandile\", \"krokorok\", \"krookodile\", \"darumaka\", \"darmanitan\", \"maractus\", \"dwebble\", \"crustle\", \"scraggy\", \"scrafty\", \"sigilyph\", \"yamask\", \"cofagrigus\", \"tirtouga\", \"carracosta\", \"archen\", \"archeops\", \"trubbish\", \"garbodor\", \"zorua\", \"zoroark\", \"minccino\", \"cinccino\", \"gothita\", \"gothorita\", \"gothitelle\", \"solosis\", \"duosion\", \"reuniclus\", \"ducklett\", \"swanna\", \"vanillite\", \"vanillish\", \"vanilluxe\", \"deerling\", \"sawsbuck\", \"emolga\", \"karrablast\", \"escavalier\", \"foongus\", \"amoonguss\", \"frillish\", \"jellicent\", \"alomomola\", \"joltik\", \"galvantula\", \"ferroseed\", \"ferrothorn\", \"klink\", \"klang\", \"klinklang\", \"tynamo\", \"eelektrik\", \"eelektross\", \"elgyem\", \"beheeyem\", \"litwick\", \"lampent\", \"chandelure\", \"axew\", \"fraxure\", \"haxorus\", \"cubchoo\", \"beartic\", \"cryogonal\", \"shelmet\", \"accelgor\", \"stunfisk\", \"mienfoo\", \"mienshao\", \"druddigon\", \"golett\", \"golurk\", \"pawniard\", \"bisharp\", \"bouffalant\", \"rufflet\", \"braviary\", \"vullaby\", \"mandibuzz\", \"heatmor\", \"durant\", \"deino\", \"zweilous\", \"hydreigon\", \"larvesta\", \"volcarona\", \"cobalion\", \"terrakion\", \"virizion\", \"tornadus\", \"thundurus\", \"reshiram\", \"zekrom\", \"landorus\", \"kyurem\", \"keldeo\", \"meloetta\", \"genesect\", \"chespin\", \"quilladin\", \"chesnaught\", \"fennekin\", \"braixen\", \"delphox\", \"froakie\", \"frogadier\", \"greninja\", \"bunnelby\", \"diggersby\", \"fletchling\", \"fletchinder\", \"talonflame\", \"scatterbug\", \"spewpa\", \"vivillon\", \"litleo\", \"pyroar\", \"flabebe\", \"floette\", \"florges\", \"skiddo\", \"gogoat\", \"pancham\", \"pangoro\", \"furfrou\", \"espurr\", \"meowstic\", \"honedge\", \"doublade\", \"aegislash\", \"spritzee\", \"aromatisse\", \"swirlix\", \"slurpuff\", \"inkay\", \"malamar\", \"binacle\", \"barbaracle\", \"skrelp\", \"dragalge\", \"clauncher\", \"clawitzer\", \"helioptile\", \"heliolisk\", \"tyrunt\", \"tyrantrum\", \"amaura\", \"aurorus\", \"sylveon\", \"hawlucha\", \"dedenne\", \"carbink\", \"goomy\", \"sliggoo\", \"goodra\", \"klefki\", \"phantump\", \"trevenant\", \"pumpkaboo\", \"gourgeist\", \"bergmite\", \"avalugg\", \"noibat\", \"noivern\", \"xerneas\", \"yveltal\", \"zygarde\", \"diancie\", \"hoopa\", \"volcanion\", \"rowlet\", \"dartrix\", \"decidueye\", \"litten\", \"torracat\", \"incineroar\", \"popplio\", \"brionne\", \"primarina\", \"pikipek\", \"trumbeak\", \"toucannon\", \"yungoos\", \"gumshoos\", \"grubbin\", \"charjabug\", \"vikavolt\", \"crabrawler\", \"crabominable\", \"oricorio\", \"cutiefly\", \"ribombee\", \"rockruff\", \"lycanroc\", \"wishiwashi\", \"mareanie\", \"toxapex\", \"mudbray\", \"mudsdale\", \"dewpider\", \"araquanid\", \"fomantis\", \"lurantis\", \"morelull\", \"shiinotic\", \"salandit\", \"salazzle\", \"stufful\", \"bewear\", \"bounsweet\", \"steenee\", \"tsareena\", \"comfey\", \"oranguru\", \"passimian\", \"wimpod\", \"golisopod\", \"sandygast\", \"palossand\", \"pyukumuku\", \"typenull\", \"silvally\", \"minior\", \"komala\", \"turtonator\", \"togedemaru\", \"mimikyu\", \"bruxish\", \"drampa\", \"dhelmise\", \"jangmo-o\", \"hakamo-o\", \"kommo-o\", \"tapukoko\", \"tapulele\", \"tapubulu\", \"tapufini\", \"cosmog\", \"cosmoem\", \"solgaleo\", \"lunala\", \"nihilego\", \"buzzwole\", \"pheromosa\", \"xurkitree\", \"celesteela\", \"kartana\", \"guzzlord\", \"necrozma\", \"magearna\", \"marshadow\", \"poipole\", \"naganadel\", \"stakataka\", \"blacephalon\", \"zeraora\", \"meltan\", \"melmetal\", \"grookey\", \"thwackey\", \"rillaboom\", \"scorbunny\", \"raboot\", \"cinderace\", \"sobble\", \"drizzile\", \"inteleon\", \"skwovet\", \"greedent\", \"rookidee\", \"corvisquire\", \"corviknight\", \"blipbug\", \"dottler\", \"orbeetle\", \"nickit\", \"thievul\", \"gossifleur\", \"eldegoss\", \"wooloo\", \"dubwool\", \"chewtle\", \"drednaw\", \"yamper\", \"boltund\", \"rolycoly\", \"carkol\", \"coalossal\", \"applin\", \"flapple\", \"appletun\", \"silicobra\", \"sandaconda\", \"cramorant\", \"arrokuda\", \"barraskewda\", \"toxel\", \"toxtricity\", \"sizzlipede\", \"centiskorch\", \"clobbopus\", \"grapploct\", \"sinistea\", \"polteageist\", \"hatenna\", \"hattrem\", \"hatterene\", \"impidimp\", \"morgrem\", \"grimmsnarl\", \"obstagoon\", \"perrserker\", \"cursola\", \"sirfetchd\", \"mrrime\", \"runerigus\", \"milcery\", \"alcremie\", \"falinks\", \"pincurchin\", \"snom\", \"frosmoth\", \"stonjourner\", \"eiscue\", \"indeedee\", \"morpeko\", \"cufant\", \"copperajah\", \"dracozolt\", \"arctozolt\", \"dracovish\", \"arctovish\", \"duraludon\", \"dreepy\", \"drakloak\", \"dragapult\", \"zacian\", \"zamazenta\", \"eternatus\", \"kubfu\", \"urshifu\", \"zarude\", \"regieleki\", \"regidrago\", \"glastrier\", \"spectrier\", \"calyrex\"]\n"
                }
            },
            "type": "object",
            "required": [
                "pokemonName"
            ]
        },
        "airbyte:index/SourcePolygonStockApiConfiguration:SourcePolygonStockApiConfiguration": {
            "properties": {
                "adjusted": {
                    "type": "string",
                    "description": "Determines whether or not the results are adjusted for splits. By default, results are adjusted and set to true. Set this to false to get results that are NOT adjusted for splits.\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "Your API ACCESS Key\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The target date for the aggregate window.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The target date for the aggregate window.\n"
                },
                "multiplier": {
                    "type": "integer",
                    "description": "The size of the timespan multiplier.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "Sort the results by timestamp. asc will return results in ascending order (oldest at the top), desc will return results in descending order (newest at the top).\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The beginning date for the aggregate window.\n"
                },
                "stocksTicker": {
                    "type": "string",
                    "description": "The exchange symbol that this item is traded under.\n"
                },
                "timespan": {
                    "type": "string",
                    "description": "The size of the time window.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "endDate",
                "multiplier",
                "startDate",
                "stocksTicker",
                "timespan"
            ]
        },
        "airbyte:index/SourcePostgresConfiguration:SourcePostgresConfiguration": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "Name of the database.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Hostname of the database.\n"
                },
                "jdbcUrlParams": {
                    "type": "string",
                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '\u0026'. (Eg. key1=value1\u0026key2=value2\u0026key3=value3). For more information read about \u003ca href=\"https://jdbc.postgresql.org/documentation/head/connect.html\"\u003eJDBC URL parameters\u003c/a\u003e.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password associated with the username.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port of the database. Default: 5432\n"
                },
                "replicationMethod": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationReplicationMethod:SourcePostgresConfigurationReplicationMethod",
                    "description": "Configures how data is extracted from the database.\n"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of schemas (case sensitive) to sync from. Defaults to public.\n"
                },
                "sslMode": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationSslMode:SourcePostgresConfigurationSslMode",
                    "description": "SSL connection modes. \n  Read more \u003ca href=\"https://jdbc.postgresql.org/documentation/head/ssl-client.html\"\u003e in the docs\u003c/a\u003e.\n"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationTunnelMethod:SourcePostgresConfigurationTunnelMethod",
                    "description": "Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username to access the database.\n"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "database",
                        "host",
                        "port",
                        "username"
                    ]
                }
            }
        },
        "airbyte:index/SourcePostgresConfigurationReplicationMethod:SourcePostgresConfigurationReplicationMethod": {
            "properties": {
                "detectChangesWithXminSystemColumn": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationReplicationMethodDetectChangesWithXminSystemColumn:SourcePostgresConfigurationReplicationMethodDetectChangesWithXminSystemColumn",
                    "description": "\u003ci\u003eRecommended\u003c/i\u003e - Incrementally reads new inserts and updates via Postgres \u003ca href=\"https://docs.airbyte.com/integrations/sources/postgres/#xmin\"\u003eXmin system column\u003c/a\u003e. Only recommended for tables up to 500GB.\n"
                },
                "readChangesUsingWriteAheadLogCdc": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationReplicationMethodReadChangesUsingWriteAheadLogCdc:SourcePostgresConfigurationReplicationMethodReadChangesUsingWriteAheadLogCdc",
                    "description": "\u003ci\u003eRecommended\u003c/i\u003e - Incrementally reads new inserts, updates, and deletes using the Postgres \u003ca href=\"https://docs.airbyte.com/integrations/sources/postgres/#cdc\"\u003ewrite-ahead log (WAL)\u003c/a\u003e. This needs to be configured on the source database itself. Recommended for tables of any size.\n"
                },
                "scanChangesWithUserDefinedCursor": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationReplicationMethodScanChangesWithUserDefinedCursor:SourcePostgresConfigurationReplicationMethodScanChangesWithUserDefinedCursor",
                    "description": "Incrementally detects new inserts and updates using the \u003ca href=\"https://docs.airbyte.com/understanding-airbyte/connections/incremental-append/#user-defined-cursor\"\u003ecursor column\u003c/a\u003e chosen when configuring a connection (e.g. created_at, updated_at).\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourcePostgresConfigurationReplicationMethodDetectChangesWithXminSystemColumn:SourcePostgresConfigurationReplicationMethodDetectChangesWithXminSystemColumn": {
            "type": "object"
        },
        "airbyte:index/SourcePostgresConfigurationReplicationMethodReadChangesUsingWriteAheadLogCdc:SourcePostgresConfigurationReplicationMethodReadChangesUsingWriteAheadLogCdc": {
            "properties": {
                "additionalProperties": {
                    "type": "string",
                    "description": "Parsed as JSON.\n"
                },
                "heartbeatActionQuery": {
                    "type": "string",
                    "description": "Specifies a query that the connector executes on the source database when the connector sends a heartbeat message. Please see the \u003ca href=\"https://docs.airbyte.com/integrations/sources/postgres/postgres-wal-disk-consumption-and-heartbeat-action-query\"\u003esetup guide\u003c/a\u003e for how and when to configure this setting. Default: \"\"\n"
                },
                "initialWaitingSeconds": {
                    "type": "integer",
                    "description": "The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 1200 seconds. Valid range: 120 seconds to 2400 seconds. Read about \u003ca href=\"https://docs.airbyte.com/integrations/sources/postgres#step-5-optional-set-up-initial-waiting-time\"\u003einitial waiting time\u003c/a\u003e. Default: 1200\n"
                },
                "invalidCdcCursorPositionBehavior": {
                    "type": "string",
                    "description": "Determines whether Airbyte should fail or re-sync data in case of an stale/invalid cursor value into the WAL. If 'Fail sync' is chosen, a user will have to manually reset the connection before being able to continue syncing data. If 'Re-sync data' is chosen, Airbyte will automatically trigger a refresh but could lead to higher cloud costs and data loss. must be one of [\"Fail sync\", \"Re-sync data\"]; Default: \"Fail sync\"\n"
                },
                "lsnCommitBehaviour": {
                    "type": "string",
                    "description": "Determines when Airbyte should flush the LSN of processed WAL logs in the source database. `After loading Data in the destination` is default. If `While reading Data` is selected, in case of a downstream failure (while loading data into the destination), next sync would result in a full sync. must be one of [\"While reading Data\", \"After loading Data in the destination\"]; Default: \"After loading Data in the destination\"\n"
                },
                "plugin": {
                    "type": "string",
                    "description": "A logical decoding plugin installed on the PostgreSQL server. must be one of [\"pgoutput\"]; Default: \"pgoutput\"\n"
                },
                "publication": {
                    "type": "string",
                    "description": "A Postgres publication used for consuming changes. Read about \u003ca href=\"https://docs.airbyte.com/integrations/sources/postgres#step-4-create-publications-and-replication-identities-for-tables\"\u003epublications and replication identities\u003c/a\u003e.\n"
                },
                "queueSize": {
                    "type": "integer",
                    "description": "The size of the internal queue. This may interfere with memory consumption and efficiency of the connector, please be careful. Default: 10000\n"
                },
                "replicationSlot": {
                    "type": "string",
                    "description": "A plugin logical replication slot. Read about \u003ca href=\"https://docs.airbyte.com/integrations/sources/postgres#step-3-create-replication-slot\"\u003ereplication slots\u003c/a\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "publication",
                "replicationSlot"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "heartbeatActionQuery",
                        "initialWaitingSeconds",
                        "invalidCdcCursorPositionBehavior",
                        "lsnCommitBehaviour",
                        "plugin",
                        "publication",
                        "queueSize",
                        "replicationSlot"
                    ]
                }
            }
        },
        "airbyte:index/SourcePostgresConfigurationReplicationMethodScanChangesWithUserDefinedCursor:SourcePostgresConfigurationReplicationMethodScanChangesWithUserDefinedCursor": {
            "type": "object"
        },
        "airbyte:index/SourcePostgresConfigurationSslMode:SourcePostgresConfigurationSslMode": {
            "properties": {
                "allow": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationSslModeAllow:SourcePostgresConfigurationSslModeAllow",
                    "description": "Enables encryption only when required by the source database.\n"
                },
                "disable": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationSslModeDisable:SourcePostgresConfigurationSslModeDisable",
                    "description": "Disables encryption of communication between Airbyte and source database.\n"
                },
                "prefer": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationSslModePrefer:SourcePostgresConfigurationSslModePrefer",
                    "description": "Allows unencrypted connection only if the source database does not support encryption.\n"
                },
                "require": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationSslModeRequire:SourcePostgresConfigurationSslModeRequire",
                    "description": "Always require encryption. If the source database server does not support encryption, connection will fail.\n"
                },
                "verifyCa": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationSslModeVerifyCa:SourcePostgresConfigurationSslModeVerifyCa",
                    "description": "Always require encryption and verifies that the source database server has a valid SSL certificate.\n"
                },
                "verifyFull": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationSslModeVerifyFull:SourcePostgresConfigurationSslModeVerifyFull",
                    "description": "This is the most secure mode. Always require encryption and verifies the identity of the source database server.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourcePostgresConfigurationSslModeAllow:SourcePostgresConfigurationSslModeAllow": {
            "properties": {
                "additionalProperties": {
                    "type": "string",
                    "description": "Parsed as JSON.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourcePostgresConfigurationSslModeDisable:SourcePostgresConfigurationSslModeDisable": {
            "properties": {
                "additionalProperties": {
                    "type": "string",
                    "description": "Parsed as JSON.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourcePostgresConfigurationSslModePrefer:SourcePostgresConfigurationSslModePrefer": {
            "properties": {
                "additionalProperties": {
                    "type": "string",
                    "description": "Parsed as JSON.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourcePostgresConfigurationSslModeRequire:SourcePostgresConfigurationSslModeRequire": {
            "properties": {
                "additionalProperties": {
                    "type": "string",
                    "description": "Parsed as JSON.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourcePostgresConfigurationSslModeVerifyCa:SourcePostgresConfigurationSslModeVerifyCa": {
            "properties": {
                "additionalProperties": {
                    "type": "string",
                    "description": "Parsed as JSON.\n"
                },
                "caCertificate": {
                    "type": "string",
                    "description": "CA certificate\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "Client certificate\n"
                },
                "clientKey": {
                    "type": "string",
                    "description": "Client key\n",
                    "secret": true
                },
                "clientKeyPassword": {
                    "type": "string",
                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "caCertificate"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationSslModeVerifyFull:SourcePostgresConfigurationSslModeVerifyFull": {
            "properties": {
                "additionalProperties": {
                    "type": "string",
                    "description": "Parsed as JSON.\n"
                },
                "caCertificate": {
                    "type": "string",
                    "description": "CA certificate\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "Client certificate\n"
                },
                "clientKey": {
                    "type": "string",
                    "description": "Client key\n",
                    "secret": true
                },
                "clientKeyPassword": {
                    "type": "string",
                    "description": "Password for keystorage. If you do not add it - the password will be generated automatically.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "caCertificate"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationTunnelMethod:SourcePostgresConfigurationTunnelMethod": {
            "properties": {
                "noTunnel": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationTunnelMethodNoTunnel:SourcePostgresConfigurationTunnelMethodNoTunnel"
                },
                "passwordAuthentication": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationTunnelMethodPasswordAuthentication:SourcePostgresConfigurationTunnelMethodPasswordAuthentication"
                },
                "sshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationTunnelMethodSshKeyAuthentication:SourcePostgresConfigurationTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourcePostgresConfigurationTunnelMethodNoTunnel:SourcePostgresConfigurationTunnelMethodNoTunnel": {
            "type": "object"
        },
        "airbyte:index/SourcePostgresConfigurationTunnelMethodPasswordAuthentication:SourcePostgresConfigurationTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host\n"
                },
                "tunnelUserPassword": {
                    "type": "string",
                    "description": "OS-level password for logging into the jump server host\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser",
                        "tunnelUserPassword"
                    ]
                }
            }
        },
        "airbyte:index/SourcePostgresConfigurationTunnelMethodSshKeyAuthentication:SourcePostgresConfigurationTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string",
                    "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )\n",
                    "secret": true
                },
                "tunnelHost": {
                    "type": "string",
                    "description": "Hostname of the jump server host that allows inbound ssh tunnel.\n"
                },
                "tunnelPort": {
                    "type": "integer",
                    "description": "Port on the proxy/jump server that accepts inbound ssh connections. Default: 22\n"
                },
                "tunnelUser": {
                    "type": "string",
                    "description": "OS-level username for logging into the jump server host.\n"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "sshKey",
                        "tunnelHost",
                        "tunnelPort",
                        "tunnelUser"
                    ]
                }
            }
        },
        "airbyte:index/SourcePosthogConfiguration:SourcePosthogConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API Key. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/posthog\"\u003edocs\u003c/a\u003e for information on how to generate this key.\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base PostHog url. Defaults to PostHog Cloud (https://app.posthog.com). Default: \"https://app.posthog.com\"\n"
                },
                "eventsTimeStep": {
                    "type": "integer",
                    "description": "Set lower value in case of failing long running sync of events stream. Default: 30\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The date from which you'd like to replicate the data. Any data before this date will not be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "baseUrl",
                        "eventsTimeStep",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourcePostmarkappConfiguration:SourcePostmarkappConfiguration": {
            "properties": {
                "xPostmarkAccountToken": {
                    "type": "string",
                    "description": "API Key for account\n"
                },
                "xPostmarkServerToken": {
                    "type": "string",
                    "description": "API Key for server\n"
                }
            },
            "type": "object",
            "required": [
                "xPostmarkAccountToken",
                "xPostmarkServerToken"
            ]
        },
        "airbyte:index/SourcePrestashopConfiguration:SourcePrestashopConfiguration": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Your PrestaShop access key. See \u003ca href=\"https://devdocs.prestashop.com/1.7/webservice/tutorials/creating-access/#create-an-access-key\"\u003e the docs \u003c/a\u003e for info on how to obtain this.\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "The Start date in the format YYYY-MM-DD.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Shop URL without trailing slash.\n"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "startDate",
                "url"
            ]
        },
        "airbyte:index/SourcePunkApiConfiguration:SourcePunkApiConfiguration": {
            "properties": {
                "brewedAfter": {
                    "type": "string",
                    "description": "To extract specific data with Unique ID\n"
                },
                "brewedBefore": {
                    "type": "string",
                    "description": "To extract specific data with Unique ID\n"
                },
                "id": {
                    "type": "string",
                    "description": "To extract specific data with Unique ID\n"
                }
            },
            "type": "object",
            "required": [
                "brewedAfter",
                "brewedBefore"
            ]
        },
        "airbyte:index/SourcePypiConfiguration:SourcePypiConfiguration": {
            "properties": {
                "projectName": {
                    "type": "string",
                    "description": "Name of the project/package. Can only be in lowercase with hyphen. This is the name used using pip command for installing the package.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the project/package.  Use it to find a particular release instead of all releases.\n"
                }
            },
            "type": "object",
            "required": [
                "projectName"
            ]
        },
        "airbyte:index/SourceQualarooConfiguration:SourceQualarooConfiguration": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "A Qualaroo token. See the \u003ca href=\"https://help.qualaroo.com/hc/en-us/articles/201969438-The-REST-Reporting-API\"\u003edocs\u003c/a\u003e for instructions on how to generate it.\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.\n"
                },
                "surveyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IDs of the surveys from which you'd like to replicate data. If left empty, data from all surveys to which you have access will be replicated.\n"
                },
                "token": {
                    "type": "string",
                    "description": "A Qualaroo token. See the \u003ca href=\"https://help.qualaroo.com/hc/en-us/articles/201969438-The-REST-Reporting-API\"\u003edocs\u003c/a\u003e for instructions on how to generate it.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "key",
                "startDate",
                "token"
            ]
        },
        "airbyte:index/SourceRailzConfiguration:SourceRailzConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Client ID (client_id)\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Secret key (secret_key)\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "Start date\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "secretKey",
                "startDate"
            ]
        },
        "airbyte:index/SourceRechargeConfiguration:SourceRechargeConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The value of the Access Token generated. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/recharge\"\u003edocs\u003c/a\u003e for more information.\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "The date from which you'd like to replicate data for Recharge API, in the format YYYY-MM-DDT00:00:00Z. Any data before this date will not be replicated.\n"
                },
                "useOrdersDeprecatedApi": {
                    "type": "boolean",
                    "description": "Define whether or not the `Orders` stream should use the deprecated `2021-01` API version, or use `2021-11`, otherwise. Default: true\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessToken",
                        "startDate",
                        "useOrdersDeprecatedApi"
                    ]
                }
            }
        },
        "airbyte:index/SourceRecreationConfiguration:SourceRecreationConfiguration": {
            "properties": {
                "apikey": {
                    "type": "string",
                    "description": "API Key\n",
                    "secret": true
                },
                "queryCampsites": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apikey"
            ]
        },
        "airbyte:index/SourceRecruiteeConfiguration:SourceRecruiteeConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Recruitee API Key. See \u003ca href=\"https://docs.recruitee.com/reference/getting-started#generate-api-token\"\u003ehere\u003c/a\u003e.\n",
                    "secret": true
                },
                "companyId": {
                    "type": "integer",
                    "description": "Recruitee Company ID. You can also find this ID on the \u003ca href=\"https://app.recruitee.com/#/settings/api_tokens\"\u003eRecruitee API tokens page\u003c/a\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "companyId"
            ]
        },
        "airbyte:index/SourceRecurlyConfiguration:SourceRecurlyConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Recurly API Key. See the  \u003ca href=\"https://docs.airbyte.com/integrations/sources/recurly\"\u003edocs\u003c/a\u003e for more information on how to generate this key.\n",
                    "secret": true
                },
                "beginTime": {
                    "type": "string",
                    "description": "ISO8601 timestamp from which the replication from Recurly API will start from.\n"
                },
                "endTime": {
                    "type": "string",
                    "description": "ISO8601 timestamp to which the replication from Recurly API will stop. Records after that date won't be imported.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceRedshiftConfiguration:SourceRedshiftConfiguration": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "Name of the database.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host Endpoint of the Redshift Cluster (must include the cluster-id, region and end with .redshift.amazonaws.com).\n"
                },
                "jdbcUrlParams": {
                    "type": "string",
                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '\u0026'. (example: key1=value1\u0026key2=value2\u0026key3=value3).\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password associated with the username.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port of the database. Default: 5439\n"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of schemas to sync from. Specify one or more explicitly or keep empty to process all schemas. Schema names are case sensitive.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username to use to access the database.\n"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "password",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "database",
                        "host",
                        "password",
                        "port",
                        "username"
                    ]
                }
            }
        },
        "airbyte:index/SourceRetentlyConfiguration:SourceRetentlyConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceRetentlyConfigurationCredentials:SourceRetentlyConfigurationCredentials",
                    "description": "Choose how to authenticate to Retently\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceRetentlyConfigurationCredentials:SourceRetentlyConfigurationCredentials": {
            "properties": {
                "authenticateViaRetentlyOAuth": {
                    "$ref": "#/types/airbyte:index/SourceRetentlyConfigurationCredentialsAuthenticateViaRetentlyOAuth:SourceRetentlyConfigurationCredentialsAuthenticateViaRetentlyOAuth"
                },
                "authenticateWithApiToken": {
                    "$ref": "#/types/airbyte:index/SourceRetentlyConfigurationCredentialsAuthenticateWithApiToken:SourceRetentlyConfigurationCredentialsAuthenticateWithApiToken"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceRetentlyConfigurationCredentialsAuthenticateViaRetentlyOAuth:SourceRetentlyConfigurationCredentialsAuthenticateViaRetentlyOAuth": {
            "properties": {
                "additionalProperties": {
                    "type": "string",
                    "description": "Parsed as JSON.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your Retently developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your Retently developer application.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Retently Refresh Token which can be used to fetch new Bearer Tokens when the current one expires.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceRetentlyConfigurationCredentialsAuthenticateWithApiToken:SourceRetentlyConfigurationCredentialsAuthenticateWithApiToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string",
                    "description": "Parsed as JSON.\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "Retently API Token. See the \u003ca href=\"https://app.retently.com/settings/api/tokens\"\u003edocs\u003c/a\u003e for more information on how to obtain this key.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceRkiCovidConfiguration:SourceRkiCovidConfiguration": {
            "properties": {
                "startDate": {
                    "type": "string",
                    "description": "UTC date in the format 2017-01-25. Any data before this date will not be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "startDate"
            ]
        },
        "airbyte:index/SourceRssConfiguration:SourceRssConfiguration": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "RSS Feed URL\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "airbyte:index/SourceS3Configuration:SourceS3Configuration": {
            "properties": {
                "awsAccessKeyId": {
                    "type": "string",
                    "description": "In order to access private Buckets stored on AWS S3, this connector requires credentials with the proper permissions. If accessing publicly available data, this field is not necessary.\n",
                    "secret": true
                },
                "awsSecretAccessKey": {
                    "type": "string",
                    "description": "In order to access private Buckets stored on AWS S3, this connector requires credentials with the proper permissions. If accessing publicly available data, this field is not necessary.\n",
                    "secret": true
                },
                "bucket": {
                    "type": "string",
                    "description": "Name of the S3 bucket where the file(s) exist.\n"
                },
                "dataset": {
                    "type": "string",
                    "description": "Deprecated and will be removed soon. Please do not use this field anymore and use streams.name instead. The name of the stream you would like this source to output. Can contain letters, numbers, or underscores.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Endpoint to an S3 compatible service. Leave empty to use AWS. The custom endpoint must be secure, but the 'https' prefix is not required. Default: \"\"\n"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationFormat:SourceS3ConfigurationFormat",
                    "description": "Deprecated and will be removed soon. Please do not use this field anymore and use streams.format instead. The format of the files you'd like to replicate\n"
                },
                "pathPattern": {
                    "type": "string",
                    "description": "Deprecated and will be removed soon. Please do not use this field anymore and use streams.globs instead. A regular expression which tells the connector which files to replicate. All files which match this pattern will be replicated. Use | to separate multiple patterns. See \u003ca href=\"https://facelessuser.github.io/wcmatch/glob/\" target=\"_blank\"\u003ethis page\u003c/a\u003e to understand pattern syntax (GLOBSTAR and SPLIT flags are enabled). Use pattern \u003cstrong\u003e**\u003c/strong\u003e to pick up all files.\n"
                },
                "provider": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationProvider:SourceS3ConfigurationProvider",
                    "description": "Deprecated and will be removed soon. Please do not use this field anymore and use bucket, aws_access_key_id, aws_secret_access_key and endpoint instead. Use this to load files from S3 or S3-compatible services\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "AWS region where the S3 bucket is located. If not provided, the region will be determined automatically.\n"
                },
                "roleArn": {
                    "type": "string",
                    "description": "Specifies the Amazon Resource Name (ARN) of an IAM role that you want to use to perform operations requested using this profile. Set the External ID to the Airbyte workspace ID, which can be found in the URL of this page.\n"
                },
                "schema": {
                    "type": "string",
                    "description": "Deprecated and will be removed soon. Please do not use this field anymore and use streams.input_schema instead. Optionally provide a schema to enforce, as a valid JSON string. Ensure this is a mapping of \u003cstrong\u003e{ \"column\" : \"type\" }\u003c/strong\u003e, where types are valid \u003ca href=\"https://json-schema.org/understanding-json-schema/reference/type.html\" target=\"_blank\"\u003eJSON Schema datatypes\u003c/a\u003e. Leave as {} to auto-infer the schema. Default: \"{}\"\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00.000000Z. Any file modified before this date will not be replicated.\n"
                },
                "streams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceS3ConfigurationStream:SourceS3ConfigurationStream"
                    },
                    "description": "Each instance of this configuration defines a \u003ca href=\"https://docs.airbyte.com/cloud/core-concepts#stream\"\u003estream\u003c/a\u003e. Use this to define which files belong in the stream, their format, and how they should be parsed and validated. When sending data to warehouse destination such as Snowflake or BigQuery, each stream is a separate table.\n"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "streams"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bucket",
                        "endpoint",
                        "schema",
                        "streams"
                    ]
                }
            }
        },
        "airbyte:index/SourceS3ConfigurationFormat:SourceS3ConfigurationFormat": {
            "properties": {
                "avro": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationFormatAvro:SourceS3ConfigurationFormatAvro",
                    "description": "This connector utilises \u003ca href=\"https://fastavro.readthedocs.io/en/latest/\" target=\"_blank\"\u003efastavro\u003c/a\u003e for Avro parsing.\n"
                },
                "csv": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationFormatCsv:SourceS3ConfigurationFormatCsv",
                    "description": "This connector utilises \u003ca href=\"https: // arrow.apache.org/docs/python/generated/pyarrow.csv.open_csv.html\" target=\"_blank\"\u003ePyArrow (Apache Arrow)\u003c/a\u003e for CSV parsing.\n"
                },
                "jsonl": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationFormatJsonl:SourceS3ConfigurationFormatJsonl",
                    "description": "This connector uses \u003ca href=\"https://arrow.apache.org/docs/python/json.html\" target=\"_blank\"\u003ePyArrow\u003c/a\u003e for JSON Lines (jsonl) file parsing.\n"
                },
                "parquet": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationFormatParquet:SourceS3ConfigurationFormatParquet",
                    "description": "This connector utilises \u003ca href=\"https://arrow.apache.org/docs/python/generated/pyarrow.parquet.ParquetFile.html\" target=\"_blank\"\u003ePyArrow (Apache Arrow)\u003c/a\u003e for Parquet parsing.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceS3ConfigurationFormatAvro:SourceS3ConfigurationFormatAvro": {
            "type": "object"
        },
        "airbyte:index/SourceS3ConfigurationFormatCsv:SourceS3ConfigurationFormatCsv": {
            "properties": {
                "additionalReaderOptions": {
                    "type": "string",
                    "description": "Optionally add a valid JSON string here to provide additional options to the csv reader. Mappings must correspond to options \u003ca href=\"https://arrow.apache.org/docs/python/generated/pyarrow.csv.ConvertOptions.html#pyarrow.csv.ConvertOptions\" target=\"_blank\"\u003edetailed here\u003c/a\u003e. 'column_types' is used internally to handle schema so overriding that would likely cause problems.\n"
                },
                "advancedOptions": {
                    "type": "string",
                    "description": "Optionally add a valid JSON string here to provide additional \u003ca href=\"https://arrow.apache.org/docs/python/generated/pyarrow.csv.ReadOptions.html#pyarrow.csv.ReadOptions\" target=\"_blank\"\u003ePyarrow ReadOptions\u003c/a\u003e. Specify 'column_names' here if your CSV doesn't have header, or if you want to use custom column names. 'block_size' and 'encoding' are already used above, specify them again here will override the values above.\n"
                },
                "blockSize": {
                    "type": "integer",
                    "description": "The chunk size in bytes to process at a time in memory from each file. If your data is particularly wide and failing during schema detection, increasing this should solve it. Beware of raising this too high as you could hit OOM errors. Default: 10000\n"
                },
                "delimiter": {
                    "type": "string",
                    "description": "The character delimiting individual cells in the CSV data. This may only be a 1-character string. For tab-delimited data enter '\\t'. Default: \",\"\n"
                },
                "doubleQuote": {
                    "type": "boolean",
                    "description": "Whether two quotes in a quoted CSV value denote a single quote in the data. Default: true\n"
                },
                "encoding": {
                    "type": "string",
                    "description": "The character encoding of the CSV data. Leave blank to default to \u003cstrong\u003eUTF8\u003c/strong\u003e. See \u003ca href=\"https://docs.python.org/3/library/codecs.html#standard-encodings\" target=\"_blank\"\u003elist of python encodings\u003c/a\u003e for allowable options. Default: \"utf8\"\n"
                },
                "escapeChar": {
                    "type": "string",
                    "description": "The character used for escaping special characters. To disallow escaping, leave this field blank.\n"
                },
                "inferDatatypes": {
                    "type": "boolean",
                    "description": "Configures whether a schema for the source should be inferred from the current data or not. If set to false and a custom schema is set, then the manually enforced schema is used. If a schema is not manually set, and this is set to false, then all fields will be read as strings. Default: true\n"
                },
                "newlinesInValues": {
                    "type": "boolean",
                    "description": "Whether newline characters are allowed in CSV values. Turning this on may affect performance. Leave blank to default to False. Default: false\n"
                },
                "quoteChar": {
                    "type": "string",
                    "description": "The character used for quoting CSV values. To disallow quoting, make this field blank. Default: \"\\\"\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "blockSize",
                        "delimiter",
                        "doubleQuote",
                        "encoding",
                        "inferDatatypes",
                        "newlinesInValues",
                        "quoteChar"
                    ]
                }
            }
        },
        "airbyte:index/SourceS3ConfigurationFormatJsonl:SourceS3ConfigurationFormatJsonl": {
            "properties": {
                "blockSize": {
                    "type": "integer",
                    "description": "The chunk size in bytes to process at a time in memory from each file. If your data is particularly wide and failing during schema detection, increasing this should solve it. Beware of raising this too high as you could hit OOM errors. Default: 0\n"
                },
                "newlinesInValues": {
                    "type": "boolean",
                    "description": "Whether newline characters are allowed in JSON values. Turning this on may affect performance. Leave blank to default to False. Default: false\n"
                },
                "unexpectedFieldBehavior": {
                    "type": "string",
                    "description": "How JSON fields outside of explicit_schema (if given) are treated. Check \u003ca href=\"https://arrow.apache.org/docs/python/generated/pyarrow.json.ParseOptions.html\" target=\"_blank\"\u003ePyArrow documentation\u003c/a\u003e for details. must be one of [\"ignore\", \"infer\", \"error\"]; Default: \"infer\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "blockSize",
                        "newlinesInValues",
                        "unexpectedFieldBehavior"
                    ]
                }
            }
        },
        "airbyte:index/SourceS3ConfigurationFormatParquet:SourceS3ConfigurationFormatParquet": {
            "properties": {
                "batchSize": {
                    "type": "integer",
                    "description": "Maximum number of records per batch read from the input files. Batches may be smaller if there aren’t enough rows in the file. This option can help avoid out-of-memory errors if your data is particularly wide. Default: 65536\n"
                },
                "bufferSize": {
                    "type": "integer",
                    "description": "Perform read buffering when deserializing individual column chunks. By default every group column will be loaded fully to memory. This option can help avoid out-of-memory errors if your data is particularly wide. Default: 2\n"
                },
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If you only want to sync a subset of the columns from the file(s), add the columns you want here as a comma-delimited list. Leave it empty to sync all columns.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "batchSize",
                        "bufferSize"
                    ]
                }
            }
        },
        "airbyte:index/SourceS3ConfigurationProvider:SourceS3ConfigurationProvider": {
            "properties": {
                "awsAccessKeyId": {
                    "type": "string",
                    "description": "In order to access private Buckets stored on AWS S3, this connector requires credentials with the proper permissions. If accessing publicly available data, this field is not necessary.\n",
                    "secret": true
                },
                "awsSecretAccessKey": {
                    "type": "string",
                    "description": "In order to access private Buckets stored on AWS S3, this connector requires credentials with the proper permissions. If accessing publicly available data, this field is not necessary.\n",
                    "secret": true
                },
                "bucket": {
                    "type": "string",
                    "description": "Name of the S3 bucket where the file(s) exist.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Endpoint to an S3 compatible service. Leave empty to use AWS. Default: \"\"\n"
                },
                "pathPrefix": {
                    "type": "string",
                    "description": "By providing a path-like prefix (e.g. myFolder/thisTable/) under which all the relevant files sit, we can optimize finding these in S3. This is optional but recommended if your bucket contains many folders/files which you don't need to replicate. Default: \"\"\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "AWS region where the S3 bucket is located. If not provided, the region will be determined automatically.\n"
                },
                "roleArn": {
                    "type": "string",
                    "description": "Specifies the Amazon Resource Name (ARN) of an IAM role that you want to use to perform operations requested using this profile. Set the External ID to the Airbyte workspace ID, which can be found in the URL of this page.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any file modified before this date will not be replicated.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "endpoint",
                        "pathPrefix"
                    ]
                }
            }
        },
        "airbyte:index/SourceS3ConfigurationStream:SourceS3ConfigurationStream": {
            "properties": {
                "daysToSyncIfHistoryIsFull": {
                    "type": "integer",
                    "description": "When the state history of the file store is full, syncs will only read files that were last modified in the provided day range. Default: 3\n"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationStreamFormat:SourceS3ConfigurationStreamFormat",
                    "description": "The configuration options that are used to alter how to read incoming files that deviate from the standard formatting.\n"
                },
                "globs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The pattern used to specify which files should be selected from the file system. For more information on glob pattern matching look \u003ca href=\"https://en.wikipedia.org/wiki/Glob_(programming)\"\u003ehere\u003c/a\u003e.\n"
                },
                "inputSchema": {
                    "type": "string",
                    "description": "The schema that will be used to validate records extracted from the file. This will override the stream schema that is auto-detected from incoming files.\n"
                },
                "legacyPrefix": {
                    "type": "string",
                    "description": "The path prefix configured in v3 versions of the S3 connector. This option is deprecated in favor of a single glob.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the stream.\n"
                },
                "primaryKey": {
                    "type": "string",
                    "description": "The column or columns (for a composite key) that serves as the unique identifier of a record. If empty, the primary key will default to the parser's default primary key.\n",
                    "secret": true
                },
                "schemaless": {
                    "type": "boolean",
                    "description": "When enabled, syncs will not validate or structure records against the stream's schema. Default: false\n"
                },
                "validationPolicy": {
                    "type": "string",
                    "description": "The name of the validation policy that dictates sync behavior when a record does not adhere to the stream schema. must be one of [\"Emit Record\", \"Skip Record\", \"Wait for Discover\"]; Default: \"Emit Record\"\n"
                }
            },
            "type": "object",
            "required": [
                "format",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "daysToSyncIfHistoryIsFull",
                        "format",
                        "name",
                        "schemaless",
                        "validationPolicy"
                    ]
                }
            }
        },
        "airbyte:index/SourceS3ConfigurationStreamFormat:SourceS3ConfigurationStreamFormat": {
            "properties": {
                "avroFormat": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationStreamFormatAvroFormat:SourceS3ConfigurationStreamFormatAvroFormat"
                },
                "csvFormat": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationStreamFormatCsvFormat:SourceS3ConfigurationStreamFormatCsvFormat"
                },
                "documentFileTypeFormatExperimental": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationStreamFormatDocumentFileTypeFormatExperimental:SourceS3ConfigurationStreamFormatDocumentFileTypeFormatExperimental",
                    "description": "Extract text from document formats (.pdf, .docx, .md, .pptx) and emit as one record per file.\n"
                },
                "jsonlFormat": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationStreamFormatJsonlFormat:SourceS3ConfigurationStreamFormatJsonlFormat"
                },
                "parquetFormat": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationStreamFormatParquetFormat:SourceS3ConfigurationStreamFormatParquetFormat"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceS3ConfigurationStreamFormatAvroFormat:SourceS3ConfigurationStreamFormatAvroFormat": {
            "properties": {
                "doubleAsString": {
                    "type": "boolean",
                    "description": "Whether to convert double fields to strings. This is recommended if you have decimal numbers with a high degree of precision because there can be a loss precision when handling floating point numbers. Default: false\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "doubleAsString"
                    ]
                }
            }
        },
        "airbyte:index/SourceS3ConfigurationStreamFormatCsvFormat:SourceS3ConfigurationStreamFormatCsvFormat": {
            "properties": {
                "delimiter": {
                    "type": "string",
                    "description": "The character delimiting individual cells in the CSV data. This may only be a 1-character string. For tab-delimited data enter '\\t'. Default: \",\"\n"
                },
                "doubleQuote": {
                    "type": "boolean",
                    "description": "Whether two quotes in a quoted CSV value denote a single quote in the data. Default: true\n"
                },
                "encoding": {
                    "type": "string",
                    "description": "The character encoding of the CSV data. Leave blank to default to \u003cstrong\u003eUTF8\u003c/strong\u003e. See \u003ca href=\"https://docs.python.org/3/library/codecs.html#standard-encodings\" target=\"_blank\"\u003elist of python encodings\u003c/a\u003e for allowable options. Default: \"utf8\"\n"
                },
                "escapeChar": {
                    "type": "string",
                    "description": "The character used for escaping special characters. To disallow escaping, leave this field blank.\n"
                },
                "falseValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as false values.\n"
                },
                "headerDefinition": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationStreamFormatCsvFormatHeaderDefinition:SourceS3ConfigurationStreamFormatCsvFormatHeaderDefinition",
                    "description": "How headers will be defined. `User Provided` assumes the CSV does not have a header row and uses the headers provided and `Autogenerated` assumes the CSV does not have a header row and the CDK will generate headers using for `f{i}` where `i` is the index starting from 0. Else, the default behavior is to use the header from the CSV file. If a user wants to autogenerate or provide column names for a CSV having headers, they can skip rows.\n"
                },
                "ignoreErrorsOnFieldsMismatch": {
                    "type": "boolean",
                    "description": "Whether to ignore errors that occur when the number of fields in the CSV does not match the number of columns in the schema. Default: false\n"
                },
                "inferenceType": {
                    "type": "string",
                    "description": "How to infer the types of the columns. If none, inference default to strings. must be one of [\"None\", \"Primitive Types Only\"]; Default: \"None\"\n"
                },
                "nullValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as null values. For example, if the value 'NA' should be interpreted as null, enter 'NA' in this field.\n"
                },
                "quoteChar": {
                    "type": "string",
                    "description": "The character used for quoting CSV values. To disallow quoting, make this field blank. Default: \"\\\"\"\n"
                },
                "skipRowsAfterHeader": {
                    "type": "integer",
                    "description": "The number of rows to skip after the header row. Default: 0\n"
                },
                "skipRowsBeforeHeader": {
                    "type": "integer",
                    "description": "The number of rows to skip before the header row. For example, if the header row is on the 3rd row, enter 2 in this field. Default: 0\n"
                },
                "stringsCanBeNull": {
                    "type": "boolean",
                    "description": "Whether strings can be interpreted as null values. If true, strings that match the null_values set will be interpreted as null. If false, strings that match the null_values set will be interpreted as the string itself. Default: true\n"
                },
                "trueValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as true values.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "delimiter",
                        "doubleQuote",
                        "encoding",
                        "ignoreErrorsOnFieldsMismatch",
                        "inferenceType",
                        "quoteChar",
                        "skipRowsAfterHeader",
                        "skipRowsBeforeHeader",
                        "stringsCanBeNull"
                    ]
                }
            }
        },
        "airbyte:index/SourceS3ConfigurationStreamFormatCsvFormatHeaderDefinition:SourceS3ConfigurationStreamFormatCsvFormatHeaderDefinition": {
            "properties": {
                "autogenerated": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated:SourceS3ConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated"
                },
                "fromCsv": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv:SourceS3ConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv"
                },
                "userProvided": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided:SourceS3ConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceS3ConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated:SourceS3ConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated": {
            "type": "object"
        },
        "airbyte:index/SourceS3ConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv:SourceS3ConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv": {
            "type": "object"
        },
        "airbyte:index/SourceS3ConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided:SourceS3ConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided": {
            "properties": {
                "columnNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The column names that will be used while emitting the CSV records\n"
                }
            },
            "type": "object",
            "required": [
                "columnNames"
            ]
        },
        "airbyte:index/SourceS3ConfigurationStreamFormatDocumentFileTypeFormatExperimental:SourceS3ConfigurationStreamFormatDocumentFileTypeFormatExperimental": {
            "properties": {
                "processing": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing:SourceS3ConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing",
                    "description": "Processing configuration\n"
                },
                "skipUnprocessableFiles": {
                    "type": "boolean",
                    "description": "If true, skip files that cannot be parsed and pass the error message along as the _ab_source_file_parse_error field. If false, fail the sync. Default: true\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "The strategy used to parse documents. `fast` extracts text directly from the document which doesn't work for all files. `ocr_only` is more reliable, but slower. `hi_res` is the most reliable, but requires an API key and a hosted instance of unstructured and can't be used with local mode. See the unstructured.io documentation for more details: https://unstructured-io.github.io/unstructured/core/partition.html#partition-pdf. must be one of [\"auto\", \"fast\", \"ocr_only\", \"hi_res\"]; Default: \"auto\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "skipUnprocessableFiles",
                        "strategy"
                    ]
                }
            }
        },
        "airbyte:index/SourceS3ConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing:SourceS3ConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing": {
            "properties": {
                "local": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal:SourceS3ConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal",
                    "description": "Process files locally, supporting `fast` and `ocr` modes. This is the default option.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceS3ConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal:SourceS3ConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal": {
            "type": "object"
        },
        "airbyte:index/SourceS3ConfigurationStreamFormatJsonlFormat:SourceS3ConfigurationStreamFormatJsonlFormat": {
            "type": "object"
        },
        "airbyte:index/SourceS3ConfigurationStreamFormatParquetFormat:SourceS3ConfigurationStreamFormatParquetFormat": {
            "properties": {
                "decimalAsFloat": {
                    "type": "boolean",
                    "description": "Whether to convert decimal fields to floats. There is a loss of precision when converting decimals to floats, so this is not recommended. Default: false\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "decimalAsFloat"
                    ]
                }
            }
        },
        "airbyte:index/SourceSalesforceConfiguration:SourceSalesforceConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Enter your Salesforce developer application's \u003ca href=\"https://developer.salesforce.com/forums/?id=9062I000000DLgbQAG\"\u003eClient ID\u003c/a\u003e\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Enter your Salesforce developer application's \u003ca href=\"https://developer.salesforce.com/forums/?id=9062I000000DLgbQAG\"\u003eClient secret\u003c/a\u003e\n"
                },
                "forceUseBulkApi": {
                    "type": "boolean",
                    "description": "Toggle to use Bulk API (this might cause empty fields for some streams). Default: false\n"
                },
                "isSandbox": {
                    "type": "boolean",
                    "description": "Toggle if you're using a \u003ca href=\"https://help.salesforce.com/s/articleView?id=sf.deploy_sandboxes_parent.htm\u0026type=5\"\u003eSalesforce Sandbox\u003c/a\u003e. Default: false\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Enter your application's \u003ca href=\"https://developer.salesforce.com/docs/atlas.en-us.mobile_sdk.meta/mobile_sdk/oauth_refresh_token_flow.htm\"\u003eSalesforce Refresh Token\u003c/a\u003e used for Airbyte to access your Salesforce account.\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "Enter the date (or date-time) in the YYYY-MM-DD or YYYY-MM-DDTHH:mm:ssZ format. Airbyte will replicate the data updated on and after this date. If this field is blank, Airbyte will replicate the data for last two years.\n"
                },
                "streamSliceStep": {
                    "type": "string",
                    "description": "The size of the time window (ISO8601 duration) to slice requests. Default: \"P30D\"\n"
                },
                "streamsCriterias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceSalesforceConfigurationStreamsCriteria:SourceSalesforceConfigurationStreamsCriteria"
                    },
                    "description": "Add filters to select only required stream based on `SObject` name. Use this field to filter which tables are displayed by this connector. This is useful if your Salesforce account has a large number of tables (\u003e1000), in which case you may find it easier to navigate the UI and speed up the connector's performance if you restrict the tables displayed by this connector.\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "clientId",
                        "clientSecret",
                        "forceUseBulkApi",
                        "isSandbox",
                        "refreshToken",
                        "streamSliceStep"
                    ]
                }
            }
        },
        "airbyte:index/SourceSalesforceConfigurationStreamsCriteria:SourceSalesforceConfigurationStreamsCriteria": {
            "properties": {
                "criteria": {
                    "type": "string",
                    "description": "must be one of [\"starts with\", \"ends with\", \"contains\", \"exacts\", \"starts not with\", \"ends not with\", \"not contains\", \"not exacts\"]; Default: \"contains\"\n"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "criteria",
                        "value"
                    ]
                }
            }
        },
        "airbyte:index/SourceSalesloftConfiguration:SourceSalesloftConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceSalesloftConfigurationCredentials:SourceSalesloftConfigurationCredentials"
                },
                "startDate": {
                    "type": "string",
                    "description": "The date from which you'd like to replicate data for Salesloft API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "startDate"
            ]
        },
        "airbyte:index/SourceSalesloftConfigurationCredentials:SourceSalesloftConfigurationCredentials": {
            "properties": {
                "authenticateViaApiKey": {
                    "$ref": "#/types/airbyte:index/SourceSalesloftConfigurationCredentialsAuthenticateViaApiKey:SourceSalesloftConfigurationCredentialsAuthenticateViaApiKey"
                },
                "authenticateViaOAuth": {
                    "$ref": "#/types/airbyte:index/SourceSalesloftConfigurationCredentialsAuthenticateViaOAuth:SourceSalesloftConfigurationCredentialsAuthenticateViaOAuth"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSalesloftConfigurationCredentialsAuthenticateViaApiKey:SourceSalesloftConfigurationCredentialsAuthenticateViaApiKey": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API Key for making authenticated requests. More instruction on how to find this value in our \u003ca href=\"https://docs.airbyte.com/integrations/sources/salesloft#setup-guide\"\u003edocs\u003c/a\u003e\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceSalesloftConfigurationCredentialsAuthenticateViaOAuth:SourceSalesloftConfigurationCredentialsAuthenticateViaOAuth": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access Token for making authenticated requests.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your Salesloft developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your Salesloft developer application.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The token for obtaining a new access token.\n",
                    "secret": true
                },
                "tokenExpiryDate": {
                    "type": "string",
                    "description": "The date-time when the access token should be refreshed.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ]
        },
        "airbyte:index/SourceSapFieldglassConfiguration:SourceSapFieldglassConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API Key\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceSecodaConfiguration:SourceSecodaConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Your API Access Key. See \u003ca href=\"https://docs.secoda.co/secoda-api/authentication\"\u003ehere\u003c/a\u003e. The key is case sensitive.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceSendgridConfiguration:SourceSendgridConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Sendgrid API Key, use \u003ca href=\\\"https://app.sendgrid.com/settings/api_keys/\\\"\u003eadmin\u003c/a\u003e to generate this key.\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "startDate"
            ]
        },
        "airbyte:index/SourceSendinblueConfiguration:SourceSendinblueConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Your API Key. See \u003ca href=\"https://developers.sendinblue.com/docs/getting-started\"\u003ehere\u003c/a\u003e.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceSenseforceConfiguration:SourceSenseforceConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Your API access token. See \u003ca href=\"https://manual.senseforce.io/manual/sf-platform/public-api/get-your-access-token/\"\u003ehere\u003c/a\u003e. The toke is case sensitive.\n",
                    "secret": true
                },
                "backendUrl": {
                    "type": "string",
                    "description": "Your Senseforce API backend URL. This is the URL shown during the Login screen. See \u003ca href=\"https://manual.senseforce.io/manual/sf-platform/public-api/get-your-access-token/\"\u003ehere\u003c/a\u003e for more details. (Note: Most Senseforce backend APIs have the term 'galaxy' in their ULR)\n"
                },
                "datasetId": {
                    "type": "string",
                    "description": "The ID of the dataset you want to synchronize. The ID can be found in the URL when opening the dataset. See \u003ca href=\"https://manual.senseforce.io/manual/sf-platform/public-api/get-your-access-token/\"\u003ehere\u003c/a\u003e for more details. (Note: As the Senseforce API only allows to synchronize a specific dataset, each dataset you  want to synchronize needs to be implemented as a separate airbyte source).\n"
                },
                "sliceRange": {
                    "type": "integer",
                    "description": "The time increment used by the connector when requesting data from the Senseforce API. The bigger the value is, the less requests will be made and faster the sync will be. On the other hand, the more seldom the state is persisted and the more likely one could run into rate limites.  Furthermore, consider that large chunks of time might take a long time for the Senseforce query to return data - meaning it could take in effect longer than with more smaller time slices. If there are a lot of data per day, set this setting to 1. If there is only very little data per day, you might change the setting to 10 or more. Default: 10\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25. Only data with \"Timestamp\" after this date will be replicated. Important note: This start date must be set to the first day of where your dataset provides data.  If your dataset has data from 2020-10-10 10:21:10, set the start_date to 2020-10-10 or later\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "backendUrl",
                "datasetId",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessToken",
                        "backendUrl",
                        "datasetId",
                        "sliceRange",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourceSentryConfiguration:SourceSentryConfiguration": {
            "properties": {
                "authToken": {
                    "type": "string",
                    "description": "Log into Sentry and then \u003ca href=\"https://sentry.io/settings/account/api/auth-tokens/\"\u003ecreate authentication tokens\u003c/a\u003e.For self-hosted, you can find or create authentication tokens by visiting \"{instance_url_prefix}/settings/account/api/auth-tokens/\"\n",
                    "secret": true
                },
                "discoverFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Fields to retrieve when fetching discover events\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Host name of Sentry API server.For self-hosted, specify your host name here. Otherwise, leave it empty. Default: \"sentry.io\"\n"
                },
                "organization": {
                    "type": "string",
                    "description": "The slug of the organization the groups belong to.\n"
                },
                "project": {
                    "type": "string",
                    "description": "The name (slug) of the Project you want to sync.\n"
                }
            },
            "type": "object",
            "required": [
                "authToken",
                "organization",
                "project"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authToken",
                        "hostname",
                        "organization",
                        "project"
                    ]
                }
            }
        },
        "airbyte:index/SourceSftpBulkConfiguration:SourceSftpBulkConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceSftpBulkConfigurationCredentials:SourceSftpBulkConfigurationCredentials",
                    "description": "Credentials for connecting to the SFTP Server\n"
                },
                "folderPath": {
                    "type": "string",
                    "description": "The directory to search files for sync. Default: \"/\"\n"
                },
                "host": {
                    "type": "string",
                    "description": "The server host address\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The server port. Default: 22\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00.000000Z. Any file modified before this date will not be replicated.\n"
                },
                "streams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceSftpBulkConfigurationStream:SourceSftpBulkConfigurationStream"
                    },
                    "description": "Each instance of this configuration defines a \u003ca href=\"https://docs.airbyte.com/cloud/core-concepts#stream\"\u003estream\u003c/a\u003e. Use this to define which files belong in the stream, their format, and how they should be parsed and validated. When sending data to warehouse destination such as Snowflake or BigQuery, each stream is a separate table.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The server user\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "host",
                "streams",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "credentials",
                        "folderPath",
                        "host",
                        "port",
                        "streams",
                        "username"
                    ]
                }
            }
        },
        "airbyte:index/SourceSftpBulkConfigurationCredentials:SourceSftpBulkConfigurationCredentials": {
            "properties": {
                "authenticateViaPassword": {
                    "$ref": "#/types/airbyte:index/SourceSftpBulkConfigurationCredentialsAuthenticateViaPassword:SourceSftpBulkConfigurationCredentialsAuthenticateViaPassword"
                },
                "authenticateViaPrivateKey": {
                    "$ref": "#/types/airbyte:index/SourceSftpBulkConfigurationCredentialsAuthenticateViaPrivateKey:SourceSftpBulkConfigurationCredentialsAuthenticateViaPrivateKey"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSftpBulkConfigurationCredentialsAuthenticateViaPassword:SourceSftpBulkConfigurationCredentialsAuthenticateViaPassword": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "Password\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "password"
            ]
        },
        "airbyte:index/SourceSftpBulkConfigurationCredentialsAuthenticateViaPrivateKey:SourceSftpBulkConfigurationCredentialsAuthenticateViaPrivateKey": {
            "properties": {
                "privateKey": {
                    "type": "string",
                    "description": "The Private key\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "privateKey"
            ]
        },
        "airbyte:index/SourceSftpBulkConfigurationStream:SourceSftpBulkConfigurationStream": {
            "properties": {
                "daysToSyncIfHistoryIsFull": {
                    "type": "integer",
                    "description": "When the state history of the file store is full, syncs will only read files that were last modified in the provided day range. Default: 3\n"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/SourceSftpBulkConfigurationStreamFormat:SourceSftpBulkConfigurationStreamFormat",
                    "description": "The configuration options that are used to alter how to read incoming files that deviate from the standard formatting.\n"
                },
                "globs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The pattern used to specify which files should be selected from the file system. For more information on glob pattern matching look \u003ca href=\"https://en.wikipedia.org/wiki/Glob_(programming)\"\u003ehere\u003c/a\u003e.\n"
                },
                "inputSchema": {
                    "type": "string",
                    "description": "The schema that will be used to validate records extracted from the file. This will override the stream schema that is auto-detected from incoming files.\n"
                },
                "legacyPrefix": {
                    "type": "string",
                    "description": "The path prefix configured in v3 versions of the S3 connector. This option is deprecated in favor of a single glob.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the stream.\n"
                },
                "primaryKey": {
                    "type": "string",
                    "description": "The column or columns (for a composite key) that serves as the unique identifier of a record. If empty, the primary key will default to the parser's default primary key.\n",
                    "secret": true
                },
                "schemaless": {
                    "type": "boolean",
                    "description": "When enabled, syncs will not validate or structure records against the stream's schema. Default: false\n"
                },
                "validationPolicy": {
                    "type": "string",
                    "description": "The name of the validation policy that dictates sync behavior when a record does not adhere to the stream schema. must be one of [\"Emit Record\", \"Skip Record\", \"Wait for Discover\"]; Default: \"Emit Record\"\n"
                }
            },
            "type": "object",
            "required": [
                "format",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "daysToSyncIfHistoryIsFull",
                        "format",
                        "name",
                        "schemaless",
                        "validationPolicy"
                    ]
                }
            }
        },
        "airbyte:index/SourceSftpBulkConfigurationStreamFormat:SourceSftpBulkConfigurationStreamFormat": {
            "properties": {
                "avroFormat": {
                    "$ref": "#/types/airbyte:index/SourceSftpBulkConfigurationStreamFormatAvroFormat:SourceSftpBulkConfigurationStreamFormatAvroFormat"
                },
                "csvFormat": {
                    "$ref": "#/types/airbyte:index/SourceSftpBulkConfigurationStreamFormatCsvFormat:SourceSftpBulkConfigurationStreamFormatCsvFormat"
                },
                "documentFileTypeFormatExperimental": {
                    "$ref": "#/types/airbyte:index/SourceSftpBulkConfigurationStreamFormatDocumentFileTypeFormatExperimental:SourceSftpBulkConfigurationStreamFormatDocumentFileTypeFormatExperimental",
                    "description": "Extract text from document formats (.pdf, .docx, .md, .pptx) and emit as one record per file.\n"
                },
                "jsonlFormat": {
                    "$ref": "#/types/airbyte:index/SourceSftpBulkConfigurationStreamFormatJsonlFormat:SourceSftpBulkConfigurationStreamFormatJsonlFormat"
                },
                "parquetFormat": {
                    "$ref": "#/types/airbyte:index/SourceSftpBulkConfigurationStreamFormatParquetFormat:SourceSftpBulkConfigurationStreamFormatParquetFormat"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSftpBulkConfigurationStreamFormatAvroFormat:SourceSftpBulkConfigurationStreamFormatAvroFormat": {
            "properties": {
                "doubleAsString": {
                    "type": "boolean",
                    "description": "Whether to convert double fields to strings. This is recommended if you have decimal numbers with a high degree of precision because there can be a loss precision when handling floating point numbers. Default: false\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "doubleAsString"
                    ]
                }
            }
        },
        "airbyte:index/SourceSftpBulkConfigurationStreamFormatCsvFormat:SourceSftpBulkConfigurationStreamFormatCsvFormat": {
            "properties": {
                "delimiter": {
                    "type": "string",
                    "description": "The character delimiting individual cells in the CSV data. This may only be a 1-character string. For tab-delimited data enter '\\t'. Default: \",\"\n"
                },
                "doubleQuote": {
                    "type": "boolean",
                    "description": "Whether two quotes in a quoted CSV value denote a single quote in the data. Default: true\n"
                },
                "encoding": {
                    "type": "string",
                    "description": "The character encoding of the CSV data. Leave blank to default to \u003cstrong\u003eUTF8\u003c/strong\u003e. See \u003ca href=\"https://docs.python.org/3/library/codecs.html#standard-encodings\" target=\"_blank\"\u003elist of python encodings\u003c/a\u003e for allowable options. Default: \"utf8\"\n"
                },
                "escapeChar": {
                    "type": "string",
                    "description": "The character used for escaping special characters. To disallow escaping, leave this field blank.\n"
                },
                "falseValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as false values.\n"
                },
                "headerDefinition": {
                    "$ref": "#/types/airbyte:index/SourceSftpBulkConfigurationStreamFormatCsvFormatHeaderDefinition:SourceSftpBulkConfigurationStreamFormatCsvFormatHeaderDefinition",
                    "description": "How headers will be defined. `User Provided` assumes the CSV does not have a header row and uses the headers provided and `Autogenerated` assumes the CSV does not have a header row and the CDK will generate headers using for `f{i}` where `i` is the index starting from 0. Else, the default behavior is to use the header from the CSV file. If a user wants to autogenerate or provide column names for a CSV having headers, they can skip rows.\n"
                },
                "ignoreErrorsOnFieldsMismatch": {
                    "type": "boolean",
                    "description": "Whether to ignore errors that occur when the number of fields in the CSV does not match the number of columns in the schema. Default: false\n"
                },
                "inferenceType": {
                    "type": "string",
                    "description": "How to infer the types of the columns. If none, inference default to strings. must be one of [\"None\", \"Primitive Types Only\"]; Default: \"None\"\n"
                },
                "nullValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as null values. For example, if the value 'NA' should be interpreted as null, enter 'NA' in this field.\n"
                },
                "quoteChar": {
                    "type": "string",
                    "description": "The character used for quoting CSV values. To disallow quoting, make this field blank. Default: \"\\\"\"\n"
                },
                "skipRowsAfterHeader": {
                    "type": "integer",
                    "description": "The number of rows to skip after the header row. Default: 0\n"
                },
                "skipRowsBeforeHeader": {
                    "type": "integer",
                    "description": "The number of rows to skip before the header row. For example, if the header row is on the 3rd row, enter 2 in this field. Default: 0\n"
                },
                "stringsCanBeNull": {
                    "type": "boolean",
                    "description": "Whether strings can be interpreted as null values. If true, strings that match the null_values set will be interpreted as null. If false, strings that match the null_values set will be interpreted as the string itself. Default: true\n"
                },
                "trueValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of case-sensitive strings that should be interpreted as true values.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "delimiter",
                        "doubleQuote",
                        "encoding",
                        "ignoreErrorsOnFieldsMismatch",
                        "inferenceType",
                        "quoteChar",
                        "skipRowsAfterHeader",
                        "skipRowsBeforeHeader",
                        "stringsCanBeNull"
                    ]
                }
            }
        },
        "airbyte:index/SourceSftpBulkConfigurationStreamFormatCsvFormatHeaderDefinition:SourceSftpBulkConfigurationStreamFormatCsvFormatHeaderDefinition": {
            "properties": {
                "autogenerated": {
                    "$ref": "#/types/airbyte:index/SourceSftpBulkConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated:SourceSftpBulkConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated"
                },
                "fromCsv": {
                    "$ref": "#/types/airbyte:index/SourceSftpBulkConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv:SourceSftpBulkConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv"
                },
                "userProvided": {
                    "$ref": "#/types/airbyte:index/SourceSftpBulkConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided:SourceSftpBulkConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSftpBulkConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated:SourceSftpBulkConfigurationStreamFormatCsvFormatHeaderDefinitionAutogenerated": {
            "type": "object"
        },
        "airbyte:index/SourceSftpBulkConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv:SourceSftpBulkConfigurationStreamFormatCsvFormatHeaderDefinitionFromCsv": {
            "type": "object"
        },
        "airbyte:index/SourceSftpBulkConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided:SourceSftpBulkConfigurationStreamFormatCsvFormatHeaderDefinitionUserProvided": {
            "properties": {
                "columnNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The column names that will be used while emitting the CSV records\n"
                }
            },
            "type": "object",
            "required": [
                "columnNames"
            ]
        },
        "airbyte:index/SourceSftpBulkConfigurationStreamFormatDocumentFileTypeFormatExperimental:SourceSftpBulkConfigurationStreamFormatDocumentFileTypeFormatExperimental": {
            "properties": {
                "processing": {
                    "$ref": "#/types/airbyte:index/SourceSftpBulkConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing:SourceSftpBulkConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing",
                    "description": "Processing configuration\n"
                },
                "skipUnprocessableFiles": {
                    "type": "boolean",
                    "description": "If true, skip files that cannot be parsed and pass the error message along as the _ab_source_file_parse_error field. If false, fail the sync. Default: true\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "The strategy used to parse documents. `fast` extracts text directly from the document which doesn't work for all files. `ocr_only` is more reliable, but slower. `hi_res` is the most reliable, but requires an API key and a hosted instance of unstructured and can't be used with local mode. See the unstructured.io documentation for more details: https://unstructured-io.github.io/unstructured/core/partition.html#partition-pdf. must be one of [\"auto\", \"fast\", \"ocr_only\", \"hi_res\"]; Default: \"auto\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "skipUnprocessableFiles",
                        "strategy"
                    ]
                }
            }
        },
        "airbyte:index/SourceSftpBulkConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing:SourceSftpBulkConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessing": {
            "properties": {
                "local": {
                    "$ref": "#/types/airbyte:index/SourceSftpBulkConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal:SourceSftpBulkConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal",
                    "description": "Process files locally, supporting `fast` and `ocr` modes. This is the default option.\n"
                },
                "viaApi": {
                    "$ref": "#/types/airbyte:index/SourceSftpBulkConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingViaApi:SourceSftpBulkConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingViaApi",
                    "description": "Process files via an API, using the `hi_res` mode. This option is useful for increased performance and accuracy, but requires an API key and a hosted instance of unstructured.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSftpBulkConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal:SourceSftpBulkConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingLocal": {
            "type": "object"
        },
        "airbyte:index/SourceSftpBulkConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingViaApi:SourceSftpBulkConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingViaApi": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "The API key to use matching the environment. Default: \"\"\n",
                    "secret": true
                },
                "apiUrl": {
                    "type": "string",
                    "description": "The URL of the unstructured API to use. Default: \"https://api.unstructured.io\"\n"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceSftpBulkConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingViaApiParameter:SourceSftpBulkConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingViaApiParameter"
                    },
                    "description": "List of parameters send to the API\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "apiUrl"
                    ]
                }
            }
        },
        "airbyte:index/SourceSftpBulkConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingViaApiParameter:SourceSftpBulkConfigurationStreamFormatDocumentFileTypeFormatExperimentalProcessingViaApiParameter": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the unstructured API parameter to use\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "airbyte:index/SourceSftpBulkConfigurationStreamFormatJsonlFormat:SourceSftpBulkConfigurationStreamFormatJsonlFormat": {
            "type": "object"
        },
        "airbyte:index/SourceSftpBulkConfigurationStreamFormatParquetFormat:SourceSftpBulkConfigurationStreamFormatParquetFormat": {
            "properties": {
                "decimalAsFloat": {
                    "type": "boolean",
                    "description": "Whether to convert decimal fields to floats. There is a loss of precision when converting decimals to floats, so this is not recommended. Default: false\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "decimalAsFloat"
                    ]
                }
            }
        },
        "airbyte:index/SourceSftpConfiguration:SourceSftpConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceSftpConfigurationCredentials:SourceSftpConfigurationCredentials",
                    "description": "The server authentication method\n"
                },
                "filePattern": {
                    "type": "string",
                    "description": "The regular expression to specify files for sync in a chosen Folder Path. Default: \"\"\n"
                },
                "fileTypes": {
                    "type": "string",
                    "description": "Coma separated file types. Currently only 'csv' and 'json' types are supported. Default: \"csv,json\"\n"
                },
                "folderPath": {
                    "type": "string",
                    "description": "The directory to search files for sync. Default: \"\"\n"
                },
                "host": {
                    "type": "string",
                    "description": "The server host address\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The server port. Default: 22\n"
                },
                "user": {
                    "type": "string",
                    "description": "The server user\n"
                }
            },
            "type": "object",
            "required": [
                "host",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "filePattern",
                        "fileTypes",
                        "folderPath",
                        "host",
                        "port",
                        "user"
                    ]
                }
            }
        },
        "airbyte:index/SourceSftpConfigurationCredentials:SourceSftpConfigurationCredentials": {
            "properties": {
                "passwordAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceSftpConfigurationCredentialsPasswordAuthentication:SourceSftpConfigurationCredentialsPasswordAuthentication"
                },
                "sshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceSftpConfigurationCredentialsSshKeyAuthentication:SourceSftpConfigurationCredentialsSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSftpConfigurationCredentialsPasswordAuthentication:SourceSftpConfigurationCredentialsPasswordAuthentication": {
            "properties": {
                "authUserPassword": {
                    "type": "string",
                    "description": "OS-level password for logging into the jump server host\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "authUserPassword"
            ]
        },
        "airbyte:index/SourceSftpConfigurationCredentialsSshKeyAuthentication:SourceSftpConfigurationCredentialsSshKeyAuthentication": {
            "properties": {
                "authSshKey": {
                    "type": "string",
                    "description": "OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "authSshKey"
            ]
        },
        "airbyte:index/SourceShopifyConfiguration:SourceShopifyConfiguration": {
            "properties": {
                "bulkWindowInDays": {
                    "type": "integer",
                    "description": "Defines what would be a date range per single BULK Job. Default: 30\n"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceShopifyConfigurationCredentials:SourceShopifyConfigurationCredentials",
                    "description": "The authorization method to use to retrieve data from Shopify\n"
                },
                "fetchTransactionsUserId": {
                    "type": "boolean",
                    "description": "Defines which API type (REST/BULK) to use to fetch `Transactions` data. If you are a `Shopify Plus` user, leave the default value to speed up the fetch. Default: false\n"
                },
                "shop": {
                    "type": "string",
                    "description": "The name of your Shopify store found in the URL. For example, if your URL was https://NAME.myshopify.com, then the name would be 'NAME' or 'NAME.myshopify.com'.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The date you would like to replicate data from. Format: YYYY-MM-DD. Any data before this date will not be replicated. Default: \"2020-01-01\"\n"
                }
            },
            "type": "object",
            "required": [
                "shop"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bulkWindowInDays",
                        "fetchTransactionsUserId",
                        "shop",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourceShopifyConfigurationCredentials:SourceShopifyConfigurationCredentials": {
            "properties": {
                "apiPassword": {
                    "$ref": "#/types/airbyte:index/SourceShopifyConfigurationCredentialsApiPassword:SourceShopifyConfigurationCredentialsApiPassword",
                    "description": "API Password Auth\n"
                },
                "oAuth20": {
                    "$ref": "#/types/airbyte:index/SourceShopifyConfigurationCredentialsOAuth20:SourceShopifyConfigurationCredentialsOAuth20",
                    "description": "OAuth2.0\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceShopifyConfigurationCredentialsApiPassword:SourceShopifyConfigurationCredentialsApiPassword": {
            "properties": {
                "apiPassword": {
                    "type": "string",
                    "description": "The API Password for your private application in the `Shopify` store.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiPassword"
            ]
        },
        "airbyte:index/SourceShopifyConfigurationCredentialsOAuth20:SourceShopifyConfigurationCredentialsOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The Access Token for making authenticated requests.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of the Shopify developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of the Shopify developer application.\n"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceShortioConfiguration:SourceShortioConfiguration": {
            "properties": {
                "domainId": {
                    "type": "string"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Short.io Secret Key\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "domainId",
                "secretKey",
                "startDate"
            ]
        },
        "airbyte:index/SourceSlackConfiguration:SourceSlackConfiguration": {
            "properties": {
                "channelFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A channel name list (without leading '#' char) which limit the channels from which you'd like to sync. Empty list means no filter.\n"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceSlackConfigurationCredentials:SourceSlackConfigurationCredentials",
                    "description": "Choose how to authenticate into Slack\n"
                },
                "includePrivateChannels": {
                    "type": "boolean",
                    "description": "Whether to read information from private channels that the bot is already in.  If false, only public channels will be read.  If true, the bot must be manually added to private channels. . Default: false\n"
                },
                "joinChannels": {
                    "type": "boolean",
                    "description": "Whether to join all channels or to sync data only from channels the bot is already in.  If false, you'll need to manually add the bot to all the channels from which you'd like to sync messages. . Default: true\n"
                },
                "lookbackWindow": {
                    "type": "integer",
                    "description": "How far into the past to look for messages in threads, default is 0 days. Default: 0\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "includePrivateChannels",
                        "joinChannels",
                        "lookbackWindow",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourceSlackConfigurationCredentials:SourceSlackConfigurationCredentials": {
            "properties": {
                "apiToken": {
                    "$ref": "#/types/airbyte:index/SourceSlackConfigurationCredentialsApiToken:SourceSlackConfigurationCredentialsApiToken"
                },
                "signInViaSlackOAuth": {
                    "$ref": "#/types/airbyte:index/SourceSlackConfigurationCredentialsSignInViaSlackOAuth:SourceSlackConfigurationCredentialsSignInViaSlackOAuth"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSlackConfigurationCredentialsApiToken:SourceSlackConfigurationCredentialsApiToken": {
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "A Slack bot token. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/slack\"\u003edocs\u003c/a\u003e for instructions on how to generate it.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiToken"
            ]
        },
        "airbyte:index/SourceSlackConfigurationCredentialsSignInViaSlackOAuth:SourceSlackConfigurationCredentialsSignInViaSlackOAuth": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Slack access_token. See our \u003ca href=\"https://docs.airbyte.com/integrations/sources/slack\"\u003edocs\u003c/a\u003e if you need help generating the token.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "Slack client_id. See our \u003ca href=\"https://docs.airbyte.com/integrations/sources/slack\"\u003edocs\u003c/a\u003e if you need help finding this id.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Slack client_secret. See our \u003ca href=\"https://docs.airbyte.com/integrations/sources/slack\"\u003edocs\u003c/a\u003e if you need help finding this secret.\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret"
            ]
        },
        "airbyte:index/SourceSmailyConfiguration:SourceSmailyConfiguration": {
            "properties": {
                "apiPassword": {
                    "type": "string",
                    "description": "API user password. See https://smaily.com/help/api/general/create-api-user/\n",
                    "secret": true
                },
                "apiSubdomain": {
                    "type": "string",
                    "description": "API Subdomain. See https://smaily.com/help/api/general/create-api-user/\n"
                },
                "apiUsername": {
                    "type": "string",
                    "description": "API user username. See https://smaily.com/help/api/general/create-api-user/\n"
                }
            },
            "type": "object",
            "required": [
                "apiPassword",
                "apiSubdomain",
                "apiUsername"
            ]
        },
        "airbyte:index/SourceSmartengageConfiguration:SourceSmartengageConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API Key\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceSmartsheetsConfiguration:SourceSmartsheetsConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceSmartsheetsConfigurationCredentials:SourceSmartsheetsConfigurationCredentials"
                },
                "metadataFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A List of available columns which metadata can be pulled from.\n"
                },
                "spreadsheetId": {
                    "type": "string",
                    "description": "The spreadsheet ID. Find it by opening the spreadsheet then navigating to File \u003e Properties\n"
                },
                "startDatetime": {
                    "type": "string",
                    "description": "Only rows modified after this date/time will be replicated. This should be an ISO 8601 string, for instance: `2000-01-01T13:00:00`. Default: \"2020-01-01T00:00:00+00:00\"\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "spreadsheetId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "credentials",
                        "spreadsheetId",
                        "startDatetime"
                    ]
                }
            }
        },
        "airbyte:index/SourceSmartsheetsConfigurationCredentials:SourceSmartsheetsConfigurationCredentials": {
            "properties": {
                "apiAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceSmartsheetsConfigurationCredentialsApiAccessToken:SourceSmartsheetsConfigurationCredentialsApiAccessToken"
                },
                "oAuth20": {
                    "$ref": "#/types/airbyte:index/SourceSmartsheetsConfigurationCredentialsOAuth20:SourceSmartsheetsConfigurationCredentialsOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSmartsheetsConfigurationCredentialsApiAccessToken:SourceSmartsheetsConfigurationCredentialsApiAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The access token to use for accessing your data from Smartsheets. This access token must be generated by a user with at least read access to the data you'd like to replicate. Generate an access token in the Smartsheets main menu by clicking Account \u003e Apps \u0026 Integrations \u003e API Access. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/smartsheets/#setup-guide\"\u003esetup guide\u003c/a\u003e for information on how to obtain this token.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceSmartsheetsConfigurationCredentialsOAuth20:SourceSmartsheetsConfigurationCredentialsOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access Token for making authenticated requests.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "The API ID of the SmartSheets developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The API Secret the SmartSheets developer application.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The key to refresh the expired access_token.\n",
                    "secret": true
                },
                "tokenExpiryDate": {
                    "type": "string",
                    "description": "The date-time when the access token should be refreshed.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ]
        },
        "airbyte:index/SourceSnapchatMarketingConfiguration:SourceSnapchatMarketingConfiguration": {
            "properties": {
                "actionReportTime": {
                    "type": "string",
                    "description": "Specifies the principle for conversion reporting. must be one of [\"conversion\", \"impression\"]; Default: \"conversion\"\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your Snapchat developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your Snapchat developer application.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "Date in the format 2017-01-25. Any data after this date will not be replicated.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Refresh Token to renew the expired Access Token.\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "Date in the format 2022-01-01. Any data before this date will not be replicated. Default: \"2022-01-01\"\n"
                },
                "swipeUpAttributionWindow": {
                    "type": "string",
                    "description": "Attribution window for swipe ups. must be one of [\"1_DAY\", \"7_DAY\", \"28_DAY\"]; Default: \"28_DAY\"\n"
                },
                "viewAttributionWindow": {
                    "type": "string",
                    "description": "Attribution window for views. must be one of [\"1_HOUR\", \"3_HOUR\", \"6_HOUR\", \"1_DAY\", \"7_DAY\"]; Default: \"1_DAY\"\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionReportTime",
                        "clientId",
                        "clientSecret",
                        "refreshToken",
                        "startDate",
                        "swipeUpAttributionWindow",
                        "viewAttributionWindow"
                    ]
                }
            }
        },
        "airbyte:index/SourceSnowflakeConfiguration:SourceSnowflakeConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceSnowflakeConfigurationCredentials:SourceSnowflakeConfigurationCredentials"
                },
                "database": {
                    "type": "string",
                    "description": "The database you created for Airbyte to access data.\n"
                },
                "host": {
                    "type": "string",
                    "description": "The host domain of the snowflake instance (must include the account, region, cloud environment, and end with snowflakecomputing.com).\n"
                },
                "jdbcUrlParams": {
                    "type": "string",
                    "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '\u0026'. (example: key1=value1\u0026key2=value2\u0026key3=value3).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role you created for Airbyte to access Snowflake.\n"
                },
                "schema": {
                    "type": "string",
                    "description": "The source Snowflake schema tables. Leave empty to access tables from multiple schemas.\n"
                },
                "warehouse": {
                    "type": "string",
                    "description": "The warehouse you created for Airbyte to access data.\n"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "role",
                "warehouse"
            ]
        },
        "airbyte:index/SourceSnowflakeConfigurationCredentials:SourceSnowflakeConfigurationCredentials": {
            "properties": {
                "oAuth20": {
                    "$ref": "#/types/airbyte:index/SourceSnowflakeConfigurationCredentialsOAuth20:SourceSnowflakeConfigurationCredentialsOAuth20"
                },
                "usernameAndPassword": {
                    "$ref": "#/types/airbyte:index/SourceSnowflakeConfigurationCredentialsUsernameAndPassword:SourceSnowflakeConfigurationCredentialsUsernameAndPassword"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSnowflakeConfigurationCredentialsOAuth20:SourceSnowflakeConfigurationCredentialsOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access Token for making authenticated requests.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your Snowflake developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your Snowflake developer application.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Refresh Token for making authenticated requests.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret"
            ]
        },
        "airbyte:index/SourceSnowflakeConfigurationCredentialsUsernameAndPassword:SourceSnowflakeConfigurationCredentialsUsernameAndPassword": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "The password associated with the username.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "The username you created to allow Airbyte to access the database.\n"
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "airbyte:index/SourceSonarCloudConfiguration:SourceSonarCloudConfiguration": {
            "properties": {
                "componentKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Comma-separated list of component keys.\n",
                    "secret": true
                },
                "endDate": {
                    "type": "string",
                    "description": "To retrieve issues created before the given date (inclusive).\n"
                },
                "organization": {
                    "type": "string",
                    "description": "Organization key. See \u003ca href=\"https://docs.sonarcloud.io/appendices/project-information/#project-and-organization-keys\"\u003ehere\u003c/a\u003e.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "To retrieve issues created after the given date (inclusive).\n"
                },
                "userToken": {
                    "type": "string",
                    "description": "Your User Token. See \u003ca href=\"https://docs.sonarcloud.io/advanced-setup/user-accounts/\"\u003ehere\u003c/a\u003e. The token is case sensitive.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "componentKeys",
                "organization",
                "userToken"
            ]
        },
        "airbyte:index/SourceSpacexApiConfiguration:SourceSpacexApiConfiguration": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "options": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSquareConfiguration:SourceSquareConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceSquareConfigurationCredentials:SourceSquareConfigurationCredentials",
                    "description": "Choose how to authenticate to Square.\n"
                },
                "includeDeletedObjects": {
                    "type": "boolean",
                    "description": "In some streams there is an option to include deleted objects (Items, Categories, Discounts, Taxes). Default: false\n"
                },
                "isSandbox": {
                    "type": "boolean",
                    "description": "Determines whether to use the sandbox or production environment. Default: false\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date in the format YYYY-MM-DD. Any data before this date will not be replicated. If not set, all data will be replicated. Default: \"2021-01-01\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "includeDeletedObjects",
                        "isSandbox",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourceSquareConfigurationCredentials:SourceSquareConfigurationCredentials": {
            "properties": {
                "apiKey": {
                    "$ref": "#/types/airbyte:index/SourceSquareConfigurationCredentialsApiKey:SourceSquareConfigurationCredentialsApiKey"
                },
                "oauthAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceSquareConfigurationCredentialsOauthAuthentication:SourceSquareConfigurationCredentialsOauthAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSquareConfigurationCredentialsApiKey:SourceSquareConfigurationCredentialsApiKey": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "The API key for a Square application\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceSquareConfigurationCredentialsOauthAuthentication:SourceSquareConfigurationCredentialsOauthAuthentication": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The Square-issued ID of your application\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Square-issued application secret for your application\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "A refresh token generated using the above client ID and secret\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceStravaConfiguration:SourceStravaConfiguration": {
            "properties": {
                "athleteId": {
                    "type": "integer",
                    "description": "The Athlete ID of your Strava developer application.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your Strava developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your Strava developer application.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The Refresh Token with the activity: read_all permissions.\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time. Any data before this date will not be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "athleteId",
                "clientId",
                "clientSecret",
                "refreshToken",
                "startDate"
            ]
        },
        "airbyte:index/SourceStripeConfiguration:SourceStripeConfiguration": {
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Your Stripe account ID (starts with 'acct_', find yours \u003ca href=\"https://dashboard.stripe.com/settings/account\"\u003ehere\u003c/a\u003e).\n"
                },
                "callRateLimit": {
                    "type": "integer",
                    "description": "The number of API calls per second that you allow connector to make. This value can not be bigger than real API call rate limit (https://stripe.com/docs/rate-limits). If not specified the default maximum is 25 and 100 calls per second for test and production tokens respectively.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Stripe API key (usually starts with 'sk_live_'; find yours \u003ca href=\"https://dashboard.stripe.com/apikeys\"\u003ehere\u003c/a\u003e).\n"
                },
                "lookbackWindowDays": {
                    "type": "integer",
                    "description": "When set, the connector will always re-export data from the past N days, where N is the value set here. This is useful if your data is frequently updated after creation. The Lookback Window only applies to streams that do not support event-based incremental syncs: Events, SetupAttempts, ShippingRates, BalanceTransactions, Files, FileLinks, Refunds. More info \u003ca href=\"https://docs.airbyte.com/integrations/sources/stripe#requirements\"\u003ehere\u003c/a\u003e. Default: 0\n"
                },
                "numWorkers": {
                    "type": "integer",
                    "description": "The number of worker thread to use for the sync. The performance upper boundary depends on call_rate_limit setting and type of account. Default: 10\n"
                },
                "sliceRange": {
                    "type": "integer",
                    "description": "The time increment used by the connector when requesting data from the Stripe API. The bigger the value is, the less requests will be made and faster the sync will be. On the other hand, the more seldom the state is persisted. Default: 365\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Only data generated after this date will be replicated. Default: \"2017-01-25T00:00:00Z\"\n"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "clientSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accountId",
                        "clientSecret",
                        "lookbackWindowDays",
                        "numWorkers",
                        "sliceRange",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourceSurveySparrowConfiguration:SourceSurveySparrowConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Your access token. See \u003ca href=\"https://developers.surveysparrow.com/rest-apis#authentication\"\u003ehere\u003c/a\u003e. The key is case sensitive.\n",
                    "secret": true
                },
                "region": {
                    "$ref": "#/types/airbyte:index/SourceSurveySparrowConfigurationRegion:SourceSurveySparrowConfigurationRegion",
                    "description": "Is your account location is EU based? If yes, the base url to retrieve data will be different.\n"
                },
                "surveyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A List of your survey ids for survey-specific stream\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceSurveySparrowConfigurationRegion:SourceSurveySparrowConfigurationRegion": {
            "properties": {
                "euBasedAccount": {
                    "$ref": "#/types/airbyte:index/SourceSurveySparrowConfigurationRegionEuBasedAccount:SourceSurveySparrowConfigurationRegionEuBasedAccount"
                },
                "globalAccount": {
                    "$ref": "#/types/airbyte:index/SourceSurveySparrowConfigurationRegionGlobalAccount:SourceSurveySparrowConfigurationRegionGlobalAccount"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSurveySparrowConfigurationRegionEuBasedAccount:SourceSurveySparrowConfigurationRegionEuBasedAccount": {
            "type": "object"
        },
        "airbyte:index/SourceSurveySparrowConfigurationRegionGlobalAccount:SourceSurveySparrowConfigurationRegionGlobalAccount": {
            "type": "object"
        },
        "airbyte:index/SourceSurveymonkeyConfiguration:SourceSurveymonkeyConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceSurveymonkeyConfigurationCredentials:SourceSurveymonkeyConfigurationCredentials",
                    "description": "The authorization method to use to retrieve data from SurveyMonkey\n"
                },
                "origin": {
                    "type": "string",
                    "description": "Depending on the originating datacenter of the SurveyMonkey account, the API access URL may be different. must be one of [\"USA\", \"Europe\", \"Canada\"]; Default: \"USA\"\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.\n"
                },
                "surveyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IDs of the surveys from which you'd like to replicate data. If left empty, data from all boards to which you have access will be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "credentials",
                        "origin",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourceSurveymonkeyConfigurationCredentials:SourceSurveymonkeyConfigurationCredentials": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access Token for making authenticated requests. See the \u003ca href=\"https://docs.airbyte.io/integrations/sources/surveymonkey\"\u003edocs\u003c/a\u003e for information on how to generate this key.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of the SurveyMonkey developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of the SurveyMonkey developer application.\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceTempoConfiguration:SourceTempoConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "Tempo API Token. Go to Tempo\u003eSettings, scroll down to Data Access and select API integration.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiToken"
            ]
        },
        "airbyte:index/SourceTheGuardianApiConfiguration:SourceTheGuardianApiConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Your API Key. See \u003ca href=\"https://open-platform.theguardian.com/access/\"\u003ehere\u003c/a\u003e. The key is case sensitive.\n",
                    "secret": true
                },
                "endDate": {
                    "type": "string",
                    "description": "(Optional) Use this to set the maximum date (YYYY-MM-DD) of the results. Results newer than the end_date will not be shown. Default is set to the current date (today) for incremental syncs.\n"
                },
                "query": {
                    "type": "string",
                    "description": "(Optional) The query (q) parameter filters the results to only those that include that search term. The q parameter supports AND, OR and NOT operators.\n"
                },
                "section": {
                    "type": "string",
                    "description": "(Optional) Use this to filter the results by a particular section. See \u003ca href=\"https://content.guardianapis.com/sections?api-key=test\"\u003ehere\u003c/a\u003e for a list of all sections, and \u003ca href=\"https://open-platform.theguardian.com/documentation/section\"\u003ehere\u003c/a\u003e for the sections endpoint documentation.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Use this to set the minimum date (YYYY-MM-DD) of the results. Results older than the start_date will not be shown.\n"
                },
                "tag": {
                    "type": "string",
                    "description": "(Optional) A tag is a piece of data that is used by The Guardian to categorise content. Use this parameter to filter results by showing only the ones matching the entered tag. See \u003ca href=\"https://content.guardianapis.com/tags?api-key=test\"\u003ehere\u003c/a\u003e for a list of all tags, and \u003ca href=\"https://open-platform.theguardian.com/documentation/tag\"\u003ehere\u003c/a\u003e for the tags endpoint documentation.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "startDate"
            ]
        },
        "airbyte:index/SourceTiktokMarketingConfiguration:SourceTiktokMarketingConfiguration": {
            "properties": {
                "attributionWindow": {
                    "type": "integer",
                    "description": "The attribution window in days. Default: 3\n"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceTiktokMarketingConfigurationCredentials:SourceTiktokMarketingConfigurationCredentials",
                    "description": "Authentication method\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "The date until which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DD. All data generated between start_date and this date will be replicated. Not setting this option will result in always syncing the data till the current date.\n"
                },
                "includeDeleted": {
                    "type": "boolean",
                    "description": "Set to active if you want to include deleted data in reports. Default: false\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The Start Date in format: YYYY-MM-DD. Any data before this date will not be replicated. If this parameter is not set, all data will be replicated. Default: \"2016-09-01\"\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "attributionWindow",
                        "includeDeleted",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourceTiktokMarketingConfigurationCredentials:SourceTiktokMarketingConfigurationCredentials": {
            "properties": {
                "oAuth20": {
                    "$ref": "#/types/airbyte:index/SourceTiktokMarketingConfigurationCredentialsOAuth20:SourceTiktokMarketingConfigurationCredentialsOAuth20"
                },
                "sandboxAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceTiktokMarketingConfigurationCredentialsSandboxAccessToken:SourceTiktokMarketingConfigurationCredentialsSandboxAccessToken"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceTiktokMarketingConfigurationCredentialsOAuth20:SourceTiktokMarketingConfigurationCredentialsOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Long-term Authorized Access Token.\n",
                    "secret": true
                },
                "advertiserId": {
                    "type": "string",
                    "description": "The Advertiser ID to filter reports and streams. Let this empty to retrieve all.\n"
                },
                "appId": {
                    "type": "string",
                    "description": "The Developer Application App ID.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "The Developer Application Secret.\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "appId",
                "secret"
            ]
        },
        "airbyte:index/SourceTiktokMarketingConfigurationCredentialsSandboxAccessToken:SourceTiktokMarketingConfigurationCredentialsSandboxAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The long-term authorized access token.\n",
                    "secret": true
                },
                "advertiserId": {
                    "type": "string",
                    "description": "The Advertiser ID which generated for the developer's Sandbox application.\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "advertiserId"
            ]
        },
        "airbyte:index/SourceTrelloConfiguration:SourceTrelloConfiguration": {
            "properties": {
                "boardIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IDs of the boards to replicate data from. If left empty, data from all boards to which you have access will be replicated. Please note that this is not the 8-character ID in the board's shortLink (URL of the board). Rather, what is required here is the 24-character ID usually returned by the API\n"
                },
                "key": {
                    "type": "string",
                    "description": "Trello API key. See the \u003ca href=\"https://developer.atlassian.com/cloud/trello/guides/rest-api/authorization/#using-basic-oauth\"\u003edocs\u003c/a\u003e for instructions on how to generate it.\n",
                    "secret": true
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.\n"
                },
                "token": {
                    "type": "string",
                    "description": "Trello API token. See the \u003ca href=\"https://developer.atlassian.com/cloud/trello/guides/rest-api/authorization/#using-basic-oauth\"\u003edocs\u003c/a\u003e for instructions on how to generate it.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "key",
                "startDate",
                "token"
            ]
        },
        "airbyte:index/SourceTrustpilotConfiguration:SourceTrustpilotConfiguration": {
            "properties": {
                "businessUnits": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The names of business units which shall be synchronized. Some streams e.g. configured_business_units or private_reviews use this configuration.\n"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceTrustpilotConfigurationCredentials:SourceTrustpilotConfigurationCredentials"
                },
                "startDate": {
                    "type": "string",
                    "description": "For streams with sync. method incremental the start date time to be used\n"
                }
            },
            "type": "object",
            "required": [
                "businessUnits",
                "credentials",
                "startDate"
            ]
        },
        "airbyte:index/SourceTrustpilotConfigurationCredentials:SourceTrustpilotConfigurationCredentials": {
            "properties": {
                "apiKey": {
                    "$ref": "#/types/airbyte:index/SourceTrustpilotConfigurationCredentialsApiKey:SourceTrustpilotConfigurationCredentialsApiKey",
                    "description": "The API key authentication method gives you access to only the streams which are part of the Public API. When you want to get streams available via the Consumer API (e.g. the private reviews) you need to use authentication method OAuth 2.0.\n"
                },
                "oAuth20": {
                    "$ref": "#/types/airbyte:index/SourceTrustpilotConfigurationCredentialsOAuth20:SourceTrustpilotConfigurationCredentialsOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceTrustpilotConfigurationCredentialsApiKey:SourceTrustpilotConfigurationCredentialsApiKey": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The API key of the Trustpilot API application.\n"
                }
            },
            "type": "object",
            "required": [
                "clientId"
            ]
        },
        "airbyte:index/SourceTrustpilotConfigurationCredentialsOAuth20:SourceTrustpilotConfigurationCredentialsOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access Token for making authenticated requests.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "The API key of the Trustpilot API application. (represents the OAuth Client ID)\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Secret of the Trustpilot API application. (represents the OAuth Client Secret)\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The key to refresh the expired access_token.\n",
                    "secret": true
                },
                "tokenExpiryDate": {
                    "type": "string",
                    "description": "The date-time when the access token should be refreshed.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ]
        },
        "airbyte:index/SourceTvmazeScheduleConfiguration:SourceTvmazeScheduleConfiguration": {
            "properties": {
                "domesticScheduleCountryCode": {
                    "type": "string",
                    "description": "Country code for domestic TV schedule retrieval.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "End date for TV schedule retrieval. May be in the future. Optional.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Start date for TV schedule retrieval. May be in the future.\n"
                },
                "webScheduleCountryCode": {
                    "type": "string",
                    "description": "ISO 3166-1 country code for web TV schedule retrieval. Leave blank for\nall countries plus global web channels (e.g. Netflix). Alternatively,\nset to 'global' for just global web channels.\n"
                }
            },
            "type": "object",
            "required": [
                "domesticScheduleCountryCode",
                "startDate"
            ]
        },
        "airbyte:index/SourceTwilioConfiguration:SourceTwilioConfiguration": {
            "properties": {
                "accountSid": {
                    "type": "string",
                    "description": "Twilio account SID\n"
                },
                "authToken": {
                    "type": "string",
                    "description": "Twilio Auth Token.\n",
                    "secret": true
                },
                "lookbackWindow": {
                    "type": "integer",
                    "description": "How far into the past to look for records. (in minutes). Default: 0\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "UTC date and time in the format 2020-10-01T00:00:00Z. Any data before this date will not be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "accountSid",
                "authToken",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accountSid",
                        "authToken",
                        "lookbackWindow",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourceTwilioTaskrouterConfiguration:SourceTwilioTaskrouterConfiguration": {
            "properties": {
                "accountSid": {
                    "type": "string",
                    "description": "Twilio Account ID\n"
                },
                "authToken": {
                    "type": "string",
                    "description": "Twilio Auth Token\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accountSid",
                "authToken"
            ]
        },
        "airbyte:index/SourceTwitterConfiguration:SourceTwitterConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "App only Bearer Token. See the \u003ca href=\"https://developer.twitter.com/en/docs/authentication/oauth-2-0/bearer-tokens\"\u003edocs\u003c/a\u003e for more information on how to obtain this token.\n",
                    "secret": true
                },
                "endDate": {
                    "type": "string",
                    "description": "The end date for retrieving tweets must be a minimum of 10 seconds prior to the request time.\n"
                },
                "query": {
                    "type": "string",
                    "description": "Query for matching Tweets. You can learn how to build this query by reading \u003ca href=\"https://developer.twitter.com/en/docs/twitter-api/tweets/search/integrate/build-a-query\"\u003e build a query guide \u003c/a\u003e.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The start date for retrieving tweets cannot be more than 7 days in the past.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "query"
            ]
        },
        "airbyte:index/SourceTypeformConfiguration:SourceTypeformConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceTypeformConfigurationCredentials:SourceTypeformConfigurationCredentials"
                },
                "formIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When this parameter is set, the connector will replicate data only from the input forms. Otherwise, all forms in your Typeform account will be replicated. You can find form IDs in your form URLs. For example, in the URL \"https://mysite.typeform.com/to/u6nXL7\" the form_id is u6nXL7. You can find form URLs on Share panel\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The date from which you'd like to replicate data for Typeform API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials"
            ]
        },
        "airbyte:index/SourceTypeformConfigurationCredentials:SourceTypeformConfigurationCredentials": {
            "properties": {
                "oAuth20": {
                    "$ref": "#/types/airbyte:index/SourceTypeformConfigurationCredentialsOAuth20:SourceTypeformConfigurationCredentialsOAuth20"
                },
                "privateToken": {
                    "$ref": "#/types/airbyte:index/SourceTypeformConfigurationCredentialsPrivateToken:SourceTypeformConfigurationCredentialsPrivateToken"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceTypeformConfigurationCredentialsOAuth20:SourceTypeformConfigurationCredentialsOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access Token for making authenticated requests.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of the Typeform developer application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret the Typeform developer application.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The key to refresh the expired access_token.\n",
                    "secret": true
                },
                "tokenExpiryDate": {
                    "type": "string",
                    "description": "The date-time when the access token should be refreshed.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ]
        },
        "airbyte:index/SourceTypeformConfigurationCredentialsPrivateToken:SourceTypeformConfigurationCredentialsPrivateToken": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Log into your Typeform account and then generate a personal Access Token.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceUsCensusConfiguration:SourceUsCensusConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Your API Key. Get your key \u003ca href=\"https://api.census.gov/data/key_signup.html\"\u003ehere\u003c/a\u003e.\n",
                    "secret": true
                },
                "queryParams": {
                    "type": "string",
                    "description": "The query parameters portion of the GET request, without the api key\n"
                },
                "queryPath": {
                    "type": "string",
                    "description": "The path portion of the GET request\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "queryPath"
            ]
        },
        "airbyte:index/SourceVantageConfiguration:SourceVantageConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Your API Access token. See \u003ca href=\"https://vantage.readme.io/reference/authentication\"\u003ehere\u003c/a\u003e.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceWebflowConfiguration:SourceWebflowConfiguration": {
            "properties": {
                "acceptVersion": {
                    "type": "string",
                    "description": "The version of the Webflow API to use. See https://developers.webflow.com/#versioning\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API token for authenticating to Webflow. See https://university.webflow.com/lesson/intro-to-the-webflow-api\n",
                    "secret": true
                },
                "siteId": {
                    "type": "string",
                    "description": "The id of the Webflow site you are requesting data from. See https://developers.webflow.com/#sites\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "siteId"
            ]
        },
        "airbyte:index/SourceWhiskyHunterConfiguration:SourceWhiskyHunterConfiguration": {
            "type": "object"
        },
        "airbyte:index/SourceWikipediaPageviewsConfiguration:SourceWikipediaPageviewsConfiguration": {
            "properties": {
                "access": {
                    "type": "string",
                    "description": "If you want to filter by access method, use one of desktop, mobile-app or mobile-web. If you are interested in pageviews regardless of access method, use all-access.\n"
                },
                "agent": {
                    "type": "string",
                    "description": "If you want to filter by agent type, use one of user, automated or spider. If you are interested in pageviews regardless of agent type, use all-agents.\n"
                },
                "article": {
                    "type": "string",
                    "description": "The title of any article in the specified project. Any spaces should be replaced with underscores. It also should be URI-encoded, so that non-URI-safe characters like %, / or ? are accepted.\n"
                },
                "country": {
                    "type": "string",
                    "description": "The ISO 3166-1 alpha-2 code of a country for which to retrieve top articles.\n"
                },
                "end": {
                    "type": "string",
                    "description": "The date of the last day to include, in YYYYMMDD or YYYYMMDDHH format.\n"
                },
                "project": {
                    "type": "string",
                    "description": "If you want to filter by project, use the domain of any Wikimedia project.\n"
                },
                "start": {
                    "type": "string",
                    "description": "The date of the first day to include, in YYYYMMDD or YYYYMMDDHH format.\n"
                }
            },
            "type": "object",
            "required": [
                "access",
                "agent",
                "article",
                "country",
                "end",
                "project",
                "start"
            ]
        },
        "airbyte:index/SourceWoocommerceConfiguration:SourceWoocommerceConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Customer Key for API in WooCommerce shop\n",
                    "secret": true
                },
                "apiSecret": {
                    "type": "string",
                    "description": "Customer Secret for API in WooCommerce shop\n"
                },
                "shop": {
                    "type": "string",
                    "description": "The name of the store. For https://EXAMPLE.com, the shop name is 'EXAMPLE.com'.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The date you would like to replicate data from. Format: YYYY-MM-DD\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "apiSecret",
                "shop",
                "startDate"
            ]
        },
        "airbyte:index/SourceXkcdConfiguration:SourceXkcdConfiguration": {
            "type": "object"
        },
        "airbyte:index/SourceYandexMetricaConfiguration:SourceYandexMetricaConfiguration": {
            "properties": {
                "authToken": {
                    "type": "string",
                    "description": "Your Yandex Metrica API access token\n",
                    "secret": true
                },
                "counterId": {
                    "type": "string",
                    "description": "Counter ID\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "Starting point for your data replication, in format of \"YYYY-MM-DD\". If not provided will sync till most recent date.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Starting point for your data replication, in format of \"YYYY-MM-DD\".\n"
                }
            },
            "type": "object",
            "required": [
                "authToken",
                "counterId",
                "startDate"
            ]
        },
        "airbyte:index/SourceYotpoConfiguration:SourceYotpoConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access token recieved as a result of API call to https://api.yotpo.com/oauth/token (Ref- https://apidocs.yotpo.com/reference/yotpo-authentication)\n",
                    "secret": true
                },
                "appKey": {
                    "type": "string",
                    "description": "App key found at settings (Ref- https://settings.yotpo.com/#/general_settings)\n",
                    "secret": true
                },
                "email": {
                    "type": "string",
                    "description": "Email address registered with yotpo. Default: \"example@gmail.com\"\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Date time filter for incremental filter, Specify which date to extract from.\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "appKey",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessToken",
                        "appKey",
                        "email",
                        "startDate"
                    ]
                }
            }
        },
        "airbyte:index/SourceYoutubeAnalyticsConfiguration:SourceYoutubeAnalyticsConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceYoutubeAnalyticsConfigurationCredentials:SourceYoutubeAnalyticsConfigurationCredentials"
                }
            },
            "type": "object",
            "required": [
                "credentials"
            ]
        },
        "airbyte:index/SourceYoutubeAnalyticsConfigurationCredentials:SourceYoutubeAnalyticsConfigurationCredentials": {
            "properties": {
                "additionalProperties": {
                    "type": "string",
                    "description": "Parsed as JSON.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your developer application\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret of your developer application\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "A refresh token generated using the above client ID and secret\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceZendeskChatConfiguration:SourceZendeskChatConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceZendeskChatConfigurationCredentials:SourceZendeskChatConfigurationCredentials"
                },
                "startDate": {
                    "type": "string",
                    "description": "The date from which you'd like to replicate data for Zendesk Chat API, in the format YYYY-MM-DDT00:00:00Z.\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Required if you access Zendesk Chat from a Zendesk Support subdomain. Default: \"\"\n"
                }
            },
            "type": "object",
            "required": [
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "startDate",
                        "subdomain"
                    ]
                }
            }
        },
        "airbyte:index/SourceZendeskChatConfigurationCredentials:SourceZendeskChatConfigurationCredentials": {
            "properties": {
                "accessToken": {
                    "$ref": "#/types/airbyte:index/SourceZendeskChatConfigurationCredentialsAccessToken:SourceZendeskChatConfigurationCredentialsAccessToken"
                },
                "oAuth20": {
                    "$ref": "#/types/airbyte:index/SourceZendeskChatConfigurationCredentialsOAuth20:SourceZendeskChatConfigurationCredentialsOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceZendeskChatConfigurationCredentialsAccessToken:SourceZendeskChatConfigurationCredentialsAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The Access Token to make authenticated requests.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceZendeskChatConfigurationCredentialsOAuth20:SourceZendeskChatConfigurationCredentialsOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access Token for making authenticated requests.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your OAuth application\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your OAuth application.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Refresh Token to obtain new Access Token, when it's expired.\n",
                    "secret": true
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceZendeskSellConfiguration:SourceZendeskSellConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "The API token for authenticating to Zendesk Sell\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiToken"
            ]
        },
        "airbyte:index/SourceZendeskSunshineConfiguration:SourceZendeskSunshineConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSunshineConfigurationCredentials:SourceZendeskSunshineConfigurationCredentials"
                },
                "startDate": {
                    "type": "string",
                    "description": "The date from which you'd like to replicate data for Zendesk Sunshine API, in the format YYYY-MM-DDT00:00:00Z.\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "The subdomain for your Zendesk Account.\n"
                }
            },
            "type": "object",
            "required": [
                "startDate",
                "subdomain"
            ]
        },
        "airbyte:index/SourceZendeskSunshineConfigurationCredentials:SourceZendeskSunshineConfigurationCredentials": {
            "properties": {
                "apiToken": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSunshineConfigurationCredentialsApiToken:SourceZendeskSunshineConfigurationCredentialsApiToken"
                },
                "oAuth20": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSunshineConfigurationCredentialsOAuth20:SourceZendeskSunshineConfigurationCredentialsOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceZendeskSunshineConfigurationCredentialsApiToken:SourceZendeskSunshineConfigurationCredentialsApiToken": {
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "API Token. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/zendesk_sunshine\"\u003edocs\u003c/a\u003e for information on how to generate this key.\n",
                    "secret": true
                },
                "email": {
                    "type": "string",
                    "description": "The user email for your Zendesk account\n"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "email"
            ]
        },
        "airbyte:index/SourceZendeskSunshineConfigurationCredentialsOAuth20:SourceZendeskSunshineConfigurationCredentialsOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Long-term access Token for making authenticated requests.\n",
                    "secret": true
                },
                "clientId": {
                    "type": "string",
                    "description": "The Client ID of your OAuth application.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Client Secret of your OAuth application.\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret"
            ]
        },
        "airbyte:index/SourceZendeskSupportConfiguration:SourceZendeskSupportConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSupportConfigurationCredentials:SourceZendeskSupportConfigurationCredentials",
                    "description": "Zendesk allows two authentication methods. We recommend using `OAuth2.0` for Airbyte Cloud users and `API token` for Airbyte Open Source users.\n"
                },
                "ignorePagination": {
                    "type": "boolean",
                    "description": "Makes each stream read a single page of data. Default: false\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The UTC date and time from which you'd like to replicate data, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "This is your unique Zendesk subdomain that can be found in your account URL. For example, in https://MY_SUBDOMAIN.zendesk.com/, MY_SUBDOMAIN is the value of your subdomain.\n"
                }
            },
            "type": "object",
            "required": [
                "subdomain"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ignorePagination",
                        "subdomain"
                    ]
                }
            }
        },
        "airbyte:index/SourceZendeskSupportConfigurationCredentials:SourceZendeskSupportConfigurationCredentials": {
            "properties": {
                "apiToken": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSupportConfigurationCredentialsApiToken:SourceZendeskSupportConfigurationCredentialsApiToken"
                },
                "oAuth20": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSupportConfigurationCredentialsOAuth20:SourceZendeskSupportConfigurationCredentialsOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceZendeskSupportConfigurationCredentialsApiToken:SourceZendeskSupportConfigurationCredentialsApiToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string",
                    "description": "Parsed as JSON.\n"
                },
                "apiToken": {
                    "type": "string",
                    "description": "The value of the API token generated. See our \u003ca href=\"https://docs.airbyte.com/integrations/sources/zendesk-support#setup-guide\"\u003efull documentation\u003c/a\u003e for more information on generating this token.\n",
                    "secret": true
                },
                "email": {
                    "type": "string",
                    "description": "The user email for your Zendesk account.\n"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "email"
            ]
        },
        "airbyte:index/SourceZendeskSupportConfigurationCredentialsOAuth20:SourceZendeskSupportConfigurationCredentialsOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The OAuth access token. See the \u003ca href=\"https://developer.zendesk.com/documentation/ticketing/working-with-oauth/creating-and-using-oauth-tokens-with-the-api/\"\u003eZendesk docs\u003c/a\u003e for more information on generating this token.\n",
                    "secret": true
                },
                "additionalProperties": {
                    "type": "string",
                    "description": "Parsed as JSON.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The OAuth client's ID. See \u003ca href=\"https://docs.searchunify.com/Content/Content-Sources/Zendesk-Authentication-OAuth-Client-ID-Secret.htm#:~:text=Get%20Client%20ID%20and%20Client%20Secret\u0026text=Go%20to%20OAuth%20Clients%20and,will%20be%20displayed%20only%20once.\"\u003ethis guide\u003c/a\u003e for more information.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The OAuth client secret. See \u003ca href=\"https://docs.searchunify.com/Content/Content-Sources/Zendesk-Authentication-OAuth-Client-ID-Secret.htm#:~:text=Get%20Client%20ID%20and%20Client%20Secret\u0026text=Go%20to%20OAuth%20Clients%20and,will%20be%20displayed%20only%20once.\"\u003ethis guide\u003c/a\u003e for more information.\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceZendeskTalkConfiguration:SourceZendeskTalkConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceZendeskTalkConfigurationCredentials:SourceZendeskTalkConfigurationCredentials",
                    "description": "Zendesk service provides two authentication methods. Choose between: `OAuth2.0` or `API token`.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The date from which you'd like to replicate data for Zendesk Talk API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "This is your Zendesk subdomain that can be found in your account URL. For example, in https://{MY_SUBDOMAIN}.zendesk.com/, where MY_SUBDOMAIN is the value of your subdomain.\n"
                }
            },
            "type": "object",
            "required": [
                "startDate",
                "subdomain"
            ]
        },
        "airbyte:index/SourceZendeskTalkConfigurationCredentials:SourceZendeskTalkConfigurationCredentials": {
            "properties": {
                "apiToken": {
                    "$ref": "#/types/airbyte:index/SourceZendeskTalkConfigurationCredentialsApiToken:SourceZendeskTalkConfigurationCredentialsApiToken"
                },
                "oAuth20": {
                    "$ref": "#/types/airbyte:index/SourceZendeskTalkConfigurationCredentialsOAuth20:SourceZendeskTalkConfigurationCredentialsOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceZendeskTalkConfigurationCredentialsApiToken:SourceZendeskTalkConfigurationCredentialsApiToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string",
                    "description": "Parsed as JSON.\n"
                },
                "apiToken": {
                    "type": "string",
                    "description": "The value of the API token generated. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/zendesk-talk\"\u003edocs\u003c/a\u003e for more information.\n",
                    "secret": true
                },
                "email": {
                    "type": "string",
                    "description": "The user email for your Zendesk account.\n"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "email"
            ]
        },
        "airbyte:index/SourceZendeskTalkConfigurationCredentialsOAuth20:SourceZendeskTalkConfigurationCredentialsOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The value of the API token generated. See the \u003ca href=\"https://docs.airbyte.com/integrations/sources/zendesk-talk\"\u003edocs\u003c/a\u003e for more information.\n",
                    "secret": true
                },
                "additionalProperties": {
                    "type": "string",
                    "description": "Parsed as JSON.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client Secret\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceZenloopConfiguration:SourceZenloopConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "Zenloop API Token. You can get the API token in settings page \u003ca href=\"https://app.zenloop.com/settings/api\"\u003ehere\u003c/a\u003e\n",
                    "secret": true
                },
                "dateFrom": {
                    "type": "string",
                    "description": "Zenloop date_from. Format: 2021-10-24T03:30:30Z or 2021-10-24. Leave empty if only data from current data should be synced\n"
                },
                "surveyGroupId": {
                    "type": "string",
                    "description": "Zenloop Survey Group ID. Can be found by pulling All Survey Groups via SurveyGroups stream. Leave empty to pull answers from all survey groups\n"
                },
                "surveyId": {
                    "type": "string",
                    "description": "Zenloop Survey ID. Can be found \u003ca href=\"https://app.zenloop.com/settings/api\"\u003ehere\u003c/a\u003e. Leave empty to pull answers from all surveys\n"
                }
            },
            "type": "object",
            "required": [
                "apiToken"
            ]
        },
        "airbyte:index/SourceZohoCrmConfiguration:SourceZohoCrmConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "OAuth2.0 Client ID\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "OAuth2.0 Client Secret\n"
                },
                "dcRegion": {
                    "type": "string",
                    "description": "Please choose the region of your Data Center location. More info by this \u003ca href=\"https://www.zoho.com/crm/developer/docs/api/v2/multi-dc.html\"\u003eLink\u003c/a\u003e. must be one of [\"US\", \"AU\", \"EU\", \"IN\", \"CN\", \"JP\"]\n"
                },
                "edition": {
                    "type": "string",
                    "description": "Choose your Edition of Zoho CRM to determine API Concurrency Limits. must be one of [\"Free\", \"Standard\", \"Professional\", \"Enterprise\", \"Ultimate\"]; Default: \"Free\"\n"
                },
                "environment": {
                    "type": "string",
                    "description": "Please choose the environment. must be one of [\"Production\", \"Developer\", \"Sandbox\"]\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "OAuth2.0 Refresh Token\n",
                    "secret": true
                },
                "startDatetime": {
                    "type": "string",
                    "description": "ISO 8601, for instance: `YYYY-MM-DD`, `YYYY-MM-DD HH:MM:SS+HH:MM`\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "dcRegion",
                "environment",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "clientId",
                        "clientSecret",
                        "dcRegion",
                        "edition",
                        "environment",
                        "refreshToken"
                    ]
                }
            }
        },
        "airbyte:index/SourceZoomConfiguration:SourceZoomConfiguration": {
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account ID for your Zoom account. You can find this in the Zoom Marketplace under the \"Manage\" tab for your app.\n"
                },
                "authorizationEndpoint": {
                    "type": "string",
                    "description": "Default: \"https://zoom.us/oauth/token\"\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The client ID for your Zoom app. You can find this in the Zoom Marketplace under the \"Manage\" tab for your app.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret for your Zoom app. You can find this in the Zoom Marketplace under the \"Manage\" tab for your app.\n"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "clientId",
                "clientSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accountId",
                        "authorizationEndpoint",
                        "clientId",
                        "clientSecret"
                    ]
                }
            }
        },
        "airbyte:index/getConnectionConfigurations:getConnectionConfigurations": {
            "properties": {
                "streams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/getConnectionConfigurationsStream:getConnectionConfigurationsStream"
                    }
                }
            },
            "type": "object",
            "required": [
                "streams"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getConnectionConfigurationsStream:getConnectionConfigurationsStream": {
            "properties": {
                "cursorFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Path to the field that will be used to determine if a record is new or modified since the last sync. This field is REQUIRED if `sync_mode` is `incremental` unless there is a default.\n"
                },
                "name": {
                    "type": "string"
                },
                "primaryKeys": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": "Paths to the fields that will be used as primary key. This field is REQUIRED if `destination_sync_mode` is `*_dedup` unless it is already supplied by the source schema.\n"
                },
                "syncMode": {
                    "type": "string",
                    "description": "must be one of [\"full_refresh_overwrite\", \"full_refresh_append\", \"incremental_append\", \"incremental_deduped_history\"]\n"
                }
            },
            "type": "object",
            "required": [
                "cursorFields",
                "name",
                "primaryKeys",
                "syncMode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getConnectionSchedule:getConnectionSchedule": {
            "properties": {
                "basicTiming": {
                    "type": "string"
                },
                "cronExpression": {
                    "type": "string"
                },
                "scheduleType": {
                    "type": "string",
                    "description": "must be one of [\"manual\", \"cron\", \"basic\"]\n"
                }
            },
            "type": "object",
            "required": [
                "basicTiming",
                "cronExpression",
                "scheduleType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the airbyte package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "bearerAuth": {
                "type": "string",
                "secret": true
            },
            "clientId": {
                "type": "string",
                "secret": true
            },
            "clientSecret": {
                "type": "string",
                "secret": true
            },
            "password": {
                "type": "string",
                "secret": true
            },
            "serverUrl": {
                "type": "string",
                "description": "Server URL (defaults to https://api.airbyte.com/v1)\n"
            },
            "username": {
                "type": "string",
                "secret": true
            }
        },
        "inputProperties": {
            "bearerAuth": {
                "type": "string",
                "secret": true
            },
            "clientId": {
                "type": "string",
                "secret": true
            },
            "clientSecret": {
                "type": "string",
                "secret": true
            },
            "password": {
                "type": "string",
                "secret": true
            },
            "serverUrl": {
                "type": "string",
                "description": "Server URL (defaults to https://api.airbyte.com/v1)\n"
            },
            "username": {
                "type": "string",
                "secret": true
            }
        }
    },
    "resources": {
        "airbyte:index/connection:Connection": {
            "properties": {
                "configurations": {
                    "$ref": "#/types/airbyte:index/ConnectionConfigurations:ConnectionConfigurations",
                    "description": "A list of configured stream options for a connection.\n"
                },
                "connectionId": {
                    "type": "string"
                },
                "dataResidency": {
                    "type": "string",
                    "description": "must be one of [\"auto\", \"us\", \"eu\"]; Default: \"auto\"\n"
                },
                "destinationId": {
                    "type": "string",
                    "description": "Requires replacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Optional name of the connection\n"
                },
                "namespaceDefinition": {
                    "type": "string",
                    "description": "Define the location where the data will be stored in the destination. must be one of [\"source\", \"destination\",\n\"custom_format\"]; Default: \"destination\"\n"
                },
                "namespaceFormat": {
                    "type": "string",
                    "description": "Used when namespaceDefinition is 'custom_format'. If blank then behaves like namespaceDefinition = 'destination'. If\n\"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'. Default: null\n"
                },
                "nonBreakingSchemaUpdatesBehavior": {
                    "type": "string",
                    "description": "Set how Airbyte handles syncs when it detects a non-breaking schema change in the source. must be one of [\"ignore\",\n\"disable_connection\", \"propagate_columns\", \"propagate_fully\"]; Default: \"ignore\"\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix that will be prepended to the name of each stream when it is written to the destination (ex. “airbyte_”\ncauses “projects” =\u003e “airbyte_projects”).\n"
                },
                "schedule": {
                    "$ref": "#/types/airbyte:index/ConnectionSchedule:ConnectionSchedule",
                    "description": "schedule for when the the connection should run, per the schedule type\n"
                },
                "sourceId": {
                    "type": "string",
                    "description": "Requires replacement if changed.\n"
                },
                "status": {
                    "type": "string",
                    "description": "must be one of [\"active\", \"inactive\", \"deprecated\"]\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configurations",
                "connectionId",
                "dataResidency",
                "destinationId",
                "name",
                "namespaceDefinition",
                "namespaceFormat",
                "nonBreakingSchemaUpdatesBehavior",
                "prefix",
                "schedule",
                "sourceId",
                "status",
                "workspaceId"
            ],
            "inputProperties": {
                "configurations": {
                    "$ref": "#/types/airbyte:index/ConnectionConfigurations:ConnectionConfigurations",
                    "description": "A list of configured stream options for a connection.\n"
                },
                "dataResidency": {
                    "type": "string",
                    "description": "must be one of [\"auto\", \"us\", \"eu\"]; Default: \"auto\"\n"
                },
                "destinationId": {
                    "type": "string",
                    "description": "Requires replacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Optional name of the connection\n"
                },
                "namespaceDefinition": {
                    "type": "string",
                    "description": "Define the location where the data will be stored in the destination. must be one of [\"source\", \"destination\",\n\"custom_format\"]; Default: \"destination\"\n"
                },
                "namespaceFormat": {
                    "type": "string",
                    "description": "Used when namespaceDefinition is 'custom_format'. If blank then behaves like namespaceDefinition = 'destination'. If\n\"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'. Default: null\n"
                },
                "nonBreakingSchemaUpdatesBehavior": {
                    "type": "string",
                    "description": "Set how Airbyte handles syncs when it detects a non-breaking schema change in the source. must be one of [\"ignore\",\n\"disable_connection\", \"propagate_columns\", \"propagate_fully\"]; Default: \"ignore\"\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix that will be prepended to the name of each stream when it is written to the destination (ex. “airbyte_”\ncauses “projects” =\u003e “airbyte_projects”).\n"
                },
                "schedule": {
                    "$ref": "#/types/airbyte:index/ConnectionSchedule:ConnectionSchedule",
                    "description": "schedule for when the the connection should run, per the schedule type\n"
                },
                "sourceId": {
                    "type": "string",
                    "description": "Requires replacement if changed.\n"
                },
                "status": {
                    "type": "string",
                    "description": "must be one of [\"active\", \"inactive\", \"deprecated\"]\n"
                }
            },
            "requiredInputs": [
                "destinationId",
                "sourceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Connection resources.\n",
                "properties": {
                    "configurations": {
                        "$ref": "#/types/airbyte:index/ConnectionConfigurations:ConnectionConfigurations",
                        "description": "A list of configured stream options for a connection.\n"
                    },
                    "connectionId": {
                        "type": "string"
                    },
                    "dataResidency": {
                        "type": "string",
                        "description": "must be one of [\"auto\", \"us\", \"eu\"]; Default: \"auto\"\n"
                    },
                    "destinationId": {
                        "type": "string",
                        "description": "Requires replacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Optional name of the connection\n"
                    },
                    "namespaceDefinition": {
                        "type": "string",
                        "description": "Define the location where the data will be stored in the destination. must be one of [\"source\", \"destination\",\n\"custom_format\"]; Default: \"destination\"\n"
                    },
                    "namespaceFormat": {
                        "type": "string",
                        "description": "Used when namespaceDefinition is 'custom_format'. If blank then behaves like namespaceDefinition = 'destination'. If\n\"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'. Default: null\n"
                    },
                    "nonBreakingSchemaUpdatesBehavior": {
                        "type": "string",
                        "description": "Set how Airbyte handles syncs when it detects a non-breaking schema change in the source. must be one of [\"ignore\",\n\"disable_connection\", \"propagate_columns\", \"propagate_fully\"]; Default: \"ignore\"\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "Prefix that will be prepended to the name of each stream when it is written to the destination (ex. “airbyte_”\ncauses “projects” =\u003e “airbyte_projects”).\n"
                    },
                    "schedule": {
                        "$ref": "#/types/airbyte:index/ConnectionSchedule:ConnectionSchedule",
                        "description": "schedule for when the the connection should run, per the schedule type\n"
                    },
                    "sourceId": {
                        "type": "string",
                        "description": "Requires replacement if changed.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "must be one of [\"active\", \"inactive\", \"deprecated\"]\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationAstra:DestinationAstra": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationAstraConfiguration:DestinationAstraConfiguration",
                    "description": "The configuration model for the Vector DB based destinations. This model is used to generate the UI for the destination\nconfiguration, as well as to provide type safety for the configuration passed to the destination. The configuration\nmodel is composed of four parts: * Processing configuration * Embedding configuration * Indexing configuration *\nAdvanced configuration Processing, embedding and advanced configuration are provided by this base class, while the\nindexing configuration is provided by the destination connector in the sub class.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationAstraConfiguration:DestinationAstraConfiguration",
                    "description": "The configuration model for the Vector DB based destinations. This model is used to generate the UI for the destination\nconfiguration, as well as to provide type safety for the configuration passed to the destination. The configuration\nmodel is composed of four parts: * Processing configuration * Embedding configuration * Indexing configuration *\nAdvanced configuration Processing, embedding and advanced configuration are provided by this base class, while the\nindexing configuration is provided by the destination connector in the sub class.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationAstra resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationAstraConfiguration:DestinationAstraConfiguration",
                        "description": "The configuration model for the Vector DB based destinations. This model is used to generate the UI for the destination\nconfiguration, as well as to provide type safety for the configuration passed to the destination. The configuration\nmodel is composed of four parts: * Processing configuration * Embedding configuration * Indexing configuration *\nAdvanced configuration Processing, embedding and advanced configuration are provided by this base class, while the\nindexing configuration is provided by the destination connector in the sub class.\n"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationAwsDatalake:DestinationAwsDatalake": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationAwsDatalakeConfiguration:DestinationAwsDatalakeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationAwsDatalakeConfiguration:DestinationAwsDatalakeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationAwsDatalake resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationAwsDatalakeConfiguration:DestinationAwsDatalakeConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationAzureBlobStorage:DestinationAzureBlobStorage": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationAzureBlobStorageConfiguration:DestinationAzureBlobStorageConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationAzureBlobStorageConfiguration:DestinationAzureBlobStorageConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationAzureBlobStorage resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationAzureBlobStorageConfiguration:DestinationAzureBlobStorageConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationBigquery:DestinationBigquery": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryConfiguration:DestinationBigqueryConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryConfiguration:DestinationBigqueryConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationBigquery resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationBigqueryConfiguration:DestinationBigqueryConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationClickhouse:DestinationClickhouse": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationClickhouseConfiguration:DestinationClickhouseConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationClickhouseConfiguration:DestinationClickhouseConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationClickhouse resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationClickhouseConfiguration:DestinationClickhouseConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationConvex:DestinationConvex": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationConvexConfiguration:DestinationConvexConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationConvexConfiguration:DestinationConvexConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationConvex resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationConvexConfiguration:DestinationConvexConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationCustom:DestinationCustom": {
            "properties": {
                "configuration": {
                    "type": "string",
                    "description": "The values required to configure the destination. Parsed as JSON.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "type": "string",
                    "description": "The values required to configure the destination. Parsed as JSON.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationCustom resources.\n",
                "properties": {
                    "configuration": {
                        "type": "string",
                        "description": "The values required to configure the destination. Parsed as JSON.\n"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationDatabricks:DestinationDatabricks": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationDatabricksConfiguration:DestinationDatabricksConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationDatabricksConfiguration:DestinationDatabricksConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationDatabricks resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationDatabricksConfiguration:DestinationDatabricksConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationDevNull:DestinationDevNull": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationDevNullConfiguration:DestinationDevNullConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationDevNullConfiguration:DestinationDevNullConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationDevNull resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationDevNullConfiguration:DestinationDevNullConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationDuckdb:DestinationDuckdb": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationDuckdbConfiguration:DestinationDuckdbConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationDuckdbConfiguration:DestinationDuckdbConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationDuckdb resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationDuckdbConfiguration:DestinationDuckdbConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationDynamodb:DestinationDynamodb": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationDynamodbConfiguration:DestinationDynamodbConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationDynamodbConfiguration:DestinationDynamodbConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationDynamodb resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationDynamodbConfiguration:DestinationDynamodbConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationElasticsearch:DestinationElasticsearch": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationElasticsearchConfiguration:DestinationElasticsearchConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationElasticsearchConfiguration:DestinationElasticsearchConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationElasticsearch resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationElasticsearchConfiguration:DestinationElasticsearchConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationFirestore:DestinationFirestore": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationFirestoreConfiguration:DestinationFirestoreConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationFirestoreConfiguration:DestinationFirestoreConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationFirestore resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationFirestoreConfiguration:DestinationFirestoreConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationGcs:DestinationGcs": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfiguration:DestinationGcsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfiguration:DestinationGcsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationGcs resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationGcsConfiguration:DestinationGcsConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationGoogleSheets:DestinationGoogleSheets": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationGoogleSheetsConfiguration:DestinationGoogleSheetsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationGoogleSheetsConfiguration:DestinationGoogleSheetsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationGoogleSheets resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationGoogleSheetsConfiguration:DestinationGoogleSheetsConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationLangchain:DestinationLangchain": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfiguration:DestinationLangchainConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfiguration:DestinationLangchainConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationLangchain resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationLangchainConfiguration:DestinationLangchainConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationMilvus:DestinationMilvus": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationMilvusConfiguration:DestinationMilvusConfiguration",
                    "description": "The configuration model for the Vector DB based destinations. This model is used to generate the UI for the destination\nconfiguration, as well as to provide type safety for the configuration passed to the destination. The configuration\nmodel is composed of four parts: * Processing configuration * Embedding configuration * Indexing configuration *\nAdvanced configuration Processing, embedding and advanced configuration are provided by this base class, while the\nindexing configuration is provided by the destination connector in the sub class.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationMilvusConfiguration:DestinationMilvusConfiguration",
                    "description": "The configuration model for the Vector DB based destinations. This model is used to generate the UI for the destination\nconfiguration, as well as to provide type safety for the configuration passed to the destination. The configuration\nmodel is composed of four parts: * Processing configuration * Embedding configuration * Indexing configuration *\nAdvanced configuration Processing, embedding and advanced configuration are provided by this base class, while the\nindexing configuration is provided by the destination connector in the sub class.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationMilvus resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationMilvusConfiguration:DestinationMilvusConfiguration",
                        "description": "The configuration model for the Vector DB based destinations. This model is used to generate the UI for the destination\nconfiguration, as well as to provide type safety for the configuration passed to the destination. The configuration\nmodel is composed of four parts: * Processing configuration * Embedding configuration * Indexing configuration *\nAdvanced configuration Processing, embedding and advanced configuration are provided by this base class, while the\nindexing configuration is provided by the destination connector in the sub class.\n"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationMongodb:DestinationMongodb": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfiguration:DestinationMongodbConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfiguration:DestinationMongodbConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationMongodb resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationMongodbConfiguration:DestinationMongodbConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationMssql:DestinationMssql": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationMssqlConfiguration:DestinationMssqlConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationMssqlConfiguration:DestinationMssqlConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationMssql resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationMssqlConfiguration:DestinationMssqlConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationMysql:DestinationMysql": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationMysqlConfiguration:DestinationMysqlConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationMysqlConfiguration:DestinationMysqlConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationMysql resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationMysqlConfiguration:DestinationMysqlConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationOracle:DestinationOracle": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationOracleConfiguration:DestinationOracleConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationOracleConfiguration:DestinationOracleConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationOracle resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationOracleConfiguration:DestinationOracleConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationPinecone:DestinationPinecone": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationPineconeConfiguration:DestinationPineconeConfiguration",
                    "description": "The configuration model for the Vector DB based destinations. This model is used to generate the UI for the destination\nconfiguration, as well as to provide type safety for the configuration passed to the destination. The configuration\nmodel is composed of four parts: * Processing configuration * Embedding configuration * Indexing configuration *\nAdvanced configuration Processing, embedding and advanced configuration are provided by this base class, while the\nindexing configuration is provided by the destination connector in the sub class.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationPineconeConfiguration:DestinationPineconeConfiguration",
                    "description": "The configuration model for the Vector DB based destinations. This model is used to generate the UI for the destination\nconfiguration, as well as to provide type safety for the configuration passed to the destination. The configuration\nmodel is composed of four parts: * Processing configuration * Embedding configuration * Indexing configuration *\nAdvanced configuration Processing, embedding and advanced configuration are provided by this base class, while the\nindexing configuration is provided by the destination connector in the sub class.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationPinecone resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationPineconeConfiguration:DestinationPineconeConfiguration",
                        "description": "The configuration model for the Vector DB based destinations. This model is used to generate the UI for the destination\nconfiguration, as well as to provide type safety for the configuration passed to the destination. The configuration\nmodel is composed of four parts: * Processing configuration * Embedding configuration * Indexing configuration *\nAdvanced configuration Processing, embedding and advanced configuration are provided by this base class, while the\nindexing configuration is provided by the destination connector in the sub class.\n"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationPostgres:DestinationPostgres": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfiguration:DestinationPostgresConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfiguration:DestinationPostgresConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationPostgres resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationPostgresConfiguration:DestinationPostgresConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationPubsub:DestinationPubsub": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationPubsubConfiguration:DestinationPubsubConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationPubsubConfiguration:DestinationPubsubConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationPubsub resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationPubsubConfiguration:DestinationPubsubConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationQdrant:DestinationQdrant": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationQdrantConfiguration:DestinationQdrantConfiguration",
                    "description": "The configuration model for the Vector DB based destinations. This model is used to generate the UI for the destination\nconfiguration, as well as to provide type safety for the configuration passed to the destination. The configuration\nmodel is composed of four parts: * Processing configuration * Embedding configuration * Indexing configuration *\nAdvanced configuration Processing, embedding and advanced configuration are provided by this base class, while the\nindexing configuration is provided by the destination connector in the sub class.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationQdrantConfiguration:DestinationQdrantConfiguration",
                    "description": "The configuration model for the Vector DB based destinations. This model is used to generate the UI for the destination\nconfiguration, as well as to provide type safety for the configuration passed to the destination. The configuration\nmodel is composed of four parts: * Processing configuration * Embedding configuration * Indexing configuration *\nAdvanced configuration Processing, embedding and advanced configuration are provided by this base class, while the\nindexing configuration is provided by the destination connector in the sub class.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationQdrant resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationQdrantConfiguration:DestinationQdrantConfiguration",
                        "description": "The configuration model for the Vector DB based destinations. This model is used to generate the UI for the destination\nconfiguration, as well as to provide type safety for the configuration passed to the destination. The configuration\nmodel is composed of four parts: * Processing configuration * Embedding configuration * Indexing configuration *\nAdvanced configuration Processing, embedding and advanced configuration are provided by this base class, while the\nindexing configuration is provided by the destination connector in the sub class.\n"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationRedis:DestinationRedis": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfiguration:DestinationRedisConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfiguration:DestinationRedisConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationRedis resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationRedisConfiguration:DestinationRedisConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationRedshift:DestinationRedshift": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfiguration:DestinationRedshiftConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfiguration:DestinationRedshiftConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationRedshift resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationRedshiftConfiguration:DestinationRedshiftConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationS3:DestinationS3": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationS3Configuration:DestinationS3Configuration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationS3Configuration:DestinationS3Configuration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationS3 resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationS3Configuration:DestinationS3Configuration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationS3Glue:DestinationS3Glue": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationS3GlueConfiguration:DestinationS3GlueConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationS3GlueConfiguration:DestinationS3GlueConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationS3Glue resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationS3GlueConfiguration:DestinationS3GlueConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationSftpJson:DestinationSftpJson": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationSftpJsonConfiguration:DestinationSftpJsonConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationSftpJsonConfiguration:DestinationSftpJsonConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationSftpJson resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationSftpJsonConfiguration:DestinationSftpJsonConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationSnowflake:DestinationSnowflake": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeConfiguration:DestinationSnowflakeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeConfiguration:DestinationSnowflakeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationSnowflake resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationSnowflakeConfiguration:DestinationSnowflakeConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationSnowflakeCortex:DestinationSnowflakeCortex": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeCortexConfiguration:DestinationSnowflakeCortexConfiguration",
                    "description": "The configuration model for the Vector DB based destinations. This model is used to generate the UI for the destination\nconfiguration, as well as to provide type safety for the configuration passed to the destination. The configuration\nmodel is composed of four parts: * Processing configuration * Embedding configuration * Indexing configuration *\nAdvanced configuration Processing, embedding and advanced configuration are provided by this base class, while the\nindexing configuration is provided by the destination connector in the sub class.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeCortexConfiguration:DestinationSnowflakeCortexConfiguration",
                    "description": "The configuration model for the Vector DB based destinations. This model is used to generate the UI for the destination\nconfiguration, as well as to provide type safety for the configuration passed to the destination. The configuration\nmodel is composed of four parts: * Processing configuration * Embedding configuration * Indexing configuration *\nAdvanced configuration Processing, embedding and advanced configuration are provided by this base class, while the\nindexing configuration is provided by the destination connector in the sub class.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationSnowflakeCortex resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationSnowflakeCortexConfiguration:DestinationSnowflakeCortexConfiguration",
                        "description": "The configuration model for the Vector DB based destinations. This model is used to generate the UI for the destination\nconfiguration, as well as to provide type safety for the configuration passed to the destination. The configuration\nmodel is composed of four parts: * Processing configuration * Embedding configuration * Indexing configuration *\nAdvanced configuration Processing, embedding and advanced configuration are provided by this base class, while the\nindexing configuration is provided by the destination connector in the sub class.\n"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationTeradata:DestinationTeradata": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationTeradataConfiguration:DestinationTeradataConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationTeradataConfiguration:DestinationTeradataConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationTeradata resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationTeradataConfiguration:DestinationTeradataConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationTypesense:DestinationTypesense": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationTypesenseConfiguration:DestinationTypesenseConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationTypesenseConfiguration:DestinationTypesenseConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationTypesense resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationTypesenseConfiguration:DestinationTypesenseConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationVectara:DestinationVectara": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationVectaraConfiguration:DestinationVectaraConfiguration",
                    "description": "Configuration to connect to the Vectara instance\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationVectaraConfiguration:DestinationVectaraConfiguration",
                    "description": "Configuration to connect to the Vectara instance\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationVectara resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationVectaraConfiguration:DestinationVectaraConfiguration",
                        "description": "Configuration to connect to the Vectara instance\n"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationWeaviate:DestinationWeaviate": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationWeaviateConfiguration:DestinationWeaviateConfiguration",
                    "description": "The configuration model for the Vector DB based destinations. This model is used to generate the UI for the destination\nconfiguration, as well as to provide type safety for the configuration passed to the destination. The configuration\nmodel is composed of four parts: * Processing configuration * Embedding configuration * Indexing configuration *\nAdvanced configuration Processing, embedding and advanced configuration are provided by this base class, while the\nindexing configuration is provided by the destination connector in the sub class.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationWeaviateConfiguration:DestinationWeaviateConfiguration",
                    "description": "The configuration model for the Vector DB based destinations. This model is used to generate the UI for the destination\nconfiguration, as well as to provide type safety for the configuration passed to the destination. The configuration\nmodel is composed of four parts: * Processing configuration * Embedding configuration * Indexing configuration *\nAdvanced configuration Processing, embedding and advanced configuration are provided by this base class, while the\nindexing configuration is provided by the destination connector in the sub class.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationWeaviate resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationWeaviateConfiguration:DestinationWeaviateConfiguration",
                        "description": "The configuration model for the Vector DB based destinations. This model is used to generate the UI for the destination\nconfiguration, as well as to provide type safety for the configuration passed to the destination. The configuration\nmodel is composed of four parts: * Processing configuration * Embedding configuration * Indexing configuration *\nAdvanced configuration Processing, embedding and advanced configuration are provided by this base class, while the\nindexing configuration is provided by the destination connector in the sub class.\n"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationYellowbrick:DestinationYellowbrick": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationYellowbrickConfiguration:DestinationYellowbrickConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationYellowbrickConfiguration:DestinationYellowbrickConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the destination e.g. dev-mysql-instance.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationYellowbrick resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationYellowbrickConfiguration:DestinationYellowbrickConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.destinationType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the destination e.g. dev-mysql-instance.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/permission:Permission": {
            "properties": {
                "organizationId": {
                    "type": "string",
                    "description": "Requires replacement if changed.\n"
                },
                "permissionId": {
                    "type": "string"
                },
                "permissionType": {
                    "type": "string",
                    "description": "Describes what actions/endpoints the permission entitles to. must be one of [\"instance_admin\", \"organization_admin\",\n\"organization_editor\", \"organization_reader\", \"organization_member\", \"workspace_owner\", \"workspace_admin\",\n\"workspace_editor\", \"workspace_reader\"]\n"
                },
                "userId": {
                    "type": "string",
                    "description": "Internal Airbyte user ID. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string",
                    "description": "Requires replacement if changed.\n"
                }
            },
            "required": [
                "organizationId",
                "permissionId",
                "permissionType",
                "userId",
                "workspaceId"
            ],
            "inputProperties": {
                "organizationId": {
                    "type": "string",
                    "description": "Requires replacement if changed.\n"
                },
                "permissionType": {
                    "type": "string",
                    "description": "Describes what actions/endpoints the permission entitles to. must be one of [\"instance_admin\", \"organization_admin\",\n\"organization_editor\", \"organization_reader\", \"organization_member\", \"workspace_owner\", \"workspace_admin\",\n\"workspace_editor\", \"workspace_reader\"]\n"
                },
                "userId": {
                    "type": "string",
                    "description": "Internal Airbyte user ID. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string",
                    "description": "Requires replacement if changed.\n"
                }
            },
            "requiredInputs": [
                "permissionType",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Permission resources.\n",
                "properties": {
                    "organizationId": {
                        "type": "string",
                        "description": "Requires replacement if changed.\n"
                    },
                    "permissionId": {
                        "type": "string"
                    },
                    "permissionType": {
                        "type": "string",
                        "description": "Describes what actions/endpoints the permission entitles to. must be one of [\"instance_admin\", \"organization_admin\",\n\"organization_editor\", \"organization_reader\", \"organization_member\", \"workspace_owner\", \"workspace_admin\",\n\"workspace_editor\", \"workspace_reader\"]\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "Internal Airbyte user ID. Requires replacement if changed.\n"
                    },
                    "workspaceId": {
                        "type": "string",
                        "description": "Requires replacement if changed.\n"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAha:SourceAha": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAhaConfiguration:SourceAhaConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAhaConfiguration:SourceAhaConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAha resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAhaConfiguration:SourceAhaConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAircall:SourceAircall": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAircallConfiguration:SourceAircallConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAircallConfiguration:SourceAircallConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAircall resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAircallConfiguration:SourceAircallConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAirtable:SourceAirtable": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAirtableConfiguration:SourceAirtableConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAirtableConfiguration:SourceAirtableConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAirtable resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAirtableConfiguration:SourceAirtableConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAmazonAds:SourceAmazonAds": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAmazonAdsConfiguration:SourceAmazonAdsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAmazonAdsConfiguration:SourceAmazonAdsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAmazonAds resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAmazonAdsConfiguration:SourceAmazonAdsConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAmazonSellerPartner:SourceAmazonSellerPartner": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAmazonSellerPartnerConfiguration:SourceAmazonSellerPartnerConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAmazonSellerPartnerConfiguration:SourceAmazonSellerPartnerConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAmazonSellerPartner resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAmazonSellerPartnerConfiguration:SourceAmazonSellerPartnerConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAmazonSqs:SourceAmazonSqs": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAmazonSqsConfiguration:SourceAmazonSqsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAmazonSqsConfiguration:SourceAmazonSqsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAmazonSqs resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAmazonSqsConfiguration:SourceAmazonSqsConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAmplitude:SourceAmplitude": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAmplitudeConfiguration:SourceAmplitudeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAmplitudeConfiguration:SourceAmplitudeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAmplitude resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAmplitudeConfiguration:SourceAmplitudeConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceApifyDataset:SourceApifyDataset": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceApifyDatasetConfiguration:SourceApifyDatasetConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceApifyDatasetConfiguration:SourceApifyDatasetConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceApifyDataset resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceApifyDatasetConfiguration:SourceApifyDatasetConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAppfollow:SourceAppfollow": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAppfollowConfiguration:SourceAppfollowConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAppfollowConfiguration:SourceAppfollowConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAppfollow resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAppfollowConfiguration:SourceAppfollowConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAsana:SourceAsana": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAsanaConfiguration:SourceAsanaConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAsanaConfiguration:SourceAsanaConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAsana resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAsanaConfiguration:SourceAsanaConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAuth0:SourceAuth0": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAuth0Configuration:SourceAuth0Configuration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAuth0Configuration:SourceAuth0Configuration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAuth0 resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAuth0Configuration:SourceAuth0Configuration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAwsCloudtrail:SourceAwsCloudtrail": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAwsCloudtrailConfiguration:SourceAwsCloudtrailConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAwsCloudtrailConfiguration:SourceAwsCloudtrailConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAwsCloudtrail resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAwsCloudtrailConfiguration:SourceAwsCloudtrailConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAzureBlobStorage:SourceAzureBlobStorage": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfiguration:SourceAzureBlobStorageConfiguration",
                    "description": "NOTE: When this Spec is changed, legacy_config_transformer.py must also be modified to uptake the changes because it is\nresponsible for converting legacy Azure Blob Storage v0 configs into v1 configs using the File-Based CDK.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfiguration:SourceAzureBlobStorageConfiguration",
                    "description": "NOTE: When this Spec is changed, legacy_config_transformer.py must also be modified to uptake the changes because it is\nresponsible for converting legacy Azure Blob Storage v0 configs into v1 configs using the File-Based CDK.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAzureBlobStorage resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfiguration:SourceAzureBlobStorageConfiguration",
                        "description": "NOTE: When this Spec is changed, legacy_config_transformer.py must also be modified to uptake the changes because it is\nresponsible for converting legacy Azure Blob Storage v0 configs into v1 configs using the File-Based CDK.\n"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAzureTable:SourceAzureTable": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAzureTableConfiguration:SourceAzureTableConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAzureTableConfiguration:SourceAzureTableConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAzureTable resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAzureTableConfiguration:SourceAzureTableConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceBambooHr:SourceBambooHr": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBambooHrConfiguration:SourceBambooHrConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBambooHrConfiguration:SourceBambooHrConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceBambooHr resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceBambooHrConfiguration:SourceBambooHrConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceBigquery:SourceBigquery": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBigqueryConfiguration:SourceBigqueryConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBigqueryConfiguration:SourceBigqueryConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceBigquery resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceBigqueryConfiguration:SourceBigqueryConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceBingAds:SourceBingAds": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBingAdsConfiguration:SourceBingAdsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBingAdsConfiguration:SourceBingAdsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceBingAds resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceBingAdsConfiguration:SourceBingAdsConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceBraintree:SourceBraintree": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBraintreeConfiguration:SourceBraintreeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBraintreeConfiguration:SourceBraintreeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceBraintree resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceBraintreeConfiguration:SourceBraintreeConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceBraze:SourceBraze": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBrazeConfiguration:SourceBrazeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBrazeConfiguration:SourceBrazeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceBraze resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceBrazeConfiguration:SourceBrazeConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceCart:SourceCart": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceCartConfiguration:SourceCartConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceCartConfiguration:SourceCartConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceCart resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceCartConfiguration:SourceCartConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceChargebee:SourceChargebee": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceChargebeeConfiguration:SourceChargebeeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceChargebeeConfiguration:SourceChargebeeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceChargebee resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceChargebeeConfiguration:SourceChargebeeConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceChartmogul:SourceChartmogul": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceChartmogulConfiguration:SourceChartmogulConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceChartmogulConfiguration:SourceChartmogulConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceChartmogul resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceChartmogulConfiguration:SourceChartmogulConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceClickhouse:SourceClickhouse": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceClickhouseConfiguration:SourceClickhouseConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceClickhouseConfiguration:SourceClickhouseConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceClickhouse resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceClickhouseConfiguration:SourceClickhouseConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceClickupApi:SourceClickupApi": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceClickupApiConfiguration:SourceClickupApiConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceClickupApiConfiguration:SourceClickupApiConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceClickupApi resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceClickupApiConfiguration:SourceClickupApiConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceClockify:SourceClockify": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceClockifyConfiguration:SourceClockifyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceClockifyConfiguration:SourceClockifyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceClockify resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceClockifyConfiguration:SourceClockifyConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceCloseCom:SourceCloseCom": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceCloseComConfiguration:SourceCloseComConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceCloseComConfiguration:SourceCloseComConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceCloseCom resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceCloseComConfiguration:SourceCloseComConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceCoda:SourceCoda": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceCodaConfiguration:SourceCodaConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceCodaConfiguration:SourceCodaConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceCoda resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceCodaConfiguration:SourceCodaConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceCoinApi:SourceCoinApi": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceCoinApiConfiguration:SourceCoinApiConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceCoinApiConfiguration:SourceCoinApiConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceCoinApi resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceCoinApiConfiguration:SourceCoinApiConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceCoinmarketcap:SourceCoinmarketcap": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceCoinmarketcapConfiguration:SourceCoinmarketcapConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceCoinmarketcapConfiguration:SourceCoinmarketcapConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceCoinmarketcap resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceCoinmarketcapConfiguration:SourceCoinmarketcapConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceConfigcat:SourceConfigcat": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceConfigcatConfiguration:SourceConfigcatConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceConfigcatConfiguration:SourceConfigcatConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceConfigcat resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceConfigcatConfiguration:SourceConfigcatConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceConfluence:SourceConfluence": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceConfluenceConfiguration:SourceConfluenceConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceConfluenceConfiguration:SourceConfluenceConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceConfluence resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceConfluenceConfiguration:SourceConfluenceConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceConvex:SourceConvex": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceConvexConfiguration:SourceConvexConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceConvexConfiguration:SourceConvexConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceConvex resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceConvexConfiguration:SourceConvexConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceCustom:SourceCustom": {
            "properties": {
                "configuration": {
                    "type": "string",
                    "description": "The values required to configure the source. Parsed as JSON.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "type": "string",
                    "description": "The values required to configure the source. Parsed as JSON.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceCustom resources.\n",
                "properties": {
                    "configuration": {
                        "type": "string",
                        "description": "The values required to configure the source. Parsed as JSON.\n"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceDatascope:SourceDatascope": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDatascopeConfiguration:SourceDatascopeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDatascopeConfiguration:SourceDatascopeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceDatascope resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceDatascopeConfiguration:SourceDatascopeConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceDelighted:SourceDelighted": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDelightedConfiguration:SourceDelightedConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDelightedConfiguration:SourceDelightedConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceDelighted resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceDelightedConfiguration:SourceDelightedConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceDixa:SourceDixa": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDixaConfiguration:SourceDixaConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDixaConfiguration:SourceDixaConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceDixa resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceDixaConfiguration:SourceDixaConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceDockerhub:SourceDockerhub": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDockerhubConfiguration:SourceDockerhubConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDockerhubConfiguration:SourceDockerhubConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceDockerhub resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceDockerhubConfiguration:SourceDockerhubConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceDremio:SourceDremio": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDremioConfiguration:SourceDremioConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDremioConfiguration:SourceDremioConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceDremio resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceDremioConfiguration:SourceDremioConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceDynamodb:SourceDynamodb": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDynamodbConfiguration:SourceDynamodbConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDynamodbConfiguration:SourceDynamodbConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceDynamodb resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceDynamodbConfiguration:SourceDynamodbConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceEmailoctopus:SourceEmailoctopus": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceEmailoctopusConfiguration:SourceEmailoctopusConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceEmailoctopusConfiguration:SourceEmailoctopusConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceEmailoctopus resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceEmailoctopusConfiguration:SourceEmailoctopusConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceExchangeRates:SourceExchangeRates": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceExchangeRatesConfiguration:SourceExchangeRatesConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceExchangeRatesConfiguration:SourceExchangeRatesConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceExchangeRates resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceExchangeRatesConfiguration:SourceExchangeRatesConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceFacebookMarketing:SourceFacebookMarketing": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFacebookMarketingConfiguration:SourceFacebookMarketingConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFacebookMarketingConfiguration:SourceFacebookMarketingConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceFacebookMarketing resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceFacebookMarketingConfiguration:SourceFacebookMarketingConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceFaker:SourceFaker": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFakerConfiguration:SourceFakerConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFakerConfiguration:SourceFakerConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceFaker resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceFakerConfiguration:SourceFakerConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceFauna:SourceFauna": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFaunaConfiguration:SourceFaunaConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFaunaConfiguration:SourceFaunaConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceFauna resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceFaunaConfiguration:SourceFaunaConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceFile:SourceFile": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFileConfiguration:SourceFileConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFileConfiguration:SourceFileConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceFile resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceFileConfiguration:SourceFileConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceFirebolt:SourceFirebolt": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFireboltConfiguration:SourceFireboltConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFireboltConfiguration:SourceFireboltConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceFirebolt resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceFireboltConfiguration:SourceFireboltConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceFreshcaller:SourceFreshcaller": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFreshcallerConfiguration:SourceFreshcallerConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFreshcallerConfiguration:SourceFreshcallerConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceFreshcaller resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceFreshcallerConfiguration:SourceFreshcallerConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceFreshdesk:SourceFreshdesk": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFreshdeskConfiguration:SourceFreshdeskConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFreshdeskConfiguration:SourceFreshdeskConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceFreshdesk resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceFreshdeskConfiguration:SourceFreshdeskConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceFreshsales:SourceFreshsales": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFreshsalesConfiguration:SourceFreshsalesConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFreshsalesConfiguration:SourceFreshsalesConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceFreshsales resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceFreshsalesConfiguration:SourceFreshsalesConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGainsightPx:SourceGainsightPx": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGainsightPxConfiguration:SourceGainsightPxConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGainsightPxConfiguration:SourceGainsightPxConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGainsightPx resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGainsightPxConfiguration:SourceGainsightPxConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGcs:SourceGcs": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGcsConfiguration:SourceGcsConfiguration",
                    "description": "NOTE: When this Spec is changed, legacy_config_transformer.py must also be modified to uptake the changes because it is\nresponsible for converting legacy GCS configs into file based configs using the File-Based CDK.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGcsConfiguration:SourceGcsConfiguration",
                    "description": "NOTE: When this Spec is changed, legacy_config_transformer.py must also be modified to uptake the changes because it is\nresponsible for converting legacy GCS configs into file based configs using the File-Based CDK.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGcs resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGcsConfiguration:SourceGcsConfiguration",
                        "description": "NOTE: When this Spec is changed, legacy_config_transformer.py must also be modified to uptake the changes because it is\nresponsible for converting legacy GCS configs into file based configs using the File-Based CDK.\n"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGetlago:SourceGetlago": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGetlagoConfiguration:SourceGetlagoConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGetlagoConfiguration:SourceGetlagoConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGetlago resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGetlagoConfiguration:SourceGetlagoConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGithub:SourceGithub": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGithubConfiguration:SourceGithubConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGithubConfiguration:SourceGithubConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGithub resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGithubConfiguration:SourceGithubConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGitlab:SourceGitlab": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGitlabConfiguration:SourceGitlabConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGitlabConfiguration:SourceGitlabConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGitlab resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGitlabConfiguration:SourceGitlabConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGlassfrog:SourceGlassfrog": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGlassfrogConfiguration:SourceGlassfrogConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGlassfrogConfiguration:SourceGlassfrogConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGlassfrog resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGlassfrogConfiguration:SourceGlassfrogConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGnews:SourceGnews": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGnewsConfiguration:SourceGnewsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGnewsConfiguration:SourceGnewsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGnews resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGnewsConfiguration:SourceGnewsConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGoogleAds:SourceGoogleAds": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAdsConfiguration:SourceGoogleAdsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAdsConfiguration:SourceGoogleAdsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGoogleAds resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGoogleAdsConfiguration:SourceGoogleAdsConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGoogleAnalyticsDataApi:SourceGoogleAnalyticsDataApi": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfiguration:SourceGoogleAnalyticsDataApiConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfiguration:SourceGoogleAnalyticsDataApiConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGoogleAnalyticsDataApi resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfiguration:SourceGoogleAnalyticsDataApiConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGoogleAnalyticsV4ServiceAccountOnly:SourceGoogleAnalyticsV4ServiceAccountOnly": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsV4ServiceAccountOnlyConfiguration:SourceGoogleAnalyticsV4ServiceAccountOnlyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsV4ServiceAccountOnlyConfiguration:SourceGoogleAnalyticsV4ServiceAccountOnlyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGoogleAnalyticsV4ServiceAccountOnly resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsV4ServiceAccountOnlyConfiguration:SourceGoogleAnalyticsV4ServiceAccountOnlyConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGoogleDirectory:SourceGoogleDirectory": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDirectoryConfiguration:SourceGoogleDirectoryConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDirectoryConfiguration:SourceGoogleDirectoryConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGoogleDirectory resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGoogleDirectoryConfiguration:SourceGoogleDirectoryConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGoogleDrive:SourceGoogleDrive": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDriveConfiguration:SourceGoogleDriveConfiguration",
                    "description": "Used during spec; allows the developer to configure the cloud provider specific options that are needed when users\nconfigure a file-based source.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDriveConfiguration:SourceGoogleDriveConfiguration",
                    "description": "Used during spec; allows the developer to configure the cloud provider specific options that are needed when users\nconfigure a file-based source.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGoogleDrive resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGoogleDriveConfiguration:SourceGoogleDriveConfiguration",
                        "description": "Used during spec; allows the developer to configure the cloud provider specific options that are needed when users\nconfigure a file-based source.\n"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGooglePagespeedInsights:SourceGooglePagespeedInsights": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGooglePagespeedInsightsConfiguration:SourceGooglePagespeedInsightsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGooglePagespeedInsightsConfiguration:SourceGooglePagespeedInsightsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGooglePagespeedInsights resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGooglePagespeedInsightsConfiguration:SourceGooglePagespeedInsightsConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGoogleSearchConsole:SourceGoogleSearchConsole": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSearchConsoleConfiguration:SourceGoogleSearchConsoleConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSearchConsoleConfiguration:SourceGoogleSearchConsoleConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGoogleSearchConsole resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGoogleSearchConsoleConfiguration:SourceGoogleSearchConsoleConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGoogleSheets:SourceGoogleSheets": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSheetsConfiguration:SourceGoogleSheetsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSheetsConfiguration:SourceGoogleSheetsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGoogleSheets resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGoogleSheetsConfiguration:SourceGoogleSheetsConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGoogleWebfonts:SourceGoogleWebfonts": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleWebfontsConfiguration:SourceGoogleWebfontsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleWebfontsConfiguration:SourceGoogleWebfontsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGoogleWebfonts resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGoogleWebfontsConfiguration:SourceGoogleWebfontsConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGreenhouse:SourceGreenhouse": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGreenhouseConfiguration:SourceGreenhouseConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGreenhouseConfiguration:SourceGreenhouseConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGreenhouse resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGreenhouseConfiguration:SourceGreenhouseConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGridly:SourceGridly": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGridlyConfiguration:SourceGridlyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGridlyConfiguration:SourceGridlyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGridly resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGridlyConfiguration:SourceGridlyConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceHarvest:SourceHarvest": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceHarvestConfiguration:SourceHarvestConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceHarvestConfiguration:SourceHarvestConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceHarvest resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceHarvestConfiguration:SourceHarvestConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceHubplanner:SourceHubplanner": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceHubplannerConfiguration:SourceHubplannerConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceHubplannerConfiguration:SourceHubplannerConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceHubplanner resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceHubplannerConfiguration:SourceHubplannerConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceHubspot:SourceHubspot": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceHubspotConfiguration:SourceHubspotConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceHubspotConfiguration:SourceHubspotConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceHubspot resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceHubspotConfiguration:SourceHubspotConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceInsightly:SourceInsightly": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceInsightlyConfiguration:SourceInsightlyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceInsightlyConfiguration:SourceInsightlyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceInsightly resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceInsightlyConfiguration:SourceInsightlyConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceInstagram:SourceInstagram": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceInstagramConfiguration:SourceInstagramConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceInstagramConfiguration:SourceInstagramConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceInstagram resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceInstagramConfiguration:SourceInstagramConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceInstatus:SourceInstatus": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceInstatusConfiguration:SourceInstatusConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceInstatusConfiguration:SourceInstatusConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceInstatus resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceInstatusConfiguration:SourceInstatusConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceIntercom:SourceIntercom": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceIntercomConfiguration:SourceIntercomConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceIntercomConfiguration:SourceIntercomConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceIntercom resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceIntercomConfiguration:SourceIntercomConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceIp2whois:SourceIp2whois": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceIp2whoisConfiguration:SourceIp2whoisConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceIp2whoisConfiguration:SourceIp2whoisConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceIp2whois resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceIp2whoisConfiguration:SourceIp2whoisConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceIterable:SourceIterable": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceIterableConfiguration:SourceIterableConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceIterableConfiguration:SourceIterableConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceIterable resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceIterableConfiguration:SourceIterableConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceJira:SourceJira": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceJiraConfiguration:SourceJiraConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceJiraConfiguration:SourceJiraConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceJira resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceJiraConfiguration:SourceJiraConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceK6Cloud:SourceK6Cloud": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceK6CloudConfiguration:SourceK6CloudConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceK6CloudConfiguration:SourceK6CloudConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceK6Cloud resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceK6CloudConfiguration:SourceK6CloudConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceKlarna:SourceKlarna": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceKlarnaConfiguration:SourceKlarnaConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceKlarnaConfiguration:SourceKlarnaConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceKlarna resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceKlarnaConfiguration:SourceKlarnaConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceKlaviyo:SourceKlaviyo": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceKlaviyoConfiguration:SourceKlaviyoConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceKlaviyoConfiguration:SourceKlaviyoConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceKlaviyo resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceKlaviyoConfiguration:SourceKlaviyoConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceKyve:SourceKyve": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceKyveConfiguration:SourceKyveConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceKyveConfiguration:SourceKyveConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceKyve resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceKyveConfiguration:SourceKyveConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceLaunchdarkly:SourceLaunchdarkly": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLaunchdarklyConfiguration:SourceLaunchdarklyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLaunchdarklyConfiguration:SourceLaunchdarklyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceLaunchdarkly resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceLaunchdarklyConfiguration:SourceLaunchdarklyConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceLemlist:SourceLemlist": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLemlistConfiguration:SourceLemlistConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLemlistConfiguration:SourceLemlistConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceLemlist resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceLemlistConfiguration:SourceLemlistConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceLeverHiring:SourceLeverHiring": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLeverHiringConfiguration:SourceLeverHiringConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLeverHiringConfiguration:SourceLeverHiringConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceLeverHiring resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceLeverHiringConfiguration:SourceLeverHiringConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceLinkedinAds:SourceLinkedinAds": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinAdsConfiguration:SourceLinkedinAdsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinAdsConfiguration:SourceLinkedinAdsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceLinkedinAds resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceLinkedinAdsConfiguration:SourceLinkedinAdsConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceLinkedinPages:SourceLinkedinPages": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinPagesConfiguration:SourceLinkedinPagesConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinPagesConfiguration:SourceLinkedinPagesConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceLinkedinPages resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceLinkedinPagesConfiguration:SourceLinkedinPagesConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceLinnworks:SourceLinnworks": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLinnworksConfiguration:SourceLinnworksConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLinnworksConfiguration:SourceLinnworksConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceLinnworks resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceLinnworksConfiguration:SourceLinnworksConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceLokalise:SourceLokalise": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLokaliseConfiguration:SourceLokaliseConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLokaliseConfiguration:SourceLokaliseConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceLokalise resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceLokaliseConfiguration:SourceLokaliseConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMailchimp:SourceMailchimp": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMailchimpConfiguration:SourceMailchimpConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMailchimpConfiguration:SourceMailchimpConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMailchimp resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMailchimpConfiguration:SourceMailchimpConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMailgun:SourceMailgun": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMailgunConfiguration:SourceMailgunConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMailgunConfiguration:SourceMailgunConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMailgun resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMailgunConfiguration:SourceMailgunConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMailjetSms:SourceMailjetSms": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMailjetSmsConfiguration:SourceMailjetSmsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMailjetSmsConfiguration:SourceMailjetSmsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMailjetSms resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMailjetSmsConfiguration:SourceMailjetSmsConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMarketo:SourceMarketo": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMarketoConfiguration:SourceMarketoConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMarketoConfiguration:SourceMarketoConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMarketo resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMarketoConfiguration:SourceMarketoConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMetabase:SourceMetabase": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMetabaseConfiguration:SourceMetabaseConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMetabaseConfiguration:SourceMetabaseConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMetabase resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMetabaseConfiguration:SourceMetabaseConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMicrosoftOnedrive:SourceMicrosoftOnedrive": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftOnedriveConfiguration:SourceMicrosoftOnedriveConfiguration",
                    "description": "SourceMicrosoftOneDriveSpec class for Microsoft OneDrive Source Specification. This class combines the authentication\ndetails with additional configuration for the OneDrive API.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftOnedriveConfiguration:SourceMicrosoftOnedriveConfiguration",
                    "description": "SourceMicrosoftOneDriveSpec class for Microsoft OneDrive Source Specification. This class combines the authentication\ndetails with additional configuration for the OneDrive API.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMicrosoftOnedrive resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMicrosoftOnedriveConfiguration:SourceMicrosoftOnedriveConfiguration",
                        "description": "SourceMicrosoftOneDriveSpec class for Microsoft OneDrive Source Specification. This class combines the authentication\ndetails with additional configuration for the OneDrive API.\n"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMicrosoftSharepoint:SourceMicrosoftSharepoint": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftSharepointConfiguration:SourceMicrosoftSharepointConfiguration",
                    "description": "SourceMicrosoftSharePointSpec class for Microsoft SharePoint Source Specification. This class combines the\nauthentication details with additional configuration for the SharePoint API.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftSharepointConfiguration:SourceMicrosoftSharepointConfiguration",
                    "description": "SourceMicrosoftSharePointSpec class for Microsoft SharePoint Source Specification. This class combines the\nauthentication details with additional configuration for the SharePoint API.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMicrosoftSharepoint resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMicrosoftSharepointConfiguration:SourceMicrosoftSharepointConfiguration",
                        "description": "SourceMicrosoftSharePointSpec class for Microsoft SharePoint Source Specification. This class combines the\nauthentication details with additional configuration for the SharePoint API.\n"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMicrosoftTeams:SourceMicrosoftTeams": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftTeamsConfiguration:SourceMicrosoftTeamsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftTeamsConfiguration:SourceMicrosoftTeamsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMicrosoftTeams resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMicrosoftTeamsConfiguration:SourceMicrosoftTeamsConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMixpanel:SourceMixpanel": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMixpanelConfiguration:SourceMixpanelConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMixpanelConfiguration:SourceMixpanelConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMixpanel resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMixpanelConfiguration:SourceMixpanelConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMonday:SourceMonday": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMondayConfiguration:SourceMondayConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMondayConfiguration:SourceMondayConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMonday resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMondayConfiguration:SourceMondayConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMongodbInternalPoc:SourceMongodbInternalPoc": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMongodbInternalPocConfiguration:SourceMongodbInternalPocConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMongodbInternalPocConfiguration:SourceMongodbInternalPocConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMongodbInternalPoc resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMongodbInternalPocConfiguration:SourceMongodbInternalPocConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMongodbV2:SourceMongodbV2": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMongodbV2Configuration:SourceMongodbV2Configuration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMongodbV2Configuration:SourceMongodbV2Configuration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMongodbV2 resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMongodbV2Configuration:SourceMongodbV2Configuration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMssql:SourceMssql": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfiguration:SourceMssqlConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfiguration:SourceMssqlConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMssql resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMssqlConfiguration:SourceMssqlConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMyHours:SourceMyHours": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMyHoursConfiguration:SourceMyHoursConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMyHoursConfiguration:SourceMyHoursConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMyHours resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMyHoursConfiguration:SourceMyHoursConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMysql:SourceMysql": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfiguration:SourceMysqlConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfiguration:SourceMysqlConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMysql resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMysqlConfiguration:SourceMysqlConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceNetsuite:SourceNetsuite": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceNetsuiteConfiguration:SourceNetsuiteConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceNetsuiteConfiguration:SourceNetsuiteConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceNetsuite resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceNetsuiteConfiguration:SourceNetsuiteConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceNotion:SourceNotion": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceNotionConfiguration:SourceNotionConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceNotionConfiguration:SourceNotionConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceNotion resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceNotionConfiguration:SourceNotionConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceNytimes:SourceNytimes": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceNytimesConfiguration:SourceNytimesConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceNytimesConfiguration:SourceNytimesConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceNytimes resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceNytimesConfiguration:SourceNytimesConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceOkta:SourceOkta": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOktaConfiguration:SourceOktaConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOktaConfiguration:SourceOktaConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceOkta resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceOktaConfiguration:SourceOktaConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceOmnisend:SourceOmnisend": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOmnisendConfiguration:SourceOmnisendConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOmnisendConfiguration:SourceOmnisendConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceOmnisend resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceOmnisendConfiguration:SourceOmnisendConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceOnesignal:SourceOnesignal": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOnesignalConfiguration:SourceOnesignalConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOnesignalConfiguration:SourceOnesignalConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceOnesignal resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceOnesignalConfiguration:SourceOnesignalConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceOracle:SourceOracle": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfiguration:SourceOracleConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfiguration:SourceOracleConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceOracle resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceOracleConfiguration:SourceOracleConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceOrb:SourceOrb": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOrbConfiguration:SourceOrbConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOrbConfiguration:SourceOrbConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceOrb resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceOrbConfiguration:SourceOrbConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceOrbit:SourceOrbit": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOrbitConfiguration:SourceOrbitConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOrbitConfiguration:SourceOrbitConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceOrbit resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceOrbitConfiguration:SourceOrbitConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceOutbrainAmplify:SourceOutbrainAmplify": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOutbrainAmplifyConfiguration:SourceOutbrainAmplifyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOutbrainAmplifyConfiguration:SourceOutbrainAmplifyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceOutbrainAmplify resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceOutbrainAmplifyConfiguration:SourceOutbrainAmplifyConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceOutreach:SourceOutreach": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOutreachConfiguration:SourceOutreachConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOutreachConfiguration:SourceOutreachConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceOutreach resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceOutreachConfiguration:SourceOutreachConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePaypalTransaction:SourcePaypalTransaction": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePaypalTransactionConfiguration:SourcePaypalTransactionConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePaypalTransactionConfiguration:SourcePaypalTransactionConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePaypalTransaction resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePaypalTransactionConfiguration:SourcePaypalTransactionConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePaystack:SourcePaystack": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePaystackConfiguration:SourcePaystackConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePaystackConfiguration:SourcePaystackConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePaystack resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePaystackConfiguration:SourcePaystackConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePendo:SourcePendo": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePendoConfiguration:SourcePendoConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePendoConfiguration:SourcePendoConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePendo resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePendoConfiguration:SourcePendoConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePersistiq:SourcePersistiq": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePersistiqConfiguration:SourcePersistiqConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePersistiqConfiguration:SourcePersistiqConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePersistiq resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePersistiqConfiguration:SourcePersistiqConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePexelsApi:SourcePexelsApi": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePexelsApiConfiguration:SourcePexelsApiConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePexelsApiConfiguration:SourcePexelsApiConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePexelsApi resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePexelsApiConfiguration:SourcePexelsApiConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePinterest:SourcePinterest": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePinterestConfiguration:SourcePinterestConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePinterestConfiguration:SourcePinterestConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePinterest resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePinterestConfiguration:SourcePinterestConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePipedrive:SourcePipedrive": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePipedriveConfiguration:SourcePipedriveConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePipedriveConfiguration:SourcePipedriveConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePipedrive resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePipedriveConfiguration:SourcePipedriveConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePocket:SourcePocket": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePocketConfiguration:SourcePocketConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePocketConfiguration:SourcePocketConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePocket resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePocketConfiguration:SourcePocketConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePokeapi:SourcePokeapi": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePokeapiConfiguration:SourcePokeapiConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePokeapiConfiguration:SourcePokeapiConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePokeapi resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePokeapiConfiguration:SourcePokeapiConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePolygonStockApi:SourcePolygonStockApi": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePolygonStockApiConfiguration:SourcePolygonStockApiConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePolygonStockApiConfiguration:SourcePolygonStockApiConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePolygonStockApi resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePolygonStockApiConfiguration:SourcePolygonStockApiConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePostgres:SourcePostgres": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfiguration:SourcePostgresConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfiguration:SourcePostgresConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePostgres resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePostgresConfiguration:SourcePostgresConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePosthog:SourcePosthog": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePosthogConfiguration:SourcePosthogConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePosthogConfiguration:SourcePosthogConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePosthog resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePosthogConfiguration:SourcePosthogConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePostmarkapp:SourcePostmarkapp": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePostmarkappConfiguration:SourcePostmarkappConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePostmarkappConfiguration:SourcePostmarkappConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePostmarkapp resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePostmarkappConfiguration:SourcePostmarkappConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePrestashop:SourcePrestashop": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePrestashopConfiguration:SourcePrestashopConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePrestashopConfiguration:SourcePrestashopConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePrestashop resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePrestashopConfiguration:SourcePrestashopConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePunkApi:SourcePunkApi": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePunkApiConfiguration:SourcePunkApiConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePunkApiConfiguration:SourcePunkApiConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePunkApi resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePunkApiConfiguration:SourcePunkApiConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePypi:SourcePypi": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePypiConfiguration:SourcePypiConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePypiConfiguration:SourcePypiConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePypi resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePypiConfiguration:SourcePypiConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceQualaroo:SourceQualaroo": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceQualarooConfiguration:SourceQualarooConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceQualarooConfiguration:SourceQualarooConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceQualaroo resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceQualarooConfiguration:SourceQualarooConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceRailz:SourceRailz": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRailzConfiguration:SourceRailzConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRailzConfiguration:SourceRailzConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceRailz resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceRailzConfiguration:SourceRailzConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceRecharge:SourceRecharge": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRechargeConfiguration:SourceRechargeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRechargeConfiguration:SourceRechargeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceRecharge resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceRechargeConfiguration:SourceRechargeConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceRecreation:SourceRecreation": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRecreationConfiguration:SourceRecreationConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRecreationConfiguration:SourceRecreationConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceRecreation resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceRecreationConfiguration:SourceRecreationConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceRecruitee:SourceRecruitee": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRecruiteeConfiguration:SourceRecruiteeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRecruiteeConfiguration:SourceRecruiteeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceRecruitee resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceRecruiteeConfiguration:SourceRecruiteeConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceRecurly:SourceRecurly": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRecurlyConfiguration:SourceRecurlyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRecurlyConfiguration:SourceRecurlyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceRecurly resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceRecurlyConfiguration:SourceRecurlyConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceRedshift:SourceRedshift": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRedshiftConfiguration:SourceRedshiftConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRedshiftConfiguration:SourceRedshiftConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceRedshift resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceRedshiftConfiguration:SourceRedshiftConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceRetently:SourceRetently": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRetentlyConfiguration:SourceRetentlyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRetentlyConfiguration:SourceRetentlyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceRetently resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceRetentlyConfiguration:SourceRetentlyConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceRkiCovid:SourceRkiCovid": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRkiCovidConfiguration:SourceRkiCovidConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRkiCovidConfiguration:SourceRkiCovidConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceRkiCovid resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceRkiCovidConfiguration:SourceRkiCovidConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceRss:SourceRss": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRssConfiguration:SourceRssConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRssConfiguration:SourceRssConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceRss resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceRssConfiguration:SourceRssConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceS3:SourceS3": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceS3Configuration:SourceS3Configuration",
                    "description": "NOTE: When this Spec is changed, legacy_config_transformer.py must also be modified to uptake the changes because it is\nresponsible for converting legacy S3 v3 configs into v4 configs using the File-Based CDK.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceS3Configuration:SourceS3Configuration",
                    "description": "NOTE: When this Spec is changed, legacy_config_transformer.py must also be modified to uptake the changes because it is\nresponsible for converting legacy S3 v3 configs into v4 configs using the File-Based CDK.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceS3 resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceS3Configuration:SourceS3Configuration",
                        "description": "NOTE: When this Spec is changed, legacy_config_transformer.py must also be modified to uptake the changes because it is\nresponsible for converting legacy S3 v3 configs into v4 configs using the File-Based CDK.\n"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSalesforce:SourceSalesforce": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSalesforceConfiguration:SourceSalesforceConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSalesforceConfiguration:SourceSalesforceConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSalesforce resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSalesforceConfiguration:SourceSalesforceConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSalesloft:SourceSalesloft": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSalesloftConfiguration:SourceSalesloftConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSalesloftConfiguration:SourceSalesloftConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSalesloft resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSalesloftConfiguration:SourceSalesloftConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSapFieldglass:SourceSapFieldglass": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSapFieldglassConfiguration:SourceSapFieldglassConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSapFieldglassConfiguration:SourceSapFieldglassConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSapFieldglass resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSapFieldglassConfiguration:SourceSapFieldglassConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSecoda:SourceSecoda": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSecodaConfiguration:SourceSecodaConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSecodaConfiguration:SourceSecodaConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSecoda resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSecodaConfiguration:SourceSecodaConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSendgrid:SourceSendgrid": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSendgridConfiguration:SourceSendgridConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSendgridConfiguration:SourceSendgridConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSendgrid resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSendgridConfiguration:SourceSendgridConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSendinblue:SourceSendinblue": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSendinblueConfiguration:SourceSendinblueConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSendinblueConfiguration:SourceSendinblueConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSendinblue resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSendinblueConfiguration:SourceSendinblueConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSenseforce:SourceSenseforce": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSenseforceConfiguration:SourceSenseforceConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSenseforceConfiguration:SourceSenseforceConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSenseforce resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSenseforceConfiguration:SourceSenseforceConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSentry:SourceSentry": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSentryConfiguration:SourceSentryConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSentryConfiguration:SourceSentryConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSentry resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSentryConfiguration:SourceSentryConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSftp:SourceSftp": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSftpConfiguration:SourceSftpConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSftpConfiguration:SourceSftpConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSftp resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSftpConfiguration:SourceSftpConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSftpBulk:SourceSftpBulk": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSftpBulkConfiguration:SourceSftpBulkConfiguration",
                    "description": "Used during spec; allows the developer to configure the cloud provider specific options that are needed when users\nconfigure a file-based source.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSftpBulkConfiguration:SourceSftpBulkConfiguration",
                    "description": "Used during spec; allows the developer to configure the cloud provider specific options that are needed when users\nconfigure a file-based source.\n"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSftpBulk resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSftpBulkConfiguration:SourceSftpBulkConfiguration",
                        "description": "Used during spec; allows the developer to configure the cloud provider specific options that are needed when users\nconfigure a file-based source.\n"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceShopify:SourceShopify": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceShopifyConfiguration:SourceShopifyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceShopifyConfiguration:SourceShopifyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceShopify resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceShopifyConfiguration:SourceShopifyConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceShortio:SourceShortio": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceShortioConfiguration:SourceShortioConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceShortioConfiguration:SourceShortioConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceShortio resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceShortioConfiguration:SourceShortioConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSlack:SourceSlack": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSlackConfiguration:SourceSlackConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSlackConfiguration:SourceSlackConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSlack resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSlackConfiguration:SourceSlackConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSmaily:SourceSmaily": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSmailyConfiguration:SourceSmailyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSmailyConfiguration:SourceSmailyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSmaily resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSmailyConfiguration:SourceSmailyConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSmartengage:SourceSmartengage": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSmartengageConfiguration:SourceSmartengageConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSmartengageConfiguration:SourceSmartengageConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSmartengage resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSmartengageConfiguration:SourceSmartengageConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSmartsheets:SourceSmartsheets": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSmartsheetsConfiguration:SourceSmartsheetsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSmartsheetsConfiguration:SourceSmartsheetsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSmartsheets resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSmartsheetsConfiguration:SourceSmartsheetsConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSnapchatMarketing:SourceSnapchatMarketing": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSnapchatMarketingConfiguration:SourceSnapchatMarketingConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSnapchatMarketingConfiguration:SourceSnapchatMarketingConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSnapchatMarketing resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSnapchatMarketingConfiguration:SourceSnapchatMarketingConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSnowflake:SourceSnowflake": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSnowflakeConfiguration:SourceSnowflakeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSnowflakeConfiguration:SourceSnowflakeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSnowflake resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSnowflakeConfiguration:SourceSnowflakeConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSonarCloud:SourceSonarCloud": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSonarCloudConfiguration:SourceSonarCloudConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSonarCloudConfiguration:SourceSonarCloudConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSonarCloud resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSonarCloudConfiguration:SourceSonarCloudConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSpacexApi:SourceSpacexApi": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSpacexApiConfiguration:SourceSpacexApiConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSpacexApiConfiguration:SourceSpacexApiConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSpacexApi resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSpacexApiConfiguration:SourceSpacexApiConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSquare:SourceSquare": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSquareConfiguration:SourceSquareConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSquareConfiguration:SourceSquareConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSquare resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSquareConfiguration:SourceSquareConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceStrava:SourceStrava": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceStravaConfiguration:SourceStravaConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceStravaConfiguration:SourceStravaConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceStrava resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceStravaConfiguration:SourceStravaConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceStripe:SourceStripe": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceStripeConfiguration:SourceStripeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceStripeConfiguration:SourceStripeConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceStripe resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceStripeConfiguration:SourceStripeConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSurveySparrow:SourceSurveySparrow": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSurveySparrowConfiguration:SourceSurveySparrowConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSurveySparrowConfiguration:SourceSurveySparrowConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSurveySparrow resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSurveySparrowConfiguration:SourceSurveySparrowConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSurveymonkey:SourceSurveymonkey": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSurveymonkeyConfiguration:SourceSurveymonkeyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSurveymonkeyConfiguration:SourceSurveymonkeyConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSurveymonkey resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSurveymonkeyConfiguration:SourceSurveymonkeyConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTempo:SourceTempo": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTempoConfiguration:SourceTempoConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTempoConfiguration:SourceTempoConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTempo resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTempoConfiguration:SourceTempoConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTheGuardianApi:SourceTheGuardianApi": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTheGuardianApiConfiguration:SourceTheGuardianApiConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTheGuardianApiConfiguration:SourceTheGuardianApiConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTheGuardianApi resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTheGuardianApiConfiguration:SourceTheGuardianApiConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTiktokMarketing:SourceTiktokMarketing": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTiktokMarketingConfiguration:SourceTiktokMarketingConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTiktokMarketingConfiguration:SourceTiktokMarketingConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTiktokMarketing resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTiktokMarketingConfiguration:SourceTiktokMarketingConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTrello:SourceTrello": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTrelloConfiguration:SourceTrelloConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTrelloConfiguration:SourceTrelloConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTrello resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTrelloConfiguration:SourceTrelloConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTrustpilot:SourceTrustpilot": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTrustpilotConfiguration:SourceTrustpilotConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTrustpilotConfiguration:SourceTrustpilotConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTrustpilot resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTrustpilotConfiguration:SourceTrustpilotConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTvmazeSchedule:SourceTvmazeSchedule": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTvmazeScheduleConfiguration:SourceTvmazeScheduleConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTvmazeScheduleConfiguration:SourceTvmazeScheduleConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTvmazeSchedule resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTvmazeScheduleConfiguration:SourceTvmazeScheduleConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTwilio:SourceTwilio": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTwilioConfiguration:SourceTwilioConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTwilioConfiguration:SourceTwilioConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTwilio resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTwilioConfiguration:SourceTwilioConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTwilioTaskrouter:SourceTwilioTaskrouter": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTwilioTaskrouterConfiguration:SourceTwilioTaskrouterConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTwilioTaskrouterConfiguration:SourceTwilioTaskrouterConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTwilioTaskrouter resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTwilioTaskrouterConfiguration:SourceTwilioTaskrouterConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTwitter:SourceTwitter": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTwitterConfiguration:SourceTwitterConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTwitterConfiguration:SourceTwitterConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTwitter resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTwitterConfiguration:SourceTwitterConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTypeform:SourceTypeform": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTypeformConfiguration:SourceTypeformConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTypeformConfiguration:SourceTypeformConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTypeform resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTypeformConfiguration:SourceTypeformConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceUsCensus:SourceUsCensus": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceUsCensusConfiguration:SourceUsCensusConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceUsCensusConfiguration:SourceUsCensusConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceUsCensus resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceUsCensusConfiguration:SourceUsCensusConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceVantage:SourceVantage": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceVantageConfiguration:SourceVantageConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceVantageConfiguration:SourceVantageConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceVantage resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceVantageConfiguration:SourceVantageConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceWebflow:SourceWebflow": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceWebflowConfiguration:SourceWebflowConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceWebflowConfiguration:SourceWebflowConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceWebflow resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceWebflowConfiguration:SourceWebflowConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceWhiskyHunter:SourceWhiskyHunter": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceWhiskyHunterConfiguration:SourceWhiskyHunterConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceWhiskyHunterConfiguration:SourceWhiskyHunterConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceWhiskyHunter resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceWhiskyHunterConfiguration:SourceWhiskyHunterConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceWikipediaPageviews:SourceWikipediaPageviews": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceWikipediaPageviewsConfiguration:SourceWikipediaPageviewsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceWikipediaPageviewsConfiguration:SourceWikipediaPageviewsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceWikipediaPageviews resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceWikipediaPageviewsConfiguration:SourceWikipediaPageviewsConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceWoocommerce:SourceWoocommerce": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceWoocommerceConfiguration:SourceWoocommerceConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceWoocommerceConfiguration:SourceWoocommerceConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceWoocommerce resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceWoocommerceConfiguration:SourceWoocommerceConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceXkcd:SourceXkcd": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceXkcdConfiguration:SourceXkcdConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceXkcdConfiguration:SourceXkcdConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceXkcd resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceXkcdConfiguration:SourceXkcdConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceYandexMetrica:SourceYandexMetrica": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceYandexMetricaConfiguration:SourceYandexMetricaConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceYandexMetricaConfiguration:SourceYandexMetricaConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceYandexMetrica resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceYandexMetricaConfiguration:SourceYandexMetricaConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceYotpo:SourceYotpo": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceYotpoConfiguration:SourceYotpoConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceYotpoConfiguration:SourceYotpoConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceYotpo resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceYotpoConfiguration:SourceYotpoConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceYoutubeAnalytics:SourceYoutubeAnalytics": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceYoutubeAnalyticsConfiguration:SourceYoutubeAnalyticsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceYoutubeAnalyticsConfiguration:SourceYoutubeAnalyticsConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceYoutubeAnalytics resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceYoutubeAnalyticsConfiguration:SourceYoutubeAnalyticsConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceZendeskChat:SourceZendeskChat": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZendeskChatConfiguration:SourceZendeskChatConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZendeskChatConfiguration:SourceZendeskChatConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceZendeskChat resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceZendeskChatConfiguration:SourceZendeskChatConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceZendeskSell:SourceZendeskSell": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSellConfiguration:SourceZendeskSellConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSellConfiguration:SourceZendeskSellConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceZendeskSell resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceZendeskSellConfiguration:SourceZendeskSellConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceZendeskSunshine:SourceZendeskSunshine": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSunshineConfiguration:SourceZendeskSunshineConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSunshineConfiguration:SourceZendeskSunshineConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceZendeskSunshine resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceZendeskSunshineConfiguration:SourceZendeskSunshineConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceZendeskSupport:SourceZendeskSupport": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSupportConfiguration:SourceZendeskSupportConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSupportConfiguration:SourceZendeskSupportConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceZendeskSupport resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceZendeskSupportConfiguration:SourceZendeskSupportConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceZendeskTalk:SourceZendeskTalk": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZendeskTalkConfiguration:SourceZendeskTalkConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZendeskTalkConfiguration:SourceZendeskTalkConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceZendeskTalk resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceZendeskTalkConfiguration:SourceZendeskTalkConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceZenloop:SourceZenloop": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZenloopConfiguration:SourceZenloopConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZenloopConfiguration:SourceZenloopConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceZenloop resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceZenloopConfiguration:SourceZenloopConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceZohoCrm:SourceZohoCrm": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZohoCrmConfiguration:SourceZohoCrmConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZohoCrmConfiguration:SourceZohoCrmConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceZohoCrm resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceZohoCrmConfiguration:SourceZohoCrmConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceZoom:SourceZoom": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZoomConfiguration:SourceZoomConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZoomConfiguration:SourceZoomConfiguration"
                },
                "definitionId": {
                    "type": "string",
                    "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source e.g. dev-mysql-instance.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceZoom resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceZoomConfiguration:SourceZoomConfiguration"
                    },
                    "definitionId": {
                        "type": "string",
                        "description": "The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided. Requires\nreplacement if changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the source e.g. dev-mysql-instance.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow. Requires replacement if changed.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/workspace:Workspace": {
            "properties": {
                "dataResidency": {
                    "type": "string",
                    "description": "must be one of [\"auto\", \"us\", \"eu\"]\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the workspace\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "ID of organization to add workspace to. Requires replacement if changed.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "dataResidency",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the workspace\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "ID of organization to add workspace to. Requires replacement if changed.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Workspace resources.\n",
                "properties": {
                    "dataResidency": {
                        "type": "string",
                        "description": "must be one of [\"auto\", \"us\", \"eu\"]\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the workspace\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "ID of organization to add workspace to. Requires replacement if changed.\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "airbyte:index/getConnection:getConnection": {
            "inputs": {
                "description": "A collection of arguments for invoking getConnection.\n",
                "properties": {
                    "connectionId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "connectionId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getConnection.\n",
                "properties": {
                    "configurations": {
                        "$ref": "#/types/airbyte:index/getConnectionConfigurations:getConnectionConfigurations"
                    },
                    "connectionId": {
                        "type": "string"
                    },
                    "dataResidency": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespaceDefinition": {
                        "type": "string"
                    },
                    "namespaceFormat": {
                        "type": "string"
                    },
                    "nonBreakingSchemaUpdatesBehavior": {
                        "type": "string"
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "schedule": {
                        "$ref": "#/types/airbyte:index/getConnectionSchedule:getConnectionSchedule"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configurations",
                    "connectionId",
                    "dataResidency",
                    "destinationId",
                    "name",
                    "namespaceDefinition",
                    "namespaceFormat",
                    "nonBreakingSchemaUpdatesBehavior",
                    "prefix",
                    "schedule",
                    "sourceId",
                    "status",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationAstra:getDestinationAstra": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationAstra.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationAstra.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationAwsDatalake:getDestinationAwsDatalake": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationAwsDatalake.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationAwsDatalake.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationAzureBlobStorage:getDestinationAzureBlobStorage": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationAzureBlobStorage.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationAzureBlobStorage.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationBigquery:getDestinationBigquery": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationBigquery.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationBigquery.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationClickhouse:getDestinationClickhouse": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationClickhouse.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationClickhouse.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationConvex:getDestinationConvex": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationConvex.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationConvex.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationCustom:getDestinationCustom": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationCustom.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationCustom.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationDatabricks:getDestinationDatabricks": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationDatabricks.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationDatabricks.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationDevNull:getDestinationDevNull": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationDevNull.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationDevNull.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationDuckdb:getDestinationDuckdb": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationDuckdb.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationDuckdb.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationDynamodb:getDestinationDynamodb": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationDynamodb.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationDynamodb.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationElasticsearch:getDestinationElasticsearch": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationElasticsearch.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationElasticsearch.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationFirestore:getDestinationFirestore": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationFirestore.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationFirestore.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationGcs:getDestinationGcs": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationGcs.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationGcs.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationGoogleSheets:getDestinationGoogleSheets": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationGoogleSheets.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationGoogleSheets.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationLangchain:getDestinationLangchain": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationLangchain.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationLangchain.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationMilvus:getDestinationMilvus": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationMilvus.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationMilvus.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationMongodb:getDestinationMongodb": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationMongodb.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationMongodb.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationMssql:getDestinationMssql": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationMssql.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationMssql.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationMysql:getDestinationMysql": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationMysql.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationMysql.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationOracle:getDestinationOracle": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationOracle.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationOracle.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationPinecone:getDestinationPinecone": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationPinecone.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationPinecone.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationPostgres:getDestinationPostgres": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationPostgres.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationPostgres.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationPubsub:getDestinationPubsub": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationPubsub.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationPubsub.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationQdrant:getDestinationQdrant": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationQdrant.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationQdrant.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationRedis:getDestinationRedis": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationRedis.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationRedis.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationRedshift:getDestinationRedshift": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationRedshift.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationRedshift.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationS3:getDestinationS3": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationS3.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationS3.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationS3Glue:getDestinationS3Glue": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationS3Glue.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationS3Glue.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationSftpJson:getDestinationSftpJson": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationSftpJson.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationSftpJson.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationSnowflake:getDestinationSnowflake": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationSnowflake.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationSnowflake.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationSnowflakeCortex:getDestinationSnowflakeCortex": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationSnowflakeCortex.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationSnowflakeCortex.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationTeradata:getDestinationTeradata": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationTeradata.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationTeradata.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationTypesense:getDestinationTypesense": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationTypesense.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationTypesense.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationVectara:getDestinationVectara": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationVectara.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationVectara.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationWeaviate:getDestinationWeaviate": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationWeaviate.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationWeaviate.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationYellowbrick:getDestinationYellowbrick": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationYellowbrick.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationYellowbrick.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "destinationType",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getPermission:getPermission": {
            "inputs": {
                "description": "A collection of arguments for invoking getPermission.\n",
                "properties": {
                    "permissionId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "permissionId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPermission.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "permissionId": {
                        "type": "string"
                    },
                    "permissionType": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "organizationId",
                    "permissionId",
                    "permissionType",
                    "userId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAha:getSourceAha": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAha.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAha.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAircall:getSourceAircall": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAircall.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAircall.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAirtable:getSourceAirtable": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAirtable.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAirtable.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAmazonAds:getSourceAmazonAds": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAmazonAds.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAmazonAds.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAmazonSellerPartner:getSourceAmazonSellerPartner": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAmazonSellerPartner.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAmazonSellerPartner.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAmazonSqs:getSourceAmazonSqs": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAmazonSqs.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAmazonSqs.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAmplitude:getSourceAmplitude": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAmplitude.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAmplitude.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceApifyDataset:getSourceApifyDataset": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceApifyDataset.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceApifyDataset.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAppfollow:getSourceAppfollow": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAppfollow.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAppfollow.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAsana:getSourceAsana": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAsana.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAsana.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAuth0:getSourceAuth0": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAuth0.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAuth0.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAwsCloudtrail:getSourceAwsCloudtrail": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAwsCloudtrail.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAwsCloudtrail.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAzureBlobStorage:getSourceAzureBlobStorage": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAzureBlobStorage.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAzureBlobStorage.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAzureTable:getSourceAzureTable": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAzureTable.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAzureTable.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceBambooHr:getSourceBambooHr": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceBambooHr.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceBambooHr.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceBigquery:getSourceBigquery": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceBigquery.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceBigquery.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceBingAds:getSourceBingAds": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceBingAds.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceBingAds.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceBraintree:getSourceBraintree": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceBraintree.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceBraintree.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceBraze:getSourceBraze": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceBraze.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceBraze.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceCart:getSourceCart": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceCart.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceCart.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceChargebee:getSourceChargebee": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceChargebee.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceChargebee.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceChartmogul:getSourceChartmogul": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceChartmogul.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceChartmogul.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceClickhouse:getSourceClickhouse": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceClickhouse.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceClickhouse.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceClickupApi:getSourceClickupApi": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceClickupApi.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceClickupApi.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceClockify:getSourceClockify": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceClockify.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceClockify.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceCloseCom:getSourceCloseCom": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceCloseCom.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceCloseCom.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceCoda:getSourceCoda": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceCoda.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceCoda.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceCoinApi:getSourceCoinApi": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceCoinApi.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceCoinApi.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceCoinmarketcap:getSourceCoinmarketcap": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceCoinmarketcap.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceCoinmarketcap.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceConfigcat:getSourceConfigcat": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceConfigcat.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceConfigcat.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceConfluence:getSourceConfluence": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceConfluence.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceConfluence.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceConvex:getSourceConvex": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceConvex.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceConvex.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceCustom:getSourceCustom": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceCustom.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceCustom.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceDatascope:getSourceDatascope": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceDatascope.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceDatascope.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceDelighted:getSourceDelighted": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceDelighted.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceDelighted.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceDixa:getSourceDixa": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceDixa.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceDixa.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceDockerhub:getSourceDockerhub": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceDockerhub.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceDockerhub.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceDremio:getSourceDremio": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceDremio.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceDremio.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceDynamodb:getSourceDynamodb": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceDynamodb.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceDynamodb.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceEmailoctopus:getSourceEmailoctopus": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceEmailoctopus.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceEmailoctopus.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceExchangeRates:getSourceExchangeRates": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceExchangeRates.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceExchangeRates.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceFacebookMarketing:getSourceFacebookMarketing": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceFacebookMarketing.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceFacebookMarketing.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceFaker:getSourceFaker": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceFaker.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceFaker.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceFauna:getSourceFauna": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceFauna.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceFauna.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceFile:getSourceFile": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceFile.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceFile.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceFirebolt:getSourceFirebolt": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceFirebolt.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceFirebolt.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceFreshcaller:getSourceFreshcaller": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceFreshcaller.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceFreshcaller.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceFreshdesk:getSourceFreshdesk": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceFreshdesk.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceFreshdesk.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceFreshsales:getSourceFreshsales": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceFreshsales.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceFreshsales.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGainsightPx:getSourceGainsightPx": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGainsightPx.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGainsightPx.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGcs:getSourceGcs": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGcs.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGcs.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGetlago:getSourceGetlago": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGetlago.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGetlago.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGithub:getSourceGithub": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGithub.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGithub.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGitlab:getSourceGitlab": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGitlab.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGitlab.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGlassfrog:getSourceGlassfrog": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGlassfrog.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGlassfrog.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGnews:getSourceGnews": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGnews.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGnews.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGoogleAds:getSourceGoogleAds": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGoogleAds.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGoogleAds.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGoogleAnalyticsDataApi:getSourceGoogleAnalyticsDataApi": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGoogleAnalyticsDataApi.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGoogleAnalyticsDataApi.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGoogleAnalyticsV4ServiceAccountOnly:getSourceGoogleAnalyticsV4ServiceAccountOnly": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGoogleAnalyticsV4ServiceAccountOnly.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGoogleAnalyticsV4ServiceAccountOnly.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGoogleDirectory:getSourceGoogleDirectory": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGoogleDirectory.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGoogleDirectory.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGoogleDrive:getSourceGoogleDrive": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGoogleDrive.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGoogleDrive.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGooglePagespeedInsights:getSourceGooglePagespeedInsights": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGooglePagespeedInsights.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGooglePagespeedInsights.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGoogleSearchConsole:getSourceGoogleSearchConsole": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGoogleSearchConsole.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGoogleSearchConsole.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGoogleSheets:getSourceGoogleSheets": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGoogleSheets.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGoogleSheets.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGoogleWebfonts:getSourceGoogleWebfonts": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGoogleWebfonts.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGoogleWebfonts.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGreenhouse:getSourceGreenhouse": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGreenhouse.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGreenhouse.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGridly:getSourceGridly": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGridly.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGridly.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceHarvest:getSourceHarvest": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceHarvest.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceHarvest.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceHubplanner:getSourceHubplanner": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceHubplanner.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceHubplanner.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceHubspot:getSourceHubspot": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceHubspot.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceHubspot.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceInsightly:getSourceInsightly": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceInsightly.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceInsightly.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceInstagram:getSourceInstagram": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceInstagram.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceInstagram.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceInstatus:getSourceInstatus": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceInstatus.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceInstatus.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceIntercom:getSourceIntercom": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceIntercom.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceIntercom.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceIp2whois:getSourceIp2whois": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceIp2whois.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceIp2whois.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceIterable:getSourceIterable": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceIterable.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceIterable.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceJira:getSourceJira": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceJira.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceJira.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceK6Cloud:getSourceK6Cloud": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceK6Cloud.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceK6Cloud.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceKlarna:getSourceKlarna": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceKlarna.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceKlarna.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceKlaviyo:getSourceKlaviyo": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceKlaviyo.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceKlaviyo.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceKyve:getSourceKyve": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceKyve.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceKyve.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceLaunchdarkly:getSourceLaunchdarkly": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceLaunchdarkly.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceLaunchdarkly.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceLemlist:getSourceLemlist": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceLemlist.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceLemlist.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceLeverHiring:getSourceLeverHiring": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceLeverHiring.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceLeverHiring.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceLinkedinAds:getSourceLinkedinAds": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceLinkedinAds.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceLinkedinAds.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceLinkedinPages:getSourceLinkedinPages": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceLinkedinPages.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceLinkedinPages.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceLinnworks:getSourceLinnworks": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceLinnworks.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceLinnworks.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceLokalise:getSourceLokalise": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceLokalise.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceLokalise.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMailchimp:getSourceMailchimp": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMailchimp.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMailchimp.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMailgun:getSourceMailgun": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMailgun.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMailgun.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMailjetSms:getSourceMailjetSms": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMailjetSms.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMailjetSms.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMarketo:getSourceMarketo": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMarketo.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMarketo.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMetabase:getSourceMetabase": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMetabase.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMetabase.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMicrosoftOnedrive:getSourceMicrosoftOnedrive": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMicrosoftOnedrive.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMicrosoftOnedrive.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMicrosoftSharepoint:getSourceMicrosoftSharepoint": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMicrosoftSharepoint.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMicrosoftSharepoint.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMicrosoftTeams:getSourceMicrosoftTeams": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMicrosoftTeams.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMicrosoftTeams.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMixpanel:getSourceMixpanel": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMixpanel.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMixpanel.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMonday:getSourceMonday": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMonday.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMonday.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMongodbInternalPoc:getSourceMongodbInternalPoc": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMongodbInternalPoc.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMongodbInternalPoc.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMongodbV2:getSourceMongodbV2": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMongodbV2.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMongodbV2.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMssql:getSourceMssql": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMssql.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMssql.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMyHours:getSourceMyHours": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMyHours.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMyHours.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMysql:getSourceMysql": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMysql.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMysql.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceNetsuite:getSourceNetsuite": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceNetsuite.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceNetsuite.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceNotion:getSourceNotion": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceNotion.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceNotion.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceNytimes:getSourceNytimes": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceNytimes.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceNytimes.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceOkta:getSourceOkta": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceOkta.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceOkta.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceOmnisend:getSourceOmnisend": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceOmnisend.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceOmnisend.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceOnesignal:getSourceOnesignal": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceOnesignal.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceOnesignal.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceOracle:getSourceOracle": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceOracle.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceOracle.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceOrb:getSourceOrb": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceOrb.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceOrb.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceOrbit:getSourceOrbit": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceOrbit.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceOrbit.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceOutbrainAmplify:getSourceOutbrainAmplify": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceOutbrainAmplify.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceOutbrainAmplify.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceOutreach:getSourceOutreach": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceOutreach.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceOutreach.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePaypalTransaction:getSourcePaypalTransaction": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePaypalTransaction.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePaypalTransaction.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePaystack:getSourcePaystack": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePaystack.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePaystack.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePendo:getSourcePendo": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePendo.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePendo.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePersistiq:getSourcePersistiq": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePersistiq.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePersistiq.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePexelsApi:getSourcePexelsApi": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePexelsApi.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePexelsApi.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePinterest:getSourcePinterest": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePinterest.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePinterest.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePipedrive:getSourcePipedrive": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePipedrive.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePipedrive.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePocket:getSourcePocket": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePocket.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePocket.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePokeapi:getSourcePokeapi": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePokeapi.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePokeapi.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePolygonStockApi:getSourcePolygonStockApi": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePolygonStockApi.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePolygonStockApi.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePostgres:getSourcePostgres": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePostgres.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePostgres.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePosthog:getSourcePosthog": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePosthog.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePosthog.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePostmarkapp:getSourcePostmarkapp": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePostmarkapp.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePostmarkapp.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePrestashop:getSourcePrestashop": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePrestashop.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePrestashop.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePunkApi:getSourcePunkApi": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePunkApi.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePunkApi.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePypi:getSourcePypi": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePypi.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePypi.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceQualaroo:getSourceQualaroo": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceQualaroo.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceQualaroo.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceRailz:getSourceRailz": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceRailz.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceRailz.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceRecharge:getSourceRecharge": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceRecharge.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceRecharge.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceRecreation:getSourceRecreation": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceRecreation.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceRecreation.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceRecruitee:getSourceRecruitee": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceRecruitee.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceRecruitee.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceRecurly:getSourceRecurly": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceRecurly.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceRecurly.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceRedshift:getSourceRedshift": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceRedshift.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceRedshift.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceRetently:getSourceRetently": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceRetently.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceRetently.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceRkiCovid:getSourceRkiCovid": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceRkiCovid.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceRkiCovid.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceRss:getSourceRss": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceRss.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceRss.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceS3:getSourceS3": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceS3.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceS3.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSalesforce:getSourceSalesforce": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSalesforce.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSalesforce.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSalesloft:getSourceSalesloft": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSalesloft.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSalesloft.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSapFieldglass:getSourceSapFieldglass": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSapFieldglass.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSapFieldglass.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSecoda:getSourceSecoda": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSecoda.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSecoda.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSendgrid:getSourceSendgrid": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSendgrid.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSendgrid.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSendinblue:getSourceSendinblue": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSendinblue.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSendinblue.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSenseforce:getSourceSenseforce": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSenseforce.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSenseforce.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSentry:getSourceSentry": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSentry.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSentry.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSftp:getSourceSftp": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSftp.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSftp.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSftpBulk:getSourceSftpBulk": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSftpBulk.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSftpBulk.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceShopify:getSourceShopify": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceShopify.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceShopify.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceShortio:getSourceShortio": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceShortio.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceShortio.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSlack:getSourceSlack": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSlack.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSlack.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSmaily:getSourceSmaily": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSmaily.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSmaily.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSmartengage:getSourceSmartengage": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSmartengage.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSmartengage.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSmartsheets:getSourceSmartsheets": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSmartsheets.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSmartsheets.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSnapchatMarketing:getSourceSnapchatMarketing": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSnapchatMarketing.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSnapchatMarketing.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSnowflake:getSourceSnowflake": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSnowflake.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSnowflake.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSonarCloud:getSourceSonarCloud": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSonarCloud.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSonarCloud.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSpacexApi:getSourceSpacexApi": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSpacexApi.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSpacexApi.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSquare:getSourceSquare": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSquare.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSquare.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceStrava:getSourceStrava": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceStrava.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceStrava.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceStripe:getSourceStripe": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceStripe.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceStripe.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSurveySparrow:getSourceSurveySparrow": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSurveySparrow.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSurveySparrow.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSurveymonkey:getSourceSurveymonkey": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSurveymonkey.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSurveymonkey.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTempo:getSourceTempo": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTempo.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTempo.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTheGuardianApi:getSourceTheGuardianApi": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTheGuardianApi.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTheGuardianApi.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTiktokMarketing:getSourceTiktokMarketing": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTiktokMarketing.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTiktokMarketing.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTrello:getSourceTrello": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTrello.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTrello.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTrustpilot:getSourceTrustpilot": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTrustpilot.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTrustpilot.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTvmazeSchedule:getSourceTvmazeSchedule": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTvmazeSchedule.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTvmazeSchedule.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTwilio:getSourceTwilio": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTwilio.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTwilio.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTwilioTaskrouter:getSourceTwilioTaskrouter": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTwilioTaskrouter.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTwilioTaskrouter.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTwitter:getSourceTwitter": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTwitter.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTwitter.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTypeform:getSourceTypeform": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTypeform.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTypeform.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceUsCensus:getSourceUsCensus": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceUsCensus.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceUsCensus.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceVantage:getSourceVantage": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceVantage.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceVantage.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceWebflow:getSourceWebflow": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceWebflow.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceWebflow.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceWhiskyHunter:getSourceWhiskyHunter": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceWhiskyHunter.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceWhiskyHunter.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceWikipediaPageviews:getSourceWikipediaPageviews": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceWikipediaPageviews.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceWikipediaPageviews.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceWoocommerce:getSourceWoocommerce": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceWoocommerce.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceWoocommerce.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceXkcd:getSourceXkcd": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceXkcd.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceXkcd.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceYandexMetrica:getSourceYandexMetrica": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceYandexMetrica.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceYandexMetrica.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceYotpo:getSourceYotpo": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceYotpo.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceYotpo.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceYoutubeAnalytics:getSourceYoutubeAnalytics": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceYoutubeAnalytics.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceYoutubeAnalytics.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceZendeskChat:getSourceZendeskChat": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceZendeskChat.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceZendeskChat.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceZendeskSell:getSourceZendeskSell": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceZendeskSell.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceZendeskSell.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceZendeskSunshine:getSourceZendeskSunshine": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceZendeskSunshine.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceZendeskSunshine.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceZendeskSupport:getSourceZendeskSupport": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceZendeskSupport.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceZendeskSupport.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceZendeskTalk:getSourceZendeskTalk": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceZendeskTalk.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceZendeskTalk.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceZenloop:getSourceZenloop": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceZenloop.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceZenloop.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceZohoCrm:getSourceZohoCrm": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceZohoCrm.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceZohoCrm.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceZoom:getSourceZoom": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceZoom.\n",
                "properties": {
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceZoom.\n",
                "properties": {
                    "configuration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "sourceType",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getWorkspace:getWorkspace": {
            "inputs": {
                "description": "A collection of arguments for invoking getWorkspace.\n",
                "properties": {
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "workspaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getWorkspace.\n",
                "properties": {
                    "dataResidency": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "dataResidency",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        }
    }
}